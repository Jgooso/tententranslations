{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0ecd383b\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"download\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"loadingscreen\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"loader\"\n})], -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"table\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", null, \"URL\"), /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  id: \"urltextbox\",\n  name: \"url\",\n  maxlength: \"34\",\n  style: {\n    \"width\": \"280px\"\n  }\n})])]), /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", null, \"Genres\"), /*#__PURE__*/_createElementVNode(\"td\")]), /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", null, \"Tags\"), /*#__PURE__*/_createElementVNode(\"td\")])], -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  id: \"output\",\n  src: \"#\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GenreSelector = _resolveComponent(\"GenreSelector\");\n\n  const _component_TagSelector = _resolveComponent(\"TagSelector\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    id: \"cover-image\",\n    onChange: _cache[0] || (_cache[0] = $event => $options.showFile())\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_4, _createVNode(_component_GenreSelector, {\n    genres: $data.genres,\n    selectedgenres: $data.selectedgenres\n  }, null, 8\n  /* PROPS */\n  , [\"genres\", \"selectedgenres\"]), _hoisted_5, _hoisted_6, _createElementVNode(\"input\", {\n    type: \"submit\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.postData())\n  }), _createVNode(_component_TagSelector, {\n    tags: $data.tags,\n    selectedtags: $data.selectedtags\n  }, null, 8\n  /* PROPS */\n  , [\"tags\", \"selectedtags\"])]);\n}","map":{"version":3,"mappings":";;;;;EACKA,EAAE,EAAG;;;gEACNC,oBAA0D,KAA1D,EAA0D;EAArDD,EAAE,EAAG;AAAgD,CAA1D,EAAyB,cAACC,oBAA0B,KAA1B,EAA0B;EAArBC,KAAK,EAAC;AAAe,CAA1B,CAAD,CAAzB;;AAAA;;gEACAD,oBAaQ,OAbR,EAaQ,IAbR,EAaQ,cAZRA,oBAGK,IAHL,EAGK,IAHL,EAGK,cAFDA,oBAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,CAEC,eADDA,oBAAiG,IAAjG,EAAiG,IAAjG,EAAiG,cAA7FA,oBAAwF,OAAxF,EAAwF;EAAjFE,IAAI,EAAG,MAA0E;EAAnEH,EAAE,EAAG,YAA8D;EAAjDI,IAAI,EAAG,KAA0C;EAApCC,SAAS,EAAC,IAA0B;EAArBC,KAAmB,EAAnB;IAAA;EAAA;AAAqB,CAAxF,CAA6F,CAAjG,CACC,CAHL,CAYQ,eARRL,oBAGK,IAHL,EAGK,IAHL,EAGK,cAFDA,oBAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAEC,eADDA,oBAAS,IAAT,CACC,CAHL,CAQQ,eAJRA,oBAGK,IAHL,EAGK,IAHL,EAGK,cAFDA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,eADDA,oBAAS,IAAT,CACC,CAHL,CAIQ,CAbR;;AAAA;;gEAeAA,oBAA2B,KAA3B,EAA2B;EAAtBD,EAAE,EAAG,QAAiB;EAARO,GAAG,EAAC;AAAI,CAA3B;;AAAA;;gEAKAN,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gEAAIA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;;;;uBAtBRO,oBA4BM,KA5BN,cA4BM,CA3BFC,UA2BE,EA1BFC,UA0BE,EAZFT,oBAA4E,OAA5E,EAA4E;IAArEE,IAAI,EAAG,MAA8D;IAAvDC,IAAI,EAAG,OAAgD;IAAxCJ,EAAE,EAAG,aAAmC;IAApBW,QAAM,sCAAEC,mBAAF;EAAc,CAA5E;;EAAA,CAYE,EAXFC,UAWE,EAVFC,aAGEC,wBAHF,EAGE;IAFDC,MAAM,EAAEC,YAEP;IADDC,cAAc,EAAED;EACf,CAHF;;EAAA,+BAUE,EANFE,UAME,EANEC,UAMF,EALFnB,oBAA2C,OAA3C,EAA2C;IAApCE,IAAI,EAAG,QAA6B;IAAnBkB,OAAK,sCAAET,mBAAF;EAAc,CAA3C,CAKE,EAJFE,aAGEQ,sBAHF,EAGE;IAFDC,IAAI,EAAEN,UAEL;IADDO,YAAY,EAAEP;EACb,CAHF;;EAAA,2BAIE,CA5BN","names":["id","_createElementVNode","class","type","name","maxlength","style","src","_createElementBlock","_hoisted_2","_hoisted_3","onChange","$options","_hoisted_4","_createVNode","_component_GenreSelector","genres","$data","selectedgenres","_hoisted_5","_hoisted_6","onClick","_component_TagSelector","tags","selectedtags"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Upload.vue"],"sourcesContent":["<template>\n<div id = 'download'>\n    <div id = 'loadingscreen'><div class=\"loader\"></div></div>\n    <table>\n    <tr>\n        <td>URL</td>\n        <td><input type = \"text\" id = 'urltextbox' name = 'url' maxlength=\"34\" style='width:280px' ></td>\n    </tr>\n    <tr>\n        <td>Genres</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Tags</td>\n        <td></td>\n    </tr>\n    </table>\n    <input type = 'file' name = 'image' id = 'cover-image' @change='showFile()'>\n    <img id = 'output' src='#'>\n    <GenreSelector\n    :genres='genres'\n    :selectedgenres='selectedgenres'\n    />\n    <br><br>\n    <input type = 'submit' @click='postData()'>\n    <TagSelector\n    :tags='tags'\n    :selectedtags='selectedtags'\n    />\n</div>\n\n</template>\n<script>\nimport { getAPI } from '../axios-api'\nimport tagBox from '../components/TagBox'\nimport GenreSelector from '../components/GenreSelector'\nimport TagSelector from '../components/TagSelector'\nexport default{\n    data(){\n        return{\n            genres:[],\n            tags:[],\n            selectedtags:[],\n            selectedgenres:[],\n            image:[]\n        }\n    },\n    components:{\n        tagBox,\n        GenreSelector,\n        TagSelector\n    },\nmethods:{\n        postData(){\n            const loadingscreen = document.getElementById('loadingscreen')\n            loadingscreen.style.display = 'block'\n            const url = document.getElementById('urltextbox').value;\n            const genres = document.getElementsByClassName('genrecheckbox')\n            const files = document.getElementById('cover-image').files\n            var selectedGenres = []\n            var image = document.getElementById('output');\n\t        const upload = URL.createObjectURL(files[0]);\n            console.log(upload)\n            for(var i=0; i < genres.length; i++){\n                if(genres[i].checked==true){\n                    selectedGenres.push(genres[i].value)\n                }\n            }\n            console.log('posted')\n            getAPI.post('/novel/single', {url:url,tags:this.selectedtags,genres:selectedGenres,image:upload})\n                .then(function (response) {\n                    console.log(response);\n                    loadingscreen.style.display = 'none'\n            })\n                .catch(function (error) {\n                    console.log(error);\n                    loadingscreen.style.display = 'none'\n            }); \n        },\n        showFile(){\n            /*\n            const file = document.getElementById('cover-image').files[0]\n            var image = document.getElementById('output')\n\t        //image.src = URL.createObjectURL(file);\n            console.log(file)\n            console.log(image.src)\n            let data = new FormData()\n            data.append('file', file, file.name)\n            /*\n            getAPI.post('/test',data, {headers: {\"Content-Type\": \"multipart/form-data\"}}).then((res) => {\n                console.log(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            */\n\n            \n        }\n    },\n    created(){\n        getAPI.get('/uploaddata')\n          .then(response => {\n            console.log('Descriptor API has recieved data')\n            this.genres = response.data['genres']\n            this.tags = response.data['tags']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          \n    }\n}\n</script>\n<style scoped>\nbutton{\n    background:none;\n    border-right:none\n}\n\ninput{\n    margin-right:5px;\n}\n#download{\n    width:100%;\n    height:fit-content;\n}\n.loader {\n  border: 16px solid #f3f3f3; /* Light grey */\n  border-top: 16px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  animation: spin 2s linear infinite;\n  margin:auto;\n  margin-top:170px;\n\n}\n#loadingscreen{\n    display:none;\n    position:absolute;\n    z-index:5;\n    width:100%;\n    height:100%;\n    background-color:rgba(0,0,0,0.5)\n}\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n@media (max-width: 775px) {\n    #genres{\n        grid-template-rows: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\n        width:300px;\n        margin-left:20px;\n    }\n    #tagList{\n        width:350px;\n    }\n    #tagselector{\n        width:350px;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}