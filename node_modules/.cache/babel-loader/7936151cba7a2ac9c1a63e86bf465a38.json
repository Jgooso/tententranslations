{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2f0ab1ce\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  for: \"tagfilter\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Filter \");\n\nconst _hoisted_3 = {\n  id: \"tagList\"\n};\nconst _hoisted_4 = {\n  class: \"selectedtaglist\"\n};\nconst _hoisted_5 = {\n  id: \"tagselector\"\n};\nconst _hoisted_6 = [\"id\", \"innerHTML\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_tagBox = _resolveComponent(\"tagBox\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"label\", _hoisted_1, [_hoisted_2, _createElementVNode(\"input\", {\n    id: \"tagfilter\",\n    onKeyup: _cache[0] || (_cache[0] = $event => $options.filterTag()),\n    onFocus: _cache[1] || (_cache[1] = $event => $options.showtags())\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  )]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.selectedtags, tag => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: tag\n    }, [_createVNode(_component_tagBox, {\n      tag: tag,\n      onRemove: $options.removeTag\n    }, null, 8\n    /* PROPS */\n    , [\"tag\", \"onRemove\"])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.tags, tag => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: tag,\n      class: \"tagbutton unselected\",\n      id: tag,\n      innerHTML: tag,\n      onClick: $event => $options.addTag(tag)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_6);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;EACOA,GAAG,EAAC;;;iDAAY;;;EAGbC,EAAE,EAAG;;;EACHC,KAAK,EAAG;;;EAGPD,EAAE,EAAG;;;;;;6DAPlBE,oBAEY,OAFZ,cAEY,aADJA,oBAAiE,OAAjE,EAAiE;IAA1DF,EAAE,EAAG,WAAqD;IAAxCG,OAAK,sCAAEC,oBAAF,CAAmC;IAAnBC,OAAK,sCAAED,mBAAF;EAAc,CAAjE;;EAAA,CACI,CAFZ,GAGIF,oBAOM,KAPN,cAOM,CANFA,oBAEK,IAFL,cAEK,oBADDI,oBAA0FC,SAA1F,EAA0F,IAA1F,EAA0FC,YAAxEC,mBAAwE,EAA/EC,GAAmB,IAAhB;yBAAdJ,oBAA0F,IAA1F,EAA0F;MAAzDK,GAAG,EAAID;IAAkD,CAA1F,EAA2C,CAAEE,aAAwCC,iBAAxC,EAAwC;MAA/BH,GAAG,EAAEA,GAA0B;MAApBI,QAAM,EAAEV;IAAY,CAAxC;;IAAA,sBAAF,CAA3C;GAA0F,CAA1F;;EAAA,CACC,EAFL,CAME,EAHFF,oBAEM,KAFN,cAEM,oBADFI,oBAAqHC,SAArH,EAAqH,IAArH,EAAqHC,YAA/FC,WAA+F,EAAtGC,GAAW,IAAR;yBAAlBJ,oBAAqH,QAArH,EAAqH;MAAxFK,GAAG,EAAED,GAAmF;MAA9ET,KAAK,EAAG,sBAAsE;MAA9CD,EAAE,EAAIU,GAAwC;MAAnCK,SAAY,EAAJL,GAA2B;MAArBM,OAAK,YAAEZ,gBAAOM,GAAP;IAAc,CAArH;;IAAA;GAAqH,CAArH;;EAAA,CACE,EAFN,CAGE,CAPN","names":["for","id","class","_createElementVNode","onKeyup","$options","onFocus","_createElementBlock","_Fragment","_renderList","$props","tag","key","_createVNode","_component_tagBox","onRemove","innerHTML","onClick"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/TagSelector.vue"],"sourcesContent":["<template>\n<label for='tagfilter'>Filter\n        <input id = 'tagfilter' @keyup='filterTag()' @focus='showtags()'>\n    </label>\n    <div  id = 'tagList'>\n        <ul class = 'selectedtaglist' >\n            <li v-for='tag in selectedtags' :key = 'tag'><tagBox :tag='tag' @remove='removeTag'/></li>\n        </ul>\n        <div id = 'tagselector'>\n            <button v-for='tag in tags' :key='tag' class = 'tagbutton unselected' :id = 'tag' v-html='tag' @click='addTag(tag)'/>\n        </div>\n    </div>\n</template>\n\n<script>\nimport tagBox from '../components/TagBox'\n    export default{\n        name:'TagSelector',\n        props:[\n            'tags',\n            'selectedtags'\n        ],\n        methods:{\n            addTag(tag){\n            const tagbutton = document.getElementById(tag)\n            tagbutton.classList.remove('unselected')\n            if(!this.selectedtags.includes(tag)){\n                this.selectedtags.push(tag)\n            }\n           \n        },\n        removeTag(removetag){\n            const index = this.selectedtags.indexOf(removetag)\n            this.selectedtags.splice(index,1)\n            document.getElementById(removetag).classList.add('unselected')\n        },\n        filterTag(){\n            var input, tagbuttons, txtValue\n            input = document.getElementById('tagfilter').value.toUpperCase()\n            tagbuttons = document.getElementsByClassName('tagbutton')\n            for(var i = 0; i < tagbuttons.length; i++){\n                txtValue = tagbuttons[i].value || tagbuttons[i].innerText;\n                if (txtValue.toUpperCase().indexOf(input) > -1) {\n                    tagbuttons[i].style.display = \"\";\n                } else {\n                    tagbuttons[i].style.display = \"none\";\n                }\n            }\n        },\n        showtags(){\n            document.getElementById('tagselector').style.display = 'flex'\n        },\n        }\n    }\n</script>\n\n<style scoped>\n#tagList{\nborder: 2px rgb(244,244,244) solid;\nwidth:800px;\nheight:fit-content;\nmin-height:50px;\nfloat:left;\n\n}\n#tagfilter{\n    height:30px;\n}\n.selectedtaglist{\n    display:inline;\n    list-style: none;\n    padding:0px;\n}\n.selectedtaglist li{\n    display:inline;\n    float:left;\n    margin-left:10px;\n}\n\n#tagselector{\n    display:none;\n    flex-direction:column;\n    overflow:scroll;\n    height:500px;\n    width:100%;\n}\n.tagbutton{\n    border:none;\n    color:lightgray;\n}\n.unselected{\n    color:black;\n}\n.unselected:hover{\n    background-color:blue;\n    color:white;\n}\n#tagSelect{\n    background:lightgray;\n    border:none;\n    -webkit-appearance: none;\n}\n#tags{\n    width:100%\n}\n#tagtextbox{\n    width:500px;\n    text-align:left;\n    overflow-wrap: break-word\n}\n</style>"]},"metadata":{},"sourceType":"module"}