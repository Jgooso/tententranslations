{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-10fa2182\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"genres\"\n};\nconst _hoisted_2 = [\"value\", \"name\", \"checked\", \"innerHTML\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.genres.length, i => {\n    return _openBlock(), _createElementBlock(\"label\", {\n      key: i\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      class: \"genrecheckbox\",\n      value: $props.genres[i],\n      name: \"genre\" + i,\n      checked: $props.selectedgenres.includes($props.genres[i]),\n      innerHTML: $props.genres[i],\n      onClick: $event => $options.changeGenre($props.genres[i])\n    }, null, 8\n    /* PROPS */\n    , _hoisted_2)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;;;;EACKA,EAAE,EAAG;;;;uBAAVC,oBAUU,KAVV,cAUU,oBATFA,oBAQQC,SARR,EAQQ,IARR,EAQQC,YARWC,cAAOC,MAQlB,EARMC,CAAkB,IAAjB;yBAAfL,oBAQQ,OARR,EAQQ;MAR2BM,GAAG,EAAID;IAQlC,CARR,EAA2C,CACvCE,oBAME,OANF,EAME;MANKC,IAAI,EAAC,UAMV;MANsBC,KAAK,EAAG,eAM9B;MALuBC,KAAK,EAAEP,cAAOE,CAAP,CAK9B;MAJuBM,IAAI,YAAYN,CAIvC;MAHuBO,OAAO,EAAET,sBAAeU,QAAf,CAAwBV,cAAOE,CAAP,CAAxB,CAGhC;MAFsBS,SAAkB,EAAVX,cAAOE,CAAP,CAE9B;MADuBU,OAAK,YAAEC,qBAAYb,cAAOE,CAAP,CAAZ;IAC9B,CANF;;IAAA,aADuC,CAA3C;GAQQ,CARR;;EAAA,CASE,EAVV","names":["id","_createElementBlock","_Fragment","_renderList","$props","length","i","key","_createElementVNode","type","class","value","name","checked","includes","innerHTML","onClick","$options"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/GenreSelector.vue"],"sourcesContent":["<template>\n<div id = 'genres'>\n        <label v-for='i in genres.length' :key = 'i'>\n            <input type='checkbox'  class = 'genrecheckbox' \n                                    :value='genres[i]' \n                                    :name = '\"genre\"+i'\n                                    :checked='selectedgenres.includes(genres[i])' \n                                    v-html='genres[i]'\n                                    @click='changeGenre(genres[i])'\n            />\n        </label>\n    </div>\n</template>\n\n<script>\nexport default{\n    name:'GenreSelector',\n    props:[\n        'genres',\n        'selectedgenres'\n    ],\n    methods:{\n        changeGenre(genre){\n            if(this.selectedgenres.includes(genre)){\n               for( var i = 0; i < this.selectedgenres.length; i++){ \n                    if ( this.selectedgenres[i] === genre) { \n                        this.selectedgenres.splice(i, 1); \n                        i--; \n                    }\n    \n                }\n            }else{\n                this.selectedgenres.push(genre)\n            }        \n        }\n    }\n}\n</script>\n<style scoped>\n#genres{\n    position:relative;\n    display:grid;\n    grid-template-rows: auto auto auto auto auto auto auto auto auto;\n    grid-auto-flow: column;\n    column-gap: 30px;\n    row-gap:10px;\n    margin:auto;\n    width:100%\n}\n@media (max-width: 775px) {\n    #genres{\n        grid-template-rows: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\n        width:300px;\n        margin-left:20px;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}