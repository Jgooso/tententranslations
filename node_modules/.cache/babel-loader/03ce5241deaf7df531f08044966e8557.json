{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0ecd383b\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"download\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div id=\\\"loadingscreen\\\" data-v-0ecd383b><div class=\\\"loader\\\" data-v-0ecd383b></div></div><div id=\\\"upload_tables\\\" data-v-0ecd383b><table data-v-0ecd383b><tr data-v-0ecd383b><td class=\\\"category\\\" data-v-0ecd383b>URL</td><td data-v-0ecd383b><input type=\\\"text\\\" id=\\\"urltextbox\\\" name=\\\"url\\\" maxlength=\\\"34\\\" style=\\\"width:280px;\\\" data-v-0ecd383b></td></tr><tr data-v-0ecd383b><td class=\\\"category\\\" data-v-0ecd383b>Genres</td><td data-v-0ecd383b></td></tr><tr data-v-0ecd383b><td class=\\\"category\\\" data-v-0ecd383b>Tags</td><td data-v-0ecd383b></td></tr></table><table data-v-0ecd383b><tr data-v-0ecd383b><td class=\\\"category\\\" data-v-0ecd383b>Novel Status</td><td data-v-0ecd383b><select id=\\\"completedEdit\\\" data-v-0ecd383b><option value=\\\"Ongoing\\\" data-v-0ecd383b>Ongoing</option><option value=\\\"Completed\\\" selected data-v-0ecd383b>Completed</option><option value=\\\"On Hold\\\" data-v-0ecd383b>On Hold</option><option value=\\\"Dropped\\\" data-v-0ecd383b>Dropped</option></select></td></tr><tr data-v-0ecd383b><td class=\\\"category\\\" data-v-0ecd383b>Upload Status</td><td data-v-0ecd383b>Unreleased</td></tr></table></div>\", 2);\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GenreSelector = _resolveComponent(\"GenreSelector\");\n\n  const _component_TagSelector = _resolveComponent(\"TagSelector\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_GenreSelector, {\n    genres: $data.genres,\n    selectedgenres: $data.selectedgenres\n  }, null, 8\n  /* PROPS */\n  , [\"genres\", \"selectedgenres\"]), _hoisted_4, _hoisted_5, _createElementVNode(\"input\", {\n    type: \"submit\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.postData())\n  }), _createVNode(_component_TagSelector, {\n    tags: $data.tags,\n    selectedtags: $data.selectedtags\n  }, null, 8\n  /* PROPS */\n  , [\"tags\", \"selectedtags\"])]);\n}","map":{"version":3,"mappings":";;;;;EACKA,EAAE,EAAG;;;;;gEAuCNC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gEAAIA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;;;;uBAvCRC,oBA8CM,KA9CN,cA8CM,CA7CFC,UA6CE,EAXFC,aAGEC,wBAHF,EAGE;IAFDC,MAAM,EAAEC,YAEP;IADDC,cAAc,EAAED;EACf,CAHF;;EAAA,+BAWE,EAPFE,UAOE,EAPEC,UAOF,EANFT,oBAA2C,OAA3C,EAA2C;IAApCU,IAAI,EAAG,QAA6B;IAAnBC,OAAK,sCAAEC,mBAAF;EAAc,CAA3C,CAME,EALFT,aAGEU,sBAHF,EAGE;IAFDC,IAAI,EAAER,UAEL;IADDS,YAAY,EAAET;EACb,CAHF;;EAAA,2BAKE,CA9CN","names":["id","_createElementVNode","_createElementBlock","_hoisted_2","_createVNode","_component_GenreSelector","genres","$data","selectedgenres","_hoisted_4","_hoisted_5","type","onClick","$options","_component_TagSelector","tags","selectedtags"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Upload.vue"],"sourcesContent":["<template>\n<div id = 'download'>\n    <div id = 'loadingscreen'><div class=\"loader\"></div></div>\n    <div id = 'upload_tables'>\n    <table>\n    <tr>\n        <td class='category'>URL</td>\n        <td><input type = \"text\" id = 'urltextbox' name = 'url' maxlength=\"34\" style='width:280px' ></td>\n    </tr>\n    <tr>\n        <td class='category'>Genres</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td class='category'>Tags</td>\n        <td></td>\n    </tr>\n    </table>\n    <table>\n        <tr>\n            <td class='category'>Novel Status</td>\n            <td>\n                <select id = 'completedEdit'>\n                                    <option value = 'Ongoing'>Ongoing</option>\n                                    <option value = 'Completed' selected>Completed</option>\n                                    <option value = 'On Hold'>On Hold</option>\n                                    <option value = 'Dropped'>Dropped</option>\n                </select>\n            </td>\n        </tr>\n        <tr>\n            <td class='category'>Upload Status</td>\n            <td>Unreleased</td>\n        </tr>\n    </table>\n    </div>\n    <GenreSelector\n    :genres='genres'\n    :selectedgenres='selectedgenres'\n    />\n    <br><br>\n    <input type = 'submit' @click='postData()'>\n    <TagSelector\n    :tags='tags'\n    :selectedtags='selectedtags'\n    />\n\n</div>\n\n</template>\n<script>\nimport { getAPI } from '../axios-api'\nimport tagBox from '../components/TagBox'\nimport GenreSelector from '../components/GenreSelector'\nimport TagSelector from '../components/TagSelector'\nexport default{\n    data(){\n        return{\n            genres:[],\n            tags:[],\n            selectedtags:[],\n            selectedgenres:[],\n            image:[]\n        }\n    },\n    components:{\n        tagBox,\n        GenreSelector,\n        TagSelector\n    },\nmethods:{\n        postData(){\n            const loadingscreen = document.getElementById('loadingscreen')\n            loadingscreen.style.display = 'block'\n            const url = document.getElementById('urltextbox').value;\n            const genres = document.getElementsByClassName('genrecheckbox')\n            const files = document.getElementById('cover-image').files\n            var selectedGenres = []\n            var image = document.getElementById('output');\n\t        const upload = URL.createObjectURL(files[0]);\n            console.log(upload)\n            for(var i=0; i < genres.length; i++){\n                if(genres[i].checked==true){\n                    selectedGenres.push(genres[i].value)\n                }\n            }\n            console.log('posted')\n            getAPI.post('/novel/single', {url:url,tags:this.selectedtags,genres:selectedGenres,image:upload})\n                .then(function (response) {\n                    console.log(response);\n                    loadingscreen.style.display = 'none'\n            })\n                .catch(function (error) {\n                    console.log(error);\n                    loadingscreen.style.display = 'none'\n            }); \n        },\n        showFile(){\n            /*\n            const file = document.getElementById('cover-image').files[0]\n            var image = document.getElementById('output')\n\t        //image.src = URL.createObjectURL(file);\n            console.log(file)\n            console.log(image.src)\n            let data = new FormData()\n            data.append('file', file, file.name)\n            /*\n            getAPI.post('/test',data, {headers: {\"Content-Type\": \"multipart/form-data\"}}).then((res) => {\n                console.log(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            */\n\n            \n        }\n    },\n    created(){\n        getAPI.get('/uploaddata')\n          .then(response => {\n            console.log('Descriptor API has recieved data')\n            this.genres = response.data['genres']\n            this.tags = response.data['tags']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          \n    }\n}\n</script>\n<style scoped>\nbutton{\n    background:none;\n    border-right:none\n}\n\ninput{\n    margin-right:5px;\n}\n#download{\n    width:100%;\n    height:fit-content;\n}\n.loader {\n  border: 16px solid #f3f3f3; /* Light grey */\n  border-top: 16px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  animation: spin 2s linear infinite;\n  margin:auto;\n  margin-top:170px;\n\n}\n#loadingscreen{\n    display:none;\n    position:absolute;\n    z-index:5;\n    width:100%;\n    height:100%;\n    background-color:rgba(0,0,0,0.5)\n}\n#upload_tables{\n    display:flex;\n    flex-direction:row;\n}\n.category{\n    width:100px;\n}\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n@media (max-width: 775px) {\n    #genres{\n        grid-template-rows: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\n        width:300px;\n        margin-left:20px;\n    }\n    #tagList{\n        width:350px;\n    }\n    #tagselector{\n        width:350px;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}