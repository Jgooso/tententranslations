{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-a85a36fa\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0,\n  id: \"chapter\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = [\"innerHTML\"];\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = {\n  class: \"controlbuttonscontainer\",\n  selectable: \"false\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode();\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_12 = [\"innerHTML\"];\n\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache) {\n  const _component_Navigator = _resolveComponent(\"Navigator\");\n\n  const _component_ChapterSelector = _resolveComponent(\"ChapterSelector\");\n\n  return _ctx.chapter ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"h3\", {\n    style: {\n      \"font-size\": \"25px\"\n    },\n    innerHTML: _ctx.novelData.title + \" - \" + _ctx.chapter.chapternumber\n  }, null, 8\n  /* PROPS */\n  , _hoisted_4), _createVNode(_component_Navigator, {\n    \"novel-id\": _ctx.novelData.novel,\n    novel: _ctx.novelData.title,\n    chapter: _ctx.chapter\n  }, null, 8\n  /* PROPS */\n  , [\"novel-id\", \"novel\", \"chapter\"]), _hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    class: \"controlbuttons\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.changeFontSize(1))\n  }, \"+\"), _createElementVNode(\"button\", {\n    class: \"controlbuttons\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.changeFontSize(-1))\n  }, \"-\"), _createCommentVNode(\"\\n            <button class = 'controlbuttons'>{</button>\\n            <button class = 'controlbuttons'>{</button>\\n            \")]), _hoisted_7, _hoisted_8, _createVNode(_component_ChapterSelector, {\n    chapterList: _ctx.chapterList,\n    onChangeChapter: _cache[2] || (_cache[2] = $event => _ctx.updateContent($event))\n  }, null, 8\n  /* PROPS */\n  , [\"chapterList\"]), _hoisted_9, _hoisted_10, _ctx.tier == 5 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    id: \"editButton\",\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.triggerEdit && _ctx.triggerEdit(...args))\n  }, \"Edit\")) : _createCommentVNode(\"v-if\", true), _hoisted_11, _createElementVNode(\"pre\", {\n    innerHTML: _ctx.chapterContent,\n    id: \"content\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_12), _createVNode(_component_ChapterSelector, {\n    chapterList: _ctx.chapterList,\n    onChangeChapter: _cache[4] || (_cache[4] = $event => _ctx.updateContent($event))\n  }, null, 8\n  /* PROPS */\n  , [\"chapterList\"]), _hoisted_13, _hoisted_14])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;;EACKA,EAAE,EAAG;;;EACDC,KAAK,EAAG;;;gEACZC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;gEAOGA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;EACKD,KAAK,EAAC;EAA0BE,UAAU,EAAC;;;gEAQhDD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gEACAA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gEAMAA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;iEAAgFA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;iEAMhFA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;iEAAIA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;;;;SA/BcE,8BAA1BC,oBAiCM,KAjCN,cAiCM,CAhCFH,oBA+BM,KA/BN,cA+BM,CA9BLI,UA8BK,EA7BFJ,oBAAoF,IAApF,EAAoF;IAAhFK,KAAyB,EAAzB;MAAA;IAAA,CAAgF;IAAtDC,SAAoD,EAA5CJ,eAAUK,KAAV,GAAe,KAAf,GAAsBL,aAAQM;EAAgB,CAApF;;EAAA,aA6BE,EA5BFC,aAIEC,oBAJF,EAIE;IAHA,YAAUR,eAAUS,KAGpB;IAFAA,KAAK,EAAET,eAAUK,KAEjB;IADAK,OAAO,EAAEV;EACT,CAJF;;EAAA,mCA4BE,EAvBFW,UAuBE,EAtBFb,oBAOM,KAPN,cAOM,CANFA,oBAAsE,QAAtE,EAAsE;IAA9DD,KAAK,EAAG,gBAAsD;IAApCe,OAAK,sCAAEZ,oBAAc,CAAd,CAAF;EAA+B,CAAtE,EAA4D,GAA5D,CAME,EALFF,oBAAuE,QAAvE,EAAuE;IAA/DD,KAAK,EAAG,gBAAuD;IAArCe,OAAK,sCAAEZ,oBAAc,EAAd,CAAF;EAAgC,CAAvE,EAA6D,GAA7D,CAKE,EAJFa,uJAIE,CAPN,CAsBE,EAdFC,UAcE,EAbFC,UAaE,EAZFR,aAGES,0BAHF,EAGE;IAFGC,WAAW,EAAGjB,gBAEjB;IADOkB,eAAa,sCAAElB,mBAAcmB,MAAd,CAAF;EACpB,CAHF;;EAAA,kBAYE,EAPFC,UAOE,eAPwDpB,aAAI,mBAAzDC,oBAA2E,QAA3E,EAA2E;UAAA;IAAnEL,EAAE,EAAG,YAA8D;IAAhDgB,OAAK,yCAAEZ,6CAAF;EAA2C,CAA3E,EAA8D,MAA9D,sCAOH,EAP8EqB,WAO9E,EANAvB,oBAA+C,KAA/C,EAA+C;IAA1CM,SAAyB,EAAfJ,mBAAgC;IAAhBJ,EAAE,EAAG;EAAW,CAA/C;;EAAA,cAMA,EALFW,aAGES,0BAHF,EAGE;IAFGC,WAAW,EAAEjB,gBAEhB;IADOkB,eAAa,sCAAElB,mBAAcmB,MAAd,CAAF;EACpB,CAHF;;EAAA,kBAKE,EADFG,WACE,EADEC,WACF,CA/BN,CAgCE,CAjCN","names":["id","class","_createElementVNode","selectable","_ctx","_createElementBlock","_hoisted_3","style","innerHTML","title","chapternumber","_createVNode","_component_Navigator","novel","chapter","_hoisted_5","onClick","_createCommentVNode","_hoisted_7","_hoisted_8","_component_ChapterSelector","chapterList","onChangeChapter","$event","_hoisted_9","_hoisted_11","_hoisted_13","_hoisted_14"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Chapter.vue"],"sourcesContent":["<template>\n<div id = 'chapter' v-if='chapter'>\n    <div class = \"content\">\n     <br>\n        <h3 style = \"font-size: 25px\" v-html='novelData.title+\" - \"+chapter.chapternumber'/>\n        <Navigator\n         :novel-id='novelData.novel'\n         :novel='novelData.title'\n         :chapter='chapter'\n        />\n        <br>\n        <div class='controlbuttonscontainer' selectable='false'>\n            <button class = 'controlbuttons' @click='changeFontSize(1)'>+</button>\n            <button class = 'controlbuttons' @click='changeFontSize(-1)'>-</button>\n            <!--\n            <button class = 'controlbuttons'>{</button>\n            <button class = 'controlbuttons'>{</button>\n            -->\n        </div>\n        <br>\n        <br>\n        <ChapterSelector\n            :chapterList= 'chapterList'\n            v-on:changeChapter=\"updateContent($event)\"\n        />\n       \n        <br> <button id = 'editButton' @click='triggerEdit' v-if='tier==5'>Edit</button><br>\n          <pre v-html = 'chapterContent' id = 'content'/>\n        <ChapterSelector\n            :chapterList='chapterList'\n            v-on:changeChapter=\"updateContent($event)\"\n        />\n        <br><br>\n    </div>\n</div>\n</template>\n<script>\nimport ChapterSelector from '../components/ChapterSelector'\nimport Navigator from '../components/Navigator'\nimport { getAPI } from '../axios-api'\n    export default{\n        name: 'Chapter',\n        components:{\n            ChapterSelector,\n            Navigator,\n        },props:[\n        'novelData',\n        'chapterList',\n        'tier'\n        ],data(){\n            return{\n                chapter:this.chapterList[this.$route.params.chapter-1],\n                chapterContent:''\n                selectorList:[]\n            }\n        },methods:{\n            changeFontSize(change){\n                const txt = document.getElementById('content');\n                const style = window.getComputedStyle(txt, null).getPropertyValue('font-size');\n                const currentSize = parseFloat(style);\n                txt.style.fontSize = (currentSize + change) + 'px';\n            },\n            triggerEdit(){\n                if(document.getElementById('content').contentEditable=='true'){\n                    const url = '/chapter?novel='+this.chapter.novelid+'&chapter='+this.chapter.chapternumber\n                    document.getElementById('content').contentEditable='false'\n                    document.getElementById('editButton').innerHTML='Edit'\n                    const content = document.getElementById('content').innerHTML\n                    getAPI.put(url,{content:content})\n                        .then(function (response) {\n                            console.log(response);\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        })\n                }else{\n                document.getElementById('content').contentEditable='true'\n                document.getElementById('editButton').innerHTML='Save'\n                }\n            }    \n        },\n        created(){\n            const url = '/chapter?novel='+this.chapter.novelid+'&chapter='+this.chapter.chapternumber\n            getAPI.get(url)\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.chapterContent = response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n            \n        \n        },\n    }\n</script>\n<style scoped>\npre{\nfont-family: Times;\nfont-size:19px;\nwhite-space: pre-wrap;\nfont-weight:lighter;\noverflow:hidden;\n}\n#editButton{\n    width:170px;\n    background-color:var(--styleColor);\n    color:white;\n    float:right;\n    border-radius:5px;\n}\n.controlbuttonscontainer{\n    float:right;\n    \n}\nbutton.controlbuttons{\n    border-radius:15px;\n    background-color:lightgray;\n    height:30px;\n    width:30px;\n    font-size:20px;\n    text-align:center;\n    vertical-align:middle;\n    line-height:20px;\n    margin-left:17px;\n    color:var(--styleColor);\n    user-select: none;\n    -webkit-user-select: none;\n    -webkit-touch-callout: none; \n}\nbutton.controlbuttons:hover{\n    color:white;\n    background-color:var(--styleColor);\n    transition: all .2s ease;\n}\n</style>"]},"metadata":{},"sourceType":"module"}