{"ast":null,"code":"import { getAPI } from '../axios-api';\nexport default {\n  name: 'Novel',\n  components: {},\n\n  data() {\n    return {\n      novelData: [],\n      chapterList: [],\n      sectionList: []\n    };\n  },\n\n  props: ['tier'],\n\n  created() {\n    const url = '/singlenovel/?novel=' + this.$route.params.title + '&tier=' + this.tier;\n    getAPI.get(url).then(response => {\n      console.log('Post API has recieved data');\n      this.novelData = response.data['Novel'][0];\n      this.sectionList = response.data['Chapter'].filter(chapter => !chapter.content);\n      this.chapterList = response.data['Chapter'].filter(chapter => chapter.content);\n      this.novelData.last_updated = Date.parse(this.novelData.last_updated);\n      date = new Date(this.novelData.last_updated);\n      console.log(date);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAUE,SAASA,MAAT,QAAuB,cAAvB;AACA,eAAe;EACbC,IAAI,EAAE,OADO;EAEbC,UAAU,EAAE,EAFC;;EAIbC,IAAG,GAAK;IACN,OAAO;MACHC,SAAS,EAAE,EADR;MAEHC,WAAW,EAAC,EAFT;MAGHC,WAAW,EAAC;IAHT,CAAP;EAKD,CAVY;;EAWbC,KAAK,EAAC,CACJ,MADI,CAXO;;EAcbC,OAAM,GAAK;IACX,MAAMC,GAAE,GAAI,yBAAuB,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,KAA1C,GAAgD,QAAhD,GAAyD,KAAKC,IAA1E;IAEGb,MAAM,CAACc,GAAP,CAAWL,GAAX,EACIM,IADJ,CACSC,QAAO,IAAK;MAChBC,OAAO,CAACC,GAAR,CAAY,4BAAZ;MACJ,KAAKd,SAAL,GAAeY,QAAQ,CAACb,IAAT,CAAc,OAAd,EAAuB,CAAvB,CAAf;MACA,KAAKG,WAAL,GAAiBU,QAAQ,CAACb,IAAT,CAAc,SAAd,EAAyBgB,MAAzB,CAAgCC,OAAM,IAAK,CAACA,OAAO,CAACC,OAApD,CAAjB;MACA,KAAKhB,WAAL,GAAiBW,QAAQ,CAACb,IAAT,CAAc,SAAd,EAAyBgB,MAAzB,CAAgCC,OAAM,IAAKA,OAAO,CAACC,OAAnD,CAAjB;MACA,KAAKjB,SAAL,CAAekB,YAAf,GAA4BC,IAAI,CAACC,KAAL,CAAW,KAAKpB,SAAL,CAAekB,YAA1B,CAA5B;MAEAG,IAAG,GAAI,IAAIF,IAAJ,CAAS,KAAKnB,SAAL,CAAekB,YAAxB,CAAP;MACAL,OAAO,CAACC,GAAR,CAAYO,IAAZ;IACG,CAVJ,EAWIC,KAXJ,CAWUC,GAAE,IAAK;MACZV,OAAO,CAACC,GAAR,CAAYS,GAAZ;IACD,CAbJ;EAgBJ;;AAjCc,CAAf","names":["getAPI","name","components","data","novelData","chapterList","sectionList","props","created","url","$route","params","title","tier","get","then","response","console","log","filter","chapter","content","last_updated","Date","parse","date","catch","err"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Novel.vue"],"sourcesContent":["<template>\n<div>\n    <router-view\n      :novelData=\"novelData\"\n      :chapterList=\"chapterList\"\n      :sectionList='sectionList'\n    />\n</div>\n</template>\n<script>\n  import { getAPI } from '../axios-api'\n  export default {\n    name: 'Novel',\n    components: {\n    },\n    data () {\n      return {\n          novelData: [],\n          chapterList:[],\n          sectionList:[],\n        }\n    },\n    props:[\n      'tier'\n    ],\n    created () {\n    const url = '/singlenovel/?novel='+this.$route.params.title+'&tier='+this.tier\n    \n       getAPI.get(url)\n          .then(response => {\n            console.log('Post API has recieved data')\n        this.novelData=response.data['Novel'][0]\n        this.sectionList=response.data['Chapter'].filter(chapter => !chapter.content)\n        this.chapterList=response.data['Chapter'].filter(chapter => chapter.content)\n        this.novelData.last_updated=Date.parse(this.novelData.last_updated)\n        \n        date = new Date(this.novelData.last_updated)\n        console.log(date)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n       \n        \n  },\n  \n \n  }\n</script>\n\n<style>\nbutton{\n  border:none;\n}\n#chapter{\n     display: flex;\n     flex-direction:column;\n}\n\n#divider{\n    font-size:18px;\n    font-weight:bold;\n    margin-left:15px;\n    line-height:18px;\n    height:30px;\n    padding-top:6px;\n}\n#cover {\n    width: 100%;\n    height: fit-content;\n    display: flex;\n    flex-direction: column;\n    background-color: rgb(236, 237, 239);\n    margin-top:0;\n    padding-bottom:35px;\n    min-height:500px;\n  }\n\n</style>\n\n"]},"metadata":{},"sourceType":"module"}