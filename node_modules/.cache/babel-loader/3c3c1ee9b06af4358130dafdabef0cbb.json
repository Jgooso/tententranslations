{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-02d5851a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"editPage\"\n};\nconst _hoisted_2 = {\n  id: \"confirmationBox\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"margin\": \"auto\"\n  }\n};\nconst _hoisted_4 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"row\",\n    \"margin\": \"auto\",\n    \"width\": \"220px\"\n  }\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  class: \"toggle\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"slider round\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"labels\",\n  \"data-on\": \"Chapter\",\n  \"data-off\": \"Novel\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = {\n  key: 0,\n  id: \"editTable\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Title\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = [\"textContent\"];\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Description\", -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = [\"innerHTML\"];\n\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Novel Active\", -1\n/* HOISTED */\n));\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Raw Status\", -1\n/* HOISTED */\n));\n\nconst _hoisted_16 = [\"selected\"];\n\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Ongoing\"\n}, \"Ongoing\", -1\n/* HOISTED */\n));\n\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Completed\"\n}, \"Completed\", -1\n/* HOISTED */\n));\n\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"On Hold\"\n}, \"On Hold\", -1\n/* HOISTED */\n));\n\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Dropped\"\n}, \"Dropped\", -1\n/* HOISTED */\n));\n\nconst _hoisted_21 = [_hoisted_17, _hoisted_18, _hoisted_19, _hoisted_20];\nconst _hoisted_22 = {\n  class: \"category\"\n};\nconst _hoisted_23 = {\n  id: \"genre-selector\"\n};\n\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Tags\", -1\n/* HOISTED */\n));\n\nconst _hoisted_25 = {\n  id: \"tag-selector\"\n};\n\nconst _hoisted_26 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_27 = {\n  key: 1,\n  id: \"TableOfContents\"\n};\nconst _hoisted_28 = {\n  id: \"table\",\n  ref: \"tableofcontentlist\"\n};\nconst _hoisted_29 = [\"innerHTML\"];\nconst _hoisted_30 = [\"innerHTML\", \"onClick\"];\nconst _hoisted_31 = [\"innerHTML\", \"id\"];\n\nconst _hoisted_32 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GenreSelector = _resolveComponent(\"GenreSelector\");\n\n  const _component_TagSelector = _resolveComponent(\"TagSelector\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", _hoisted_3, _toDisplayString($data.novelData.novelactive == 0 ? 'Confirm Activate Novel' : \"Confirm Deactivate Novel\"), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.confirm(2)),\n    class: \"confirmation-button\"\n  }, \"Confirm\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.confirm(1)),\n    class: \"confirmation-button\"\n  }, \"Cancel\")])]), _createElementVNode(\"select\", {\n    id: \"novel-selector\",\n    onChange: _cache[2] || (_cache[2] = $event => $options.selectNovel())\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.novelList, novel => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: novel.novelid\n    }, _toDisplayString(novel.title), 9\n    /* TEXT, PROPS */\n    , _hoisted_5);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"label\", _hoisted_6, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.switchEdit())\n  }), _hoisted_7, _hoisted_8]), _createCommentVNode(\" Novel Edit\"), $data.editType == \"novel\" ? (_openBlock(), _createElementBlock(\"table\", _hoisted_9, [_createElementVNode(\"tr\", null, [_hoisted_10, _createElementVNode(\"td\", {\n    textContent: _toDisplayString($data.novelData.title),\n    contenteditable: \"true\",\n    id: \"novelTitle\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_11)]), _createElementVNode(\"tr\", null, [_hoisted_12, _createElementVNode(\"td\", {\n    innerHTML: $data.novelData.description,\n    contenteditable: \"true\",\n    id: \"novelDescription\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_13)]), _createElementVNode(\"tr\", null, [_hoisted_14, _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $options.confirm(0))\n  }, _toDisplayString($data.novelData.novelactive == 0 ? 'Activate Novel' : \"Deactivate Novel\"), 1\n  /* TEXT */\n  )])]), _createElementVNode(\"tr\", null, [_hoisted_15, _createElementVNode(\"td\", null, [_createElementVNode(\"select\", {\n    id: \"completedEdit\",\n    selected: _ctx.value = $data.novelData.novelstatus\n  }, _hoisted_21, 8\n  /* PROPS */\n  , _hoisted_16)])]), _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", _hoisted_22, [_createElementVNode(\"button\", {\n    id: \"show-genres\",\n    onClick: _cache[5] || (_cache[5] = $event => $options.showGenres())\n  }, \"Genres\")]), _createElementVNode(\"td\", _hoisted_23, [_createVNode(_component_GenreSelector, {\n    genres: $data.genres,\n    selectedgenres: $data.novelData.genres\n  }, null, 8\n  /* PROPS */\n  , [\"genres\", \"selectedgenres\"])])]), _createElementVNode(\"tr\", null, [_hoisted_24, _createElementVNode(\"td\", _hoisted_25, [_createVNode(_component_TagSelector, {\n    tags: $data.tags,\n    selectedtags: $data.novelData.tags\n  }, null, 8\n  /* PROPS */\n  , [\"tags\", \"selectedtags\"])])]), _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.submit())\n  }, \"Submit\")])]), _hoisted_26])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Novel Edit End\"), _createCommentVNode(\" Chapter Edit\"), $data.editType == \"chapters\" ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [_createElementVNode(\"ul\", _hoisted_28, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.sectionList, section => {\n    return _openBlock(), _createElementBlock(\"li\", null, [_createElementVNode(\"li\", {\n      class: \"section\",\n      innerHTML: section.title\n    }, null, 8\n    /* PROPS */\n    , _hoisted_29), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chapterList, chapter => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: chapter.chapternumber,\n        class: \"table-list\"\n      }, [_createElementVNode(\"button\", {\n        innerHTML: chapter.title,\n        class: \"chapter-list\",\n        onClick: $event => $options.displayChapter(chapter.chapternumber)\n      }, null, 8\n      /* PROPS */\n      , _hoisted_30), _createElementVNode(\"pre\", {\n        innerHTML: $data.chapterContent,\n        class: \"chapter-content\",\n        id: chapter.chapternumber,\n        contenteditable: \"True\"\n      }, null, 8\n      /* PROPS */\n      , _hoisted_31), _hoisted_32]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])]);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))], 512\n  /* NEED_PATCH */\n  )])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Chapter Edit End\")]);\n}","map":{"version":3,"mappings":"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","names":["id","style","class","_createElementVNode","value","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","ref","_createElementBlock","_toDisplayString","$data","novelactive","onClick","$options","onChange","_Fragment","_renderList","novel","novelid","title","_hoisted_5","type","_hoisted_7","_hoisted_8","_createCommentVNode","_hoisted_10","contenteditable","_hoisted_12","innerHTML","description","_hoisted_14","_hoisted_15","selected","_ctx","novelstatus","_createVNode","_component_GenreSelector","genres","selectedgenres","_hoisted_24","_component_TagSelector","tags","selectedtags","_hoisted_26","section","chapter","key","chapternumber","_hoisted_32"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/EditPage.vue"],"sourcesContent":["<template>\n<div id = 'editPage'>\n    <div id = 'confirmationBox'>\n        <h1 style = 'margin:auto;'>{{novelData.novelactive==0 ? 'Confirm Activate Novel' : \"Confirm Deactivate Novel\"}}</h1>\n        <div style='display:flex;flex-direction:row;margin:auto; width:220px'>\n        <button @click='confirm(2)' class = 'confirmation-button'>Confirm</button>\n        <button @click='confirm(1)' class = 'confirmation-button'>Cancel</button>\n        \n        </div>\n    </div>\n    <select id = 'novel-selector' @change=\"selectNovel()\">\n        <option v-for='novel in novelList' :value='novel.novelid'>{{novel.title}}</option>\n    </select>\n    <label class=\"toggle\">\n        <input type=\"checkbox\" @click='switchEdit()'>\n        <span class=\"slider round\"></span>\n        <span class=\"labels\" data-on=\"Chapter\" data-off=\"Novel\"></span>\n    </label>\n    <!-- Novel Edit-->\n    <table id = 'editTable' v-if='editType==\"novel\"'>\n        <tr>\n            <td class = 'category'>Title</td>\n            <td v-text = 'novelData.title' contenteditable=\"true\" id = 'novelTitle'/>\n        </tr>\n        <tr>\n            <td  class = 'category'>Description</td>\n            <td v-html = 'novelData.description' contenteditable=\"true\" id = 'novelDescription'/>\n        </tr>\n        <tr>\n            <td  class = 'category'>Novel Active</td>\n            <td><button @click='confirm(0)'>{{novelData.novelactive==0 ? 'Activate Novel' : \"Deactivate Novel\"}}</button></td>\n        </tr>\n        <tr>\n            <td  class = 'category'>Raw Status</td>\n            <td>\n                <select id = 'completedEdit' :selected='value=novelData.novelstatus'>\n                    <option value = 'Ongoing'>Ongoing</option>\n                    <option value = 'Completed'>Completed</option>\n                    <option value = 'On Hold'>On Hold</option>\n                    <option value = 'Dropped'>Dropped</option>\n                </select>\n            </td>\n        </tr>\n        <tr>\n            <td  class = 'category'><button id = 'show-genres' @click='showGenres()'>Genres</button></td>\n            <td id = 'genre-selector'>\n                <GenreSelector\n                :genres='genres'\n                :selectedgenres='novelData.genres'\n                />\n            </td>\n        </tr>\n        <tr>\n            <td  class = 'category'>Tags</td>\n            <td id = 'tag-selector'>\n                <TagSelector\n                :tags='tags'\n                :selectedtags='novelData.tags'\n                />\n            </td>\n        </tr>\n        <tr>\n        <td><button @click='submit()'>Submit</button></td>\n        </tr>\n        <tr>\n        </tr>\n    </table>\n    <!-- Novel Edit End-->\n\n    <!-- Chapter Edit-->\n    <div id = \"TableOfContents\" v-if='editType==\"chapters\"'>\n        <ul  id = 'table' ref='tableofcontentlist'>\n            <li v-for='section in sectionList'>\n                <li class='section' v-html='section.title'/>\n                <ul>\n                    <li v-for=\"chapter in chapterList\" :key=\"chapter.chapternumber\" class='table-list'>\n                        <button v-html='chapter.title' class = 'chapter-list' @click='displayChapter(chapter.chapternumber)'/>\n                        <pre v-html='chapterContent' class = 'chapter-content' :id='chapter.chapternumber' contenteditable='True'/>\n                        <br>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n    <!-- Chapter Edit End-->\n</div>\n</template>\n\n\n<script>\nimport { getAPI } from '../axios-api'\nimport GenreSelector from '../components/GenreSelector'\nimport TagSelector from '../components/TagSelector'\nimport ChapterSelector from '../components/ChapterSelector'\nexport default{\n    data (){\n        return{\n            selectednovel:'',\n            novelList:[],\n            novelData:[],\n            tags:[],\n            genres:[],\n            editType:'novel',\n            chapterList:[],\n            sectionList:[],\n            chapterContent:'',\n            currentChapter:[]\n        }\n    },\n    components:{\n        GenreSelector,\n        TagSelector,\n        ChapterSelector\n    },\n    methods:{\n        confirm(open){\n            var confirmationBox = document.getElementById('confirmationBox')\n            if(open == 0){\n                confirmationBox.style.display = 'flex'\n            }else if(open == 1){\n                confirmationBox.style.display = 'none'\n            }else if(open == 2){\n                if(this.novelData.novelactive == 1){this.novelData.novelactive=0}\n                else{this.novelData.novelactive=1}\n                confirmationBox.style.display = 'none'\n            }\n        },\n        selectNovel(){\n            this.selectednovel = document.getElementById(\"novel-selector\").value\n            console.log(this.selectednovel)\n            const url = '/novel/single?novel='+this.selectednovel+'&tier=5&edit=True'\n            getAPI.get(url)\n          .then(response => {\n            console.log('Post Novel has recieved data')\n            this.novelData=response.data['Novel']\n            const sections = response.data['Chapters'].filter(chapter => chapter.chapternumber == 0)\n            if(sections.length > 0){\n                this.sectionList = sections\n            }else{\n                this.sectionList = [{'section':0}]\n            }\n            this.chapterList=response.data['Chapters'].filter(chapter => chapter.chapternumber != 0)\n            this.genres = response.data['Genres']\n            this.tags = response.data['Tags']\n            this.isMounted=true\n            this.currentChapter = null;\n          })\n          .catch(err => {\n            console.log(err)\n          })\n       \n        },\n        submit(){\n            //const loadingscreen = document.getElementById('loadingscreen')\n            //loadingscreen.style.display = 'block'\n            const genres = document.getElementsByClassName('genrecheckbox')\n            var selectedGenres = []\n            for(var i=0; i < genres.length; i++){\n                if(genres[i].checked==true){\n                    selectedGenres.push(genres[i].value)\n                }\n            }\n            console.log('posted')\n               this.novelData.novelstatus=document.getElementById('completedEdit').value\n               this.novelData.description=document.getElementById('novelDescription').innerHTML\n               this.novelData.title=document.getElementById('novelTitle').innerHTML\n               const url = '/novel/single?novel='+this.selectednovel\n            getAPI.put(url,{\n                   description:this.novelData.description,\n                   tags:this.novelData.tags,\n                   genres:selectedGenres,\n                   completed:this.novelData.novelstatus,\n                   title:this.novelData.title,\n                   novelactive:this.novelData.novelactive\n               }).then(function (response) {\n                    console.log(response);\n            })\n                .catch(function (error) {\n                    console.log(error);\n            })\n        },\n        showGenres(){\n            var genre_selector = document.getElementById('genre-selector')\n            console.log(genre_selector)\n            if(genre_selector.style.display=='flex'){\n                genre_selector.style.display = 'none'\n                console.log('flex')\n            }else{\n                genre_selector.style.display = 'flex'\n                console.log('none')\n            }\n        },\n        switchEdit(){\n            if(this.editType=='novel'){\n                this.editType='chapters'\n            }else{\n                this.editType='novel'\n            }\n            console.log(this.editType)\n        },\n        displayChapter(chapterItem){\n            const chapter_contents = document.getElementsByClassName('chapter-content')\n            try{\n            var editedContent = document.getElementById(this.currentChapter).innerHTML\n            }catch{}\n                const url = '/chapter?novel='+this.selectednovel+'&chapter='+chapterItem+'&chapterupdate='+ this.currentChapter\n              \n                    getAPI.put(url,{content:editedContent})\n                        .then(response => {\n                                console.log('Chapter API has recieved data')\n                                    this.chapterContent = response.data\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        })\n            this.currentChapter = chapterItem\n            for(var i=0; i < chapter_contents.length; i++){\n                chapter_contents[i].style.height='0'\n            }\n            document.getElementById(chapterItem).style.height='fit-content'\n            \n        },\n        postChapterData(){\n            \n        }\n    },\n    created(){\n        getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novelList = response.data\n            console.log(response.data)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n    }\n}\n</script>\n<style scoped>\n#editPage{\n    width:100%;\n    height:fit-content;\n    max-width:800px;\n\n}\n#novel-selector{\n    width:80%;\n}\n.category{\n    width:100px;\n    height:50px;\n}\n#confirmationBox{\n    display:none;\n    background-color:lightgray;\n    width:350px;\n    height:350px;\n    flex-direction:column;\n    padding:20px;\n    position:fixed;\n    top:50%;\n    justify-content:center;\n    z-index:10;\n\n}\n.confirmation-button{\n    width:100px;\n    height:50px;\n    font-size:20px;\n    margin:auto;\n}\ntr{\n    margin-bottom:30px;\n}\n#genre-selector{\ndisplay:none;\n}\n#editTable{\n    width:70%;\n    height:100%;\n}\n\n#completedEdit{\n     background:none;\n    border:none;\n    -webkit-appearance: none;\n}\n#show-genres{\n    background-color:white;\n    border:none;\n    color: inherit;\n}\n\n.chapter-list{\n    background:none;\n    border:none;\n    border-bottom:1px solid lightgray;\n    -webkit-appearance: none;\n    width:100%;\n    text-align:left;\n    transition: all 0.4s ease-in-out;\n}\n#table{\ntext-decoration:none;\n    list-style:none;\n    width:100%;\n    transition: all 0.4s ease-in-out;\n    \n}\n.chapter-content{\n    height:fit-content;\n    width:100%;\n    white-space: pre-wrap;\n    font-weight:lighter;\n    overflow:hidden;\n}\n.table-list.selected{\n    max-height:9999px;\n}\n.table-list{\n    height:fit-content;\n    transition: all 0.4s ease-in-out;\n    \n}\n#TableOfContents{\n    height:fit-content;\n     transition: all 0.4s ease-in-out;\n\n}\n.section{\n    color:#000000;\n    font-size:18px;\n    background-color:lightgray;\n    width:100%;\n}\n.comma-list {\n  display: inline;\n  margin-left:0px;\n}\n.comma-list li {\n  display: inline;\n}\n.comma-list li::after {\n  content: \", \";\n}\n.comma-list li:last-child::after {\n    content: \"\";\n}\n@media (max-width: 775px) {\n    #editTable{\n        width:350px;\n    }\n    #novel-selector{\n        width:350px;\n    }\n}\n/* TOGGLE BUTTON */\n.toggle {\n    --width: 100px;\n    --height: 20px;\n    position: relative;\n    display: inline-block;\n    width: var(--width);\n    height: var(--height);\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.3);\n    border-radius: var(--height);\n    cursor: pointer;\n}\n\n/* hiding checkbox */\n.toggle input {\n    display: none;\n}\n.toggle .slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: var(--height);\n    background-color: #ccc;\n    transition: all 0.4s ease-in-out;\n}\n.toggle .slider::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 50px;\n    height: calc(var(--height));\n    background-color: #fff;\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.3);\n    transition: all 0.4s ease-in-out;\n    z-index:4;\n}\n.toggle input:checked + .slider::before {\n    transform: translateX(50px);\n}\n/* Adding text in the toggle button */\n.toggle .labels {\n    position: absolute;\n    top: 2px;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    font-size: 12px;\n    font-family: sans-serif;\n    transition: all 0.4s ease-in-out;\n}\n\n.toggle .labels::after {\n    content: attr(data-off);\n    position: absolute;\n    right: 5px;\n    color: #4d4d4d;\n    opacity: 1;\n    transition: all 0.4s ease-in-out;\n}\n\n.toggle .labels::before {\n    content: attr(data-on);\n    position: absolute;\n    left: 5px;\n    color: #4d4d4d;\n    transition: all 0.4s ease-in-out;\n}\n/*END TOGGLE BUTTON*/\n</style>"]},"metadata":{},"sourceType":"module"}