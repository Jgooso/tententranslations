{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0ecd383b\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"download\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  id: \"noveltitle\"\n}, \"Lorem Ipsum\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  id: \"upload\",\n  method: \"postData\"\n};\nconst _hoisted_4 = {\n  id: \"upload_tables\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  id: \"image-border\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"#\",\n  id: \"output\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = {\n  id: \"genre-selector\"\n};\nconst _hoisted_8 = {\n  id: \"summary\"\n};\nconst _hoisted_9 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"row\",\n    \"border-bottom\": \"2px lightgray solid\",\n    \"height\": \"30px\"\n  }\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  id: \"divider\"\n}, \"SUMMARY\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  id: \"noveldescription\"\n}, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GenreSelector = _resolveComponent(\"GenreSelector\");\n\n  const _component_TagSelector = _resolveComponent(\"TagSelector\");\n\n  const _component_UtfBox = _resolveComponent(\"UtfBox\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [$data.imageSelected ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    id: \"remove-image\",\n    onClick: _cache[0] || (_cache[0] = $event => this.imageSelected = false)\n  }, \"☓\"), _hoisted_6, _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"image-selector\",\n    onChange: _cache[1] || (_cache[1] = $event => $options.showFile())\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  )])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"\\n            <table>\\n                <tr>\\n                    <td class='category'>Views</td>\\n                    <td class = 'info  unselectable'>0</td>\\n                </tr>\\n                <tr>\\n                    <td class='category'>Alternative</td>\\n                    <td class='info  unselectable'>ロレム・イプサム</td>\\n                </tr>\\n                <tr>\\n                    <td class='category'>URL</td>\\n                    <td class='info'><input type = \\\"url\\\" id = 'urltextbox' name = 'url' maxlength=\\\"34\\\" style='border:none;' placeholder='Enter novel URL'></td>\\n                </tr>\\n                <tr>\\n                    <td class = 'category'>Authors</td>\\n                    <td class='info'>Author-san</td>\\n                </tr>\\n                <tr>\\n                    <td class='category'>Genres</td>\\n                    <td  @click='showGenres()' class='info' v-if='selectedgenres.length>0'>{{selectedgenres}}</td>\\n                    <td v-else style='color:red'  @click='showGenres()' class='info'>Select Genres</td>\\n                </tr>\\n                <tr>\\n                    <td class='category'>Tags</td>\\n                    <td @click='showTags()' class='info'  v-if='selectedtags.length>0'></td>\\n                    <td v-else style='color:red'  @click='showTags()' class='info'>Select Tags</td>\\n                    </tr>\\n            </table>\\n            <table>\\n                <tr>\\n                    <td class='category'>Release</td>\\n                    <td class='info unselectable'>20XX</td>\\n                </tr>\\n                <tr>\\n                    <td class='category'>Status</td>\\n                    <td class='info'>Unreleased</td>\\n                </tr>\\n                <tr>\\n                    <td class='category'>Novel</td>\\n                    <td class='info'>\\n                        <select id = 'completedEdit' placeholder='SELECT' style='color:red;' onfocus='this.style.color=\\\"rgb(136,136,136)\\\"' form = 'upload' name = 'novelstatus'>\\n                            <option value=\\\"\\\" disabled selected>Select your option</option>\\n                            <option value = 'Ongoing'>Ongoing</option>\\n                            <option value = 'Completed'>Completed</option>\\n                            <option value = 'On Hold'>On Hold</option>\\n                            <option value = 'Dropped'>Dropped</option>\\n                        </select>\\n                     </td>\\n                </tr>\\n       \\n            </table>\\n                            \")]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_GenreSelector, {\n    genres: $data.genres,\n    selectedgenres: $data.selectedgenres\n  }, null, 8\n  /* PROPS */\n  , [\"genres\", \"selectedgenres\"])]), _createVNode(_component_TagSelector, {\n    tags: $data.tags,\n    selectedtags: $data.selectedtags,\n    id: \"tag-selector\"\n  }, null, 8\n  /* PROPS */\n  , [\"tags\", \"selectedtags\"])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_UtfBox, {\n    shape: \"★\"\n  }), _hoisted_10]), _hoisted_11, _hoisted_12])]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.postData()),\n    style: {\n      \"width\": \"100%\",\n      \"margin-top\": \"30px\"\n    }\n  }, \"Submit\")]);\n}","map":{"version":3,"mappings":";;;;;EACKA,EAAE,EAAG;;;gEAELC,oBAAsC,IAAtC,EAAsC;EAAlCD,EAAE,EAAG;AAA6B,CAAtC,EAAsB,aAAtB,EAAiC;AAAA;AAAjC;;;EACKA,EAAE,EAAG;EAASE,MAAM,EAAC;;;EAClBF,EAAE,EAAG;;;;EACAA,EAAE,EAAG;;;gEAEXC,oBAA2B,KAA3B,EAA2B;EAAtBE,GAAG,EAAC,GAAkB;EAAdH,EAAE,EAAG;AAAS,CAA3B;;AAAA;;;EA0DCA,EAAE,EAAG;;;EAcTA,EAAE,EAAG;;;EAEEI,KAAwF,EAAxF;IAAA;IAAA;IAAA;IAAA;EAAA;;;iEAAoHH,oBAA+B,IAA/B,EAA+B;EAA3BD,EAAE,EAAG;AAAsB,CAA/B,EAAmB,SAAnB,EAA0B;AAAA;AAA1B;;iEAAqCC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;iEAC7JA,oBAA0d,GAA1d,EAA0d;EAAvdD,EAAE,EAAC;AAAod,CAA1d,EAAyB,+bAAzB,EAAsd;AAAA;AAAtd;;;;;;;;;uBAlFZK,oBAuFM,KAvFN,cAuFM,CArFDC,UAqFC,EApFFL,oBA2EO,MA3EP,cA2EO,CA1EHA,oBA2DM,KA3DN,cA2DM,CA1D8BM,qCAAhCF,oBAIM,KAJN,cAIM,CAHNJ,oBAA8E,QAA9E,EAA8E;IAAtED,EAAE,EAAG,cAAiE;IAAjDQ,OAAK,2CAAOC,aAAP,GAAoB,KAApB;EAA4C,CAA9E,EAA8D,GAA9D,CAGM,EAFNC,UAEM,EADNT,oBAAgE,OAAhE,EAAgE;IAAzDU,IAAI,EAAG,MAAkD;IAA3CX,EAAE,EAAG,gBAAsC;IAApBY,QAAM,sCAAEC,mBAAF;EAAc,CAAhE;;EAAA,CACM,CAJN,sCA0DE,EArDFC,8hFAqDE,CA3DN,CA0EG,EAbHb,oBAMM,KANN,cAMM,CALDc,aAIKC,wBAJL,EAIK;IAHDC,MAAM,EAAEV,YAGP;IAFDW,cAAc,EAAEX;EAEf,CAJL;;EAAA,+BAKC,CANN,CAaG,EANHQ,aAIEI,sBAJF,EAIE;IAHGC,IAAI,EAAEb,UAGT;IAFGc,YAAY,EAAEd,kBAEjB;IADEP,EAAE,EAAG;EACP,CAJF;;EAAA,2BAMG,CA3EP,CAoFE,EARFC,oBAKM,KALN,cAKM,CAJFA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFHA,oBAA8J,KAA9J,cAA8J,CAAhEc,aAA2BO,iBAA3B,EAA2B;IAAnBC,KAAK,EAAG;EAAW,CAA3B,CAAgE,EAArCC,WAAqC,CAA9J,CAEG,EAF2JC,WAE3J,EADFC,WACE,CAHN,CAIE,CALN,CAQE,EAFFzB,oBAA+E,QAA/E,EAA+E;IAAtEO,OAAK,sCAAEK,mBAAF,CAAiE;IAAnDT,KAAmC,EAAnC;MAAA;MAAA;IAAA;EAAmD,CAA/E,EAAgE,QAAhE,CAEE,CAvFN","names":["id","_createElementVNode","method","src","style","_createElementBlock","_hoisted_2","$data","onClick","imageSelected","_hoisted_6","type","onChange","$options","_createCommentVNode","_createVNode","_component_GenreSelector","genres","selectedgenres","_component_TagSelector","tags","selectedtags","_component_UtfBox","shape","_hoisted_10","_hoisted_11","_hoisted_12"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Upload.vue"],"sourcesContent":["<template>\n<div id = 'download'>\n\n     <h1 id = \"noveltitle\">Lorem Ipsum</h1>\n    <form id = 'upload' method='postData'>\n        <div id = 'upload_tables'>\n            <div  id = 'image-border' v-if='imageSelected'>\n            <button id = 'remove-image' @click='this.imageSelected=false'>&#9747;</button>\n            <img src='#' id = 'output'>\n            <input type = 'file' id = 'image-selector' @change='showFile()'>\n            </div>\n            <!--\n            <table>\n                <tr>\n                    <td class='category'>Views</td>\n                    <td class = 'info  unselectable'>0</td>\n                </tr>\n                <tr>\n                    <td class='category'>Alternative</td>\n                    <td class='info  unselectable'>ロレム・イプサム</td>\n                </tr>\n                <tr>\n                    <td class='category'>URL</td>\n                    <td class='info'><input type = \"url\" id = 'urltextbox' name = 'url' maxlength=\"34\" style='border:none;' placeholder='Enter novel URL'></td>\n                </tr>\n                <tr>\n                    <td class = 'category'>Authors</td>\n                    <td class='info'>Author-san</td>\n                </tr>\n                <tr>\n                    <td class='category'>Genres</td>\n                    <td  @click='showGenres()' class='info' v-if='selectedgenres.length>0'>{{selectedgenres}}</td>\n                    <td v-else style='color:red'  @click='showGenres()' class='info'>Select Genres</td>\n                </tr>\n                <tr>\n                    <td class='category'>Tags</td>\n                    <td @click='showTags()' class='info'  v-if='selectedtags.length>0'></td>\n                    <td v-else style='color:red'  @click='showTags()' class='info'>Select Tags</td>\n                    </tr>\n            </table>\n            <table>\n                <tr>\n                    <td class='category'>Release</td>\n                    <td class='info unselectable'>20XX</td>\n                </tr>\n                <tr>\n                    <td class='category'>Status</td>\n                    <td class='info'>Unreleased</td>\n                </tr>\n                <tr>\n                    <td class='category'>Novel</td>\n                    <td class='info'>\n                        <select id = 'completedEdit' placeholder='SELECT' style='color:red;' onfocus='this.style.color=\"rgb(136,136,136)\"' form = 'upload' name = 'novelstatus'>\n                            <option value=\"\" disabled selected>Select your option</option>\n                            <option value = 'Ongoing'>Ongoing</option>\n                            <option value = 'Completed'>Completed</option>\n                            <option value = 'On Hold'>On Hold</option>\n                            <option value = 'Dropped'>Dropped</option>\n                        </select>\n                     </td>\n                </tr>\n       \n            </table>\n                            -->\n        </div>\n\n        <div id = 'genre-selector'>\n             <GenreSelector\n                :genres='genres'\n                :selectedgenres='selectedgenres'\n                \n                />\n        </div>\n        <TagSelector\n            :tags='tags'\n            :selectedtags='selectedtags'\n            id = 'tag-selector'\n        />\n\n    </form>\n    <div id = \"summary\">\n        <div>\n           <div style = \"display:flex;flex-direction:row;border-bottom:2px lightgray solid;height:30px;\"><UtfBox shape = '&#9733;'/><h3 id = \"divider\">SUMMARY</h3></div><br>\n            <p id=\"noveldescription\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n        </div>\n    </div>\n    <button @click='postData()' style='width:100%;margin-top:30px;'>Submit</button>\n\n</div>\n</template>\n<script>\nimport { getAPI } from '../axios-api'\nimport GenreSelector from '../components/GenreSelector'\nimport TagSelector from '../components/TagSelector'\nimport UtfBox from '../components/UtfBox'\nexport default{\n    data(){\n        return{\n            genres:[],\n            tags:[],\n            selectedtags:[],\n            selectedgenres:[],\n            imageSelected:true,\n        }\n    },\n    components:{\n        GenreSelector,\n        TagSelector,\n        UtfBox\n    },\nmethods:{\n        postData(){\n            const loadingscreen = document.getElementById('loadingscreen')\n            loadingscreen.style.display = 'block'\n            const form = document.getElementById('upload')\n            const formData = new FormData(form)\n            try{\n                const file = document.getElementById('image-selector').files[0]\n                formData.append('file',file,file.name)\n            }catch{\n                console.log('no file')\n            }\n            getAPI.post('/novel/single',formData, {headers: {\"Content-Type\": \"multipart/form-data\"}}).then((res) => {\n                console.log(res);\n                loadingscreen.style.display = 'none'\n            })\n            .catch((err) => {\n                console.log(err);\n                loadingscreen.style.display = 'none'\n            })\n            /*\n            getAPI.post('/novel/single', {url:url,tags:this.selectedtags,genres:selectedGenres,image:upload})\n                .then(function (response) {\n                    console.log(response);\n                    loadingscreen.style.display = 'none'\n            })\n                .catch(function (error) {\n                    console.log(error);\n                    loadingscreen.style.display = 'none'\n            }); \n            */\n        },\n        showFile(){\n            \n            const file = document.getElementById('image-selector').files[0]\n            var image = document.getElementById('output')\n\t        image.src = URL.createObjectURL(file);\n            image.style.display='block'\n            console.log(file)\n            console.log(image.src)\n            this.imageSelected=true\n            /*\n            let data = new FormData()\n            data.append('file', file, file.name)\n            \n            getAPI.post('/test',data, {headers: {\"Content-Type\": \"multipart/form-data\"}}).then((res) => {\n                console.log(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            */\n\n            \n        },\n        showGenres(){\n            var genre_selector = document.getElementById('genre-selector')\n            document.getElementById('tag-selector').style.display='none'\n            if(genre_selector.style.display=='flex'){\n                genre_selector.style.display = 'none'\n            }else{\n                genre_selector.style.display = 'flex'\n            }\n        },\n        showTags(){\n            var tag_selector = document.getElementById('tag-selector')\n            document.getElementById('genre-selector').style.display='none'\n            if(tag_selector.style.display=='flex'){\n                tag_selector.style.display = 'none'\n            }else{\n                tag_selector.style.display = 'flex'\n            }\n        },\n    },\n    created(){\n        getAPI.get('/uploaddata')\n          .then(response => {\n            console.log('Descriptor API has recieved data')\n            this.genres = response.data['genres']\n            this.tags = response.data['tags']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          \n    }\n}\n</script>\n<style scoped>\ntable{\n    height:fit-content;\n}\nbutton{\n    background:none;\n    border-right:none\n}\n::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: red;\n  opacity: 1; /* Firefox */\n}\n#upload{\n    box-shadow: 0 4px 8px 0 var(--shadowColor), 0 6px 20px 0 var(--shadowColor);\n     border-radius:20px;\n     padding:20px;\n}\ninput{\n    margin-right:5px;\n}\n.unselectable{\n      font-size:14px;\n      color:rgb(136,136,136);\n  }\n#download{\n    width:100%;\n    height:fit-content;\n}\n#genre-selector{\n    display:none;\n}\n#tag-selector{\n    display:none;\n}\n\n#upload_tables{\n    display:flex;\n    flex-direction:row;\n}\n#image-selector{\n    margin:auto;\n    width:100px;\n}\n.category{\n    font-weight: bold;\n      padding-bottom: 10px;\n      padding-right:20px;\n      width:15%;\n      min-width:125px;\n      vertical-align: top;\n      color:black;\n   \n}\n#completedEdit{\n     background-color:transparent;\n    border:none;\n    appearance: none;\n}\n.info{\n    font-weight:normal;\n      width: 85%;\n      line-height: 20px;\n      font-size:14px;\n      vertical-align:top;\n}\n#output{\n    margin:auto;\n    width:100%;\n    height:100%;\n    display:none;\n}\n#image-border{\n    height:300px;\n    width:200px;\n    border:1px solid black;\n    margin-right:20px;\n    border-radius:10px;\n    background-color: var(--backgroundColor));\n    float:left;\n    transition: all .2s ease;\n    overflow:hidden;\n    display:flex\n}\n#remove-image{\n    color:rgb(136,136,136);\n    position:relative;\n    top:0px;\n    left:170px;\n    height:30px;\n    width:30px;\n    border:none;\n    font-size:20px;\n}\n#summary{\n    width: 100%;\n    text-align: left;\n    display: flex;\n    flex-direction: column;\n    align-self: center;\n    height:fit-content;\n    margin-top:20px;\n}\n#noveldescription{\n    width:100%;\n    font-size: 14px;\n    color:rgb(136,136,136);\n    height:fit-content;\n}\n#divider{\n    font-size:18px;\n    font-weight:bold;\n    margin-left:15px;\n    line-height:18px;\n    height:30px;\n    padding-top:6px;\n}\n#noveltitle{\n      color: var(--styleColor);\n      font-size: 20px;\n      margin-bottom: 25px;\n      line-height:20px;\n      height:fit-content;\n      margin-top:30px;\n      font-weight:bold;\n      font-family: 'Times New Roman', serif;\n      \n  }\n\n@media (max-width: 775px) {\n    #genres{\n        grid-template-rows: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\n        width:300px;\n        margin-left:20px;\n    }\n    #tagList{\n        width:350px;\n    }\n    #tagselector{\n        width:350px;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}