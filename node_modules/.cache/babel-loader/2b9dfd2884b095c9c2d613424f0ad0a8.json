{"ast":null,"code":"import ChapterSelector from '../components/ChapterSelector';\nimport Navigator from '../components/Navigator';\nimport { getAPI } from '../axios-api';\nexport default {\n  name: 'Chapter',\n  components: {\n    ChapterSelector,\n    Navigator\n  },\n  props: ['novelData', 'chapterList', 'tier'],\n\n  data() {\n    return {\n      chapter: this.chapterList[this.$route.params.chapter - 1],\n      chapterContent: ''\n    };\n  },\n\n  methods: {\n    changeFontSize(change) {\n      const txt = document.getElementById('content');\n      const style = window.getComputedStyle(txt, null).getPropertyValue('font-size');\n      const currentSize = parseFloat(style);\n      txt.style.fontSize = currentSize + change + 'px';\n    },\n\n    triggerEdit() {\n      if (document.getElementById('content').contentEditable == 'true') {\n        const url = '/chapter?novel=' + this.chapter.novelid + '&chapter=' + this.chapter.chapternumber;\n        document.getElementById('content').contentEditable = 'false';\n        document.getElementById('editButton').innerHTML = 'Edit';\n        const content = document.getElementById('content').innerHTML;\n        getAPI.put(url, {\n          content: content\n        }).then(function (response) {\n          console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        document.getElementById('content').contentEditable = 'true';\n        document.getElementById('editButton').innerHTML = 'Save';\n      }\n    }\n\n  },\n\n  created() {\n    const url = '/chapter?novel=' + this.chapter.novelid + '&chapter=' + this.chapter.chapternumber;\n    getAPI.get(url).then(response => {\n      console.log('Chapter API has recieved data');\n      this.chapterContent = response.data;\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAwCA,OAAOA,eAAP,MAA4B,+BAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACI,eAAc;EACVC,IAAI,EAAE,SADI;EAEVC,UAAU,EAAC;IACPJ,eADO;IAEPC;EAFO,CAFD;EAKRI,KAAK,EAAC,CACR,WADQ,EAER,aAFQ,EAGR,MAHQ,CALE;;EASRC,IAAI,GAAE;IACJ,OAAM;MACFC,OAAO,EAAC,KAAKC,WAAL,CAAiB,KAAKC,MAAL,CAAYC,MAAZ,CAAmBH,OAAnB,GAA2B,CAA5C,CADN;MAEFI,cAAc,EAAC;IAFb,CAAN;EAIH,CAdS;;EAcRC,OAAO,EAAC;IACNC,cAAc,CAACC,MAAD,EAAQ;MAClB,MAAMC,GAAE,GAAIC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAZ;MACA,MAAMC,KAAI,GAAIC,MAAM,CAACC,gBAAP,CAAwBL,GAAxB,EAA6B,IAA7B,EAAmCM,gBAAnC,CAAoD,WAApD,CAAd;MACA,MAAMC,WAAU,GAAIC,UAAU,CAACL,KAAD,CAA9B;MACAH,GAAG,CAACG,KAAJ,CAAUM,QAAV,GAAsBF,WAAU,GAAIR,MAAf,GAAyB,IAA9C;IACH,CANK;;IAONW,WAAW,GAAE;MACT,IAAGT,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCS,eAAnC,IAAoD,MAAvD,EAA8D;QAC1D,MAAMC,GAAE,GAAI,oBAAkB,KAAKpB,OAAL,CAAaqB,OAA/B,GAAuC,WAAvC,GAAmD,KAAKrB,OAAL,CAAasB,aAA5E;QACAb,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCS,eAAnC,GAAmD,OAAnD;QACAV,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCa,SAAtC,GAAgD,MAAhD;QACA,MAAMC,OAAM,GAAIf,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCa,SAAnD;QACA5B,MAAM,CAAC8B,GAAP,CAAWL,GAAX,EAAe;UAACI,OAAO,EAACA;QAAT,CAAf,EACKE,IADL,CACU,UAAUC,QAAV,EAAoB;UACtBC,OAAO,CAACC,GAAR,CAAYF,QAAZ;QACH,CAHL,EAIKG,KAJL,CAIW,UAAUC,KAAV,EAAiB;UACpBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;QACH,CANL;MAOH,CAZD,MAYK;QACLtB,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCS,eAAnC,GAAmD,MAAnD;QACAV,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCa,SAAtC,GAAgD,MAAhD;MACA;IACJ;;EAxBM,CAdA;;EAwCVS,OAAO,GAAE;IACL,MAAMZ,GAAE,GAAI,oBAAkB,KAAKpB,OAAL,CAAaqB,OAA/B,GAAuC,WAAvC,GAAmD,KAAKrB,OAAL,CAAasB,aAA5E;IACA3B,MAAM,CAACsC,GAAP,CAAWb,GAAX,EACDM,IADC,CACIC,QAAO,IAAK;MAChBC,OAAO,CAACC,GAAR,CAAY,+BAAZ;MACA,KAAKzB,cAAL,GAAsBuB,QAAQ,CAAC5B,IAA/B;IACD,CAJC,EAKD+B,KALC,CAKKI,GAAE,IAAK;MACZN,OAAO,CAACC,GAAR,CAAYK,GAAZ;IACD,CAPC;EAUH;;AApDS,CAAd","names":["ChapterSelector","Navigator","getAPI","name","components","props","data","chapter","chapterList","$route","params","chapterContent","methods","changeFontSize","change","txt","document","getElementById","style","window","getComputedStyle","getPropertyValue","currentSize","parseFloat","fontSize","triggerEdit","contentEditable","url","novelid","chapternumber","innerHTML","content","put","then","response","console","log","catch","error","created","get","err"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Chapter.vue"],"sourcesContent":["<template>\n<div id = 'chapter' v-if='chapter'>\n    <div class = \"content\">\n     <br>\n        <h3 style = \"font-size: 25px\" v-html='novelData.title+\" - \"+chapter.chapternumber'/>\n        <Navigator\n         :novel-id='novelData.novel'\n         :novel='novelData.title'\n         :chapter='chapter'\n        />\n        <br>\n        <div class='controlbuttonscontainer' selectable='false'>\n            <button class = 'controlbuttons' @click='changeFontSize(1)'>+</button>\n            <button class = 'controlbuttons' @click='changeFontSize(-1)'>-</button>\n            <!--\n            <button class = 'controlbuttons'>{</button>\n            <button class = 'controlbuttons'>{</button>\n            -->\n        </div>\n        <br>\n        <br>\n        <ChapterSelector\n            :chapterList= 'chapterList'\n            v-on:changeChapter=\"updateContent($event)\"\n        />\n       \n        <br> <button id = 'editButton' @click='triggerEdit' v-if='tier==5'>Edit</button><br>\n          <pre id = 'content'>\n          &#60;&#60;&#60; Oira, the Zi clan in the Dage Trench, and the sea serpent Zaratop! &#62;&#62;&#62;\n          </pre>\n           &lt;&#60;&#60;\n        <ChapterSelector\n            :chapterList='chapterList'\n            v-on:changeChapter=\"updateContent($event)\"\n        />\n        <br><br>\n    </div>\n</div>\n</template>\n<script>\nimport ChapterSelector from '../components/ChapterSelector'\nimport Navigator from '../components/Navigator'\nimport { getAPI } from '../axios-api'\n    export default{\n        name: 'Chapter',\n        components:{\n            ChapterSelector,\n            Navigator,\n        },props:[\n        'novelData',\n        'chapterList',\n        'tier'\n        ],data(){\n            return{\n                chapter:this.chapterList[this.$route.params.chapter-1],\n                chapterContent:''\n            }\n        },methods:{\n            changeFontSize(change){\n                const txt = document.getElementById('content');\n                const style = window.getComputedStyle(txt, null).getPropertyValue('font-size');\n                const currentSize = parseFloat(style);\n                txt.style.fontSize = (currentSize + change) + 'px';\n            },\n            triggerEdit(){\n                if(document.getElementById('content').contentEditable=='true'){\n                    const url = '/chapter?novel='+this.chapter.novelid+'&chapter='+this.chapter.chapternumber\n                    document.getElementById('content').contentEditable='false'\n                    document.getElementById('editButton').innerHTML='Edit'\n                    const content = document.getElementById('content').innerHTML\n                    getAPI.put(url,{content:content})\n                        .then(function (response) {\n                            console.log(response);\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        })\n                }else{\n                document.getElementById('content').contentEditable='true'\n                document.getElementById('editButton').innerHTML='Save'\n                }\n            }    \n        },\n        created(){\n            const url = '/chapter?novel='+this.chapter.novelid+'&chapter='+this.chapter.chapternumber\n            getAPI.get(url)\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.chapterContent = response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n            \n        \n        },\n    }\n</script>\n<style scoped>\npre{\nfont-family: Helvetica,sans-serif;\nfont-size:19px;\nwhite-space: pre-wrap;\nfont-weight:lighter;\noverflow:hidden;\n}\n#editButton{\n    width:170px;\n    background-color:var(--styleColor);\n    color:white;\n    float:right;\n    border-radius:5px;\n}\n.controlbuttonscontainer{\n    float:right;\n    \n}\nbutton.controlbuttons{\n    border-radius:15px;\n    background-color:lightgray;\n    height:30px;\n    width:30px;\n    font-size:20px;\n    text-align:center;\n    vertical-align:middle;\n    line-height:20px;\n    margin-left:17px;\n    color:var(--styleColor);\n    user-select: none;\n    -webkit-user-select: none;\n    -webkit-touch-callout: none; \n}\nbutton.controlbuttons:hover{\n    color:white;\n    background-color:var(--styleColor);\n    transition: all .2s ease;\n}\n</style>"]},"metadata":{},"sourceType":"module"}