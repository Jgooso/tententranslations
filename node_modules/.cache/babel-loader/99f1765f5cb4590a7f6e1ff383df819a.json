{"ast":null,"code":"function getProperty(target, prop) {\n  if (typeof prop === \"string\") {\n    for (const [name, value] of Object.entries(target)) {\n      if (prop.toLowerCase() === name.toLowerCase()) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexport const proxyHeaders = object => new Proxy(object, {\n  get: (target, prop) => getProperty(target, prop),\n  has: (target, prop) => getProperty(target, prop) !== undefined\n});","map":{"version":3,"names":["getProperty","target","prop","name","value","Object","entries","toLowerCase","undefined","proxyHeaders","object","Proxy","get","has"],"sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/node_modules/form-data-encoder/lib/util/proxyHeaders.js"],"sourcesContent":["function getProperty(target, prop) {\n    if (typeof prop === \"string\") {\n        for (const [name, value] of Object.entries(target)) {\n            if (prop.toLowerCase() === name.toLowerCase()) {\n                return value;\n            }\n        }\n    }\n    return undefined;\n}\nexport const proxyHeaders = (object) => new Proxy(object, {\n    get: (target, prop) => getProperty(target, prop),\n    has: (target, prop) => getProperty(target, prop) !== undefined\n});\n"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,IAA7B,EAAmC;EAC/B,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;IAC1B,KAAK,MAAM,CAACC,IAAD,EAAOC,KAAP,CAAX,IAA4BC,MAAM,CAACC,OAAP,CAAeL,MAAf,CAA5B,EAAoD;MAChD,IAAIC,IAAI,CAACK,WAAL,OAAuBJ,IAAI,CAACI,WAAL,EAA3B,EAA+C;QAC3C,OAAOH,KAAP;MACH;IACJ;EACJ;;EACD,OAAOI,SAAP;AACH;;AACD,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY,IAAIC,KAAJ,CAAUD,MAAV,EAAkB;EACtDE,GAAG,EAAE,CAACX,MAAD,EAASC,IAAT,KAAkBF,WAAW,CAACC,MAAD,EAASC,IAAT,CADoB;EAEtDW,GAAG,EAAE,CAACZ,MAAD,EAASC,IAAT,KAAkBF,WAAW,CAACC,MAAD,EAASC,IAAT,CAAX,KAA8BM;AAFC,CAAlB,CAAjC"},"metadata":{},"sourceType":"module"}