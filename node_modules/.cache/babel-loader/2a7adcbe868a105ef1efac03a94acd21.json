{"ast":null,"code":"import { getAPI } from '../axios-api';\nexport default {\n  data() {\n    return {\n      selectednovel: [],\n      novelList: [],\n      novelData: []\n    };\n  },\n\n  methods: {\n    getNovel() {},\n\n    selectNovel() {\n      this.selectednovel = document.getElementById(\"novel-selector\").value;\n      console.log(this.selectednovel);\n      const url = '/novel/single?novel=' + this.selectednovel + '&tier=1';\n      getAPI.get(url).then(response => {\n        console.log('Post Novel has recieved data');\n        this.novelData = response.data['Novel'];\n        this.sectionList = response.data['Chapters'].filter(chapter => chapter.chapternumber == 0);\n        this.chapterList = response.data['Chapters'].filter(chapter => chapter.chapternumber != 0);\n        this.isMounted = true;\n      }).catch(err => {\n        console.log(err);\n      });\n      console.log(this.novelData);\n    }\n\n  },\n\n  created() {\n    getAPI.get('/noveltitles').then(response => {\n      console.log('Chapter API has recieved data');\n      this.novelList = response.data;\n      console.log(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAqBA,SAASA,MAAT,QAAuB,cAAvB;AACA,eAAc;EACVC,IAAG,GAAI;IACH,OAAM;MACFC,aAAa,EAAC,EADZ;MAEFC,SAAS,EAAC,EAFR;MAGFC,SAAS,EAAC;IAHR,CAAN;EAKH,CAPS;;EAQVC,OAAO,EAAC;IACJC,QAAQ,GAAE,CAET,CAHG;;IAIJC,WAAW,GAAE;MACT,KAAKL,aAAL,GAAqBM,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA/D;MACAC,OAAO,CAACC,GAAR,CAAY,KAAKV,aAAjB;MACA,MAAMW,GAAE,GAAI,yBAAuB,KAAKX,aAA5B,GAA0C,SAAtD;MACAF,MAAM,CAACc,GAAP,CAAWD,GAAX,EACDE,IADC,CACIC,QAAO,IAAK;QAChBL,OAAO,CAACC,GAAR,CAAY,8BAAZ;QACA,KAAKR,SAAL,GAAeY,QAAQ,CAACf,IAAT,CAAc,OAAd,CAAf;QACA,KAAKgB,WAAL,GAAiBD,QAAQ,CAACf,IAAT,CAAc,UAAd,EAA0BiB,MAA1B,CAAiCC,OAAM,IAAKA,OAAO,CAACC,aAAR,IAAyB,CAArE,CAAjB;QACA,KAAKC,WAAL,GAAiBL,QAAQ,CAACf,IAAT,CAAc,UAAd,EAA0BiB,MAA1B,CAAiCC,OAAM,IAAKA,OAAO,CAACC,aAAR,IAAyB,CAArE,CAAjB;QACA,KAAKE,SAAL,GAAe,IAAf;MACD,CAPC,EAQDC,KARC,CAQKC,GAAE,IAAK;QACZb,OAAO,CAACC,GAAR,CAAYY,GAAZ;MACD,CAVC;MAWLb,OAAO,CAACC,GAAR,CAAY,KAAKR,SAAjB;IACC;;EApBI,CARE;;EA8BVqB,OAAO,GAAE;IACLzB,MAAM,CAACc,GAAP,CAAW,cAAX,EACGC,IADH,CACQC,QAAO,IAAK;MAChBL,OAAO,CAACC,GAAR,CAAY,+BAAZ;MACA,KAAKT,SAAL,GAAiBa,QAAQ,CAACf,IAA1B;MACAU,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACf,IAArB;IACD,CALH,EAMGsB,KANH,CAMSC,GAAE,IAAK;MACZb,OAAO,CAACC,GAAR,CAAYY,GAAZ;IACD,CARH;EASJ;;AAxCU,CAAd","names":["getAPI","data","selectednovel","novelList","novelData","methods","getNovel","selectNovel","document","getElementById","value","console","log","url","get","then","response","sectionList","filter","chapter","chapternumber","chapterList","isMounted","catch","err","created"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/EditPage.vue"],"sourcesContent":["<template>\n<div>\n    <select id = 'novel-selector' @change=\"selectNovel()\">\n        <option v-for='novel in novelList' :value='novel.novelid'>{{novel.title}}</option>\n    </select>\n    <table>\n        <tr>\n        <td>Title</td>\n        <td v-text = 'novelData.title' contenteditable=\"true\"/>\n        </tr>\n        <br>\n        <tr v-for='(key,value) in novelData'>\n            <td v-html = 'value'/>\n            <td v-html = 'key'/>\n        </tr>\n    </table>\n</div>\n</template>\n\n\n<script>\nimport { getAPI } from '../axios-api'\nexport default{\n    data (){\n        return{\n            selectednovel:[],\n            novelList:[],\n            novelData:[]\n        }\n    },\n    methods:{\n        getNovel(){\n        \n        },\n        selectNovel(){\n            this.selectednovel = document.getElementById(\"novel-selector\").value\n            console.log(this.selectednovel)\n            const url = '/novel/single?novel='+this.selectednovel+'&tier=1'\n            getAPI.get(url)\n          .then(response => {\n            console.log('Post Novel has recieved data')\n            this.novelData=response.data['Novel']\n            this.sectionList=response.data['Chapters'].filter(chapter => chapter.chapternumber == 0)\n            this.chapterList=response.data['Chapters'].filter(chapter => chapter.chapternumber != 0)\n            this.isMounted=true\n          })\n          .catch(err => {\n            console.log(err)\n          })\n       console.log(this.novelData)\n        }\n    },\n    created(){\n        getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novelList = response.data\n            console.log(response.data)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}