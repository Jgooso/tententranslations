{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0ecd383b\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"download\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"loadingscreen\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"loader\"\n})], -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"fname\"\n}, \"URL:\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  id: \"urltextbox\",\n  name: \"url\",\n  maxlength: \"34\",\n  style: {\n    \"width\": \"280px\"\n  }\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  id: \"genres\"\n};\nconst _hoisted_6 = [\"value\", \"name\"];\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"tagfilter\"\n}, \"Filter\", -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = {\n  id: \"tagList\"\n};\nconst _hoisted_11 = {\n  class: \"selectedtaglist\"\n};\nconst _hoisted_12 = {\n  id: \"tagselector\"\n};\nconst _hoisted_13 = [\"id\", \"innerHTML\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_tagBox = _resolveComponent(\"tagBox\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.genres, genre => {\n    return _openBlock(), _createElementBlock(\"label\", {\n      key: genre\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      value: genre,\n      name: genre,\n      class: \"genrecheckbox\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_6), _createTextVNode(_toDisplayString(genre), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _hoisted_7, _hoisted_8, _createElementVNode(\"input\", {\n    type: \"submit\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.postData())\n  }), _hoisted_9, _createElementVNode(\"input\", {\n    id: \"tagfilter\",\n    onKeyup: _cache[1] || (_cache[1] = $event => $options.filterTag()),\n    onFocus: _cache[2] || (_cache[2] = $event => $options.showtags())\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"ul\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedtags, tag => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: tag\n    }, [_createVNode(_component_tagBox, {\n      tag: tag,\n      onRemove: $options.removeTag\n    }, null, 8\n    /* PROPS */\n    , [\"tag\", \"onRemove\"])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tags, tag => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: tag,\n      class: \"tagbutton unselected\",\n      id: tag,\n      innerHTML: tag,\n      onClick: $event => $options.addTag(tag)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_13);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;;;;EACKA,EAAE,EAAG;;;gEACVC,oBAA0D,KAA1D,EAA0D;EAArDD,EAAE,EAAG;AAAgD,CAA1D,EAAyB,cAACC,oBAA0B,KAA1B,EAA0B;EAArBC,KAAK,EAAC;AAAe,CAA1B,CAAD,CAAzB;;AAAA;;gEACAD,oBAA+B,OAA/B,EAA+B;EAAxBE,GAAG,EAAC;AAAoB,CAA/B,EAAmB,MAAnB,EAAuB;AAAA;AAAvB;;gEACAF,oBAAwF,OAAxF,EAAwF;EAAjFG,IAAI,EAAG,MAA0E;EAAnEJ,EAAE,EAAG,YAA8D;EAAjDK,IAAI,EAAG,KAA0C;EAApCC,SAAS,EAAC,IAA0B;EAArBC,KAAmB,EAAnB;IAAA;EAAA;AAAqB,CAAxF;;AAAA;;;EACKP,EAAE,EAAG;;;;gEAGVC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gEAAIA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gEAEJA,oBAAqC,OAArC,EAAqC;EAA9BE,GAAG,EAAC;AAA0B,CAArC,EAAuB,QAAvB,EAA6B;AAAA;AAA7B;;;EAEMH,EAAE,EAAG;;;EACHE,KAAK,EAAG;;;EAGPF,EAAE,EAAG;;;;;;uBAfdQ,oBAmBM,KAnBN,cAmBM,CAlBNC,UAkBM,EAjBNC,UAiBM,EAhBNC,UAgBM,EAfNV,oBAEM,KAFN,cAEM,oBADNO,oBAA6II,SAA7I,EAA6I,IAA7I,EAA6IC,YAAtHC,YAAsH,EAA/HC,KAAe,IAAV;yBAAnBP,oBAA6I,OAA7I,EAA6I;MAA7GQ,GAAG,EAAID;IAAsG,CAA7I,EAA4C,CAAEd,oBAA8E,OAA9E,EAA8E;MAAvEG,IAAI,EAAC,UAAkE;MAAtDa,KAAK,EAAEF,KAA+C;MAAvCV,IAAI,EAAIU,KAA+B;MAAxBb,KAAK,EAAG;IAAgB,CAA9E;;IAAA,aAAF,oCAAkFa,QAAK;IAAA;KAAvF,CAA5C;GAA6I,CAA7I;;EAAA,CACM,EAFN,CAeM,EAZNG,UAYM,EAZFC,UAYE,EAXNlB,oBAA2C,OAA3C,EAA2C;IAApCG,IAAI,EAAG,QAA6B;IAAnBgB,OAAK,sCAAEC,mBAAF;EAAc,CAA3C,CAWM,EAVNC,UAUM,EATNrB,oBAAiE,OAAjE,EAAiE;IAA1DD,EAAE,EAAG,WAAqD;IAAxCuB,OAAK,sCAAEF,oBAAF,CAAmC;IAAnBG,OAAK,sCAAEH,mBAAF;EAAc,CAAjE;;EAAA,CASM,EARNpB,oBAOM,KAPN,eAOM,CANFA,oBAEK,IAFL,eAEK,oBADDO,oBAA0FI,SAA1F,EAA0F,IAA1F,EAA0FC,YAAxEC,kBAAwE,EAA/EW,GAAmB,IAAhB;yBAAdjB,oBAA0F,IAA1F,EAA0F;MAAzDQ,GAAG,EAAIS;IAAkD,CAA1F,EAA2C,CAAEC,aAAwCC,iBAAxC,EAAwC;MAA/BF,GAAG,EAAEA,GAA0B;MAApBG,QAAM,EAAEP;IAAY,CAAxC;;IAAA,sBAAF,CAA3C;GAA0F,CAA1F;;EAAA,CACC,EAFL,CAME,EAHFpB,oBAEM,KAFN,eAEM,oBADFO,oBAAqHI,SAArH,EAAqH,IAArH,EAAqHC,YAA/FC,UAA+F,EAAtGW,GAAW,IAAR;yBAAlBjB,oBAAqH,QAArH,EAAqH;MAAxFQ,GAAG,EAAES,GAAmF;MAA9EvB,KAAK,EAAG,sBAAsE;MAA9CF,EAAE,EAAIyB,GAAwC;MAAnCI,SAAY,EAAJJ,GAA2B;MAArBL,OAAK,YAAEC,gBAAOI,GAAP;IAAc,CAArH;;IAAA;GAAqH,CAArH;;EAAA,CACE,EAFN,CAGE,CAPN,CAQM,CAnBN","names":["id","_createElementVNode","class","for","type","name","maxlength","style","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","genre","key","value","_hoisted_7","_hoisted_8","onClick","$options","_hoisted_9","onKeyup","onFocus","tag","_createVNode","_component_tagBox","onRemove","innerHTML"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Upload.vue"],"sourcesContent":["<template>\n<div id = 'download'>\n<div id = 'loadingscreen'><div class=\"loader\"></div></div>\n<label for=\"fname\">URL:</label>\n<input type = \"text\" id = 'urltextbox' name = 'url' maxlength=\"34\" style='width:280px' >\n<div id = 'genres'>\n<label v-for='genre in genres' :key = 'genre'><input type='checkbox' :value='genre' :name = 'genre' class = 'genrecheckbox'>{{genre}}</label>\n</div>\n<br><br>\n<input type = 'submit' @click='postData()'>\n<label for='tagfilter'>Filter</label>\n<input id = 'tagfilter' @keyup='filterTag()' @focus='showtags()'>\n<div  id = 'tagList'>\n    <ul class = 'selectedtaglist' >\n        <li v-for='tag in selectedtags' :key = 'tag'><tagBox :tag='tag' @remove='removeTag'/></li>\n    </ul>\n    <div id = 'tagselector'>\n        <button v-for='tag in tags' :key='tag' class = 'tagbutton unselected' :id = 'tag' v-html='tag' @click='addTag(tag)'/>\n    </div>\n</div>\n</div>\n\n</template>\n<script>\nimport { getAPI } from '../axios-api'\nimport tagBox from '../components/TagBox'\nexport default{\n    data(){\n        return{\n            genres:[],\n            tags:[],\n            selectedtags:[],\n            selectedgenres:[]\n        }\n    },\n    components:{\n        tagBox,\n    },\nmethods:{\n        addTag(tag){\n            const tagbutton = document.getElementById(tag)\n            tagbutton.classList.remove('unselected')\n            if(!this.selectedtags.includes(tag)){\n                this.selectedtags.push(tag)\n            }\n           \n        },\n        removeTag(removetag){\n            const index = this.selectedtags.indexOf(removetag)\n            this.selectedtags.splice(index,1)\n            document.getElementById(removetag).classList.add('unselected')\n        },\n        filterTag(){\n            var input, tagbuttons, txtValue\n            input = document.getElementById('tagfilter').value.toUpperCase()\n            tagbuttons = document.getElementsByClassName('tagbutton')\n            for(var i = 0; i < tagbuttons.length; i++){\n                txtValue = tagbuttons[i].value || tagbuttons[i].innerText;\n                if (txtValue.toUpperCase().indexOf(input) > -1) {\n                    tagbuttons[i].style.display = \"\";\n                } else {\n                    tagbuttons[i].style.display = \"none\";\n                }\n            }\n        },\n        showtags(){\n            document.getElementById('tagselector').style.display = 'flex'\n        },\n        postData(){\n            const loadingscreen = document.getElementById('loadingscreen')\n            loadingscreen.style.display = 'block'\n            const url = document.getElementById('urltextbox').value;\n            const genres = document.getElementsByClassName('genrecheckbox')\n            var selectedGenres = []\n            for(var i=0; i < genres.length; i++){\n                if(genres[i].checked==true){\n                    selectedGenres.push(genres[i].value)\n                }\n            }\n            console.log('posted')\n            getAPI.post('/novel/single', {url:url,tags:this.selectedtags,genres:selectedGenres})\n                .then(function (response) {\n                    console.log(response);\n                    loadingscreen.style.display = 'none'\n            })\n                .catch(function (error) {\n                    console.log(error);\n                    loadingscreen.style.display = 'none'\n            }); \n        }\n    },\n    created(){\n        \n        getAPI.get('/uploaddata')\n          .then(response => {\n            console.log('Descriptor API has recieved data')\n            this.genres = response.data['genres']\n            this.tags = response.data['tags']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          \n    }\n}\n</script>\n<style scoped>\n#tagList{\nborder: 2px rgb(244,244,244) solid;\nwidth:800px;\nheight:fit-content;\nmin-height:50px;\nfloat:left;\n\n}\n#tagfilter{\n    height:30px;\n}\n.selectedtaglist{\n    display:inline;\n    list-style: none;\n    padding:0px;\n}\n.selectedtaglist li{\n    display:inline;\n    float:left;\n    margin-left:10px;\n}\n\n#tagselector{\n    display:none;\n    flex-direction:column;\n    overflow:scroll;\n    height:500px;\n    width:500px;\n}\n.tagbutton{\n    border:none;\n    color:lightgray;\n}\n.unselected{\n    color:black;\n}\n.unselected:hover{\n    background-color:blue;\n    color:white;\n}\nbutton{\n    background:none;\n    border-right:none\n}\n#genres{\n    position:relative;\n    display:grid;\n    grid-template-rows: auto auto auto auto auto auto auto auto auto;\n    grid-auto-flow: column;\n    column-gap: 30px;\n    row-gap:10px;\n    margin:auto;\n    width:100%\n}\ninput{\n    margin-right:5px;\n}\n#tagSelect{\n    background:lightgray;\n    border:none;\n    -webkit-appearance: none;\n}\n#tags{\n    width:100%\n}\n#tagtextbox{\n    width:500px;\n    text-align:left;\n    overflow-wrap: break-word\n}\n#download{\n    width:100%;\n    height:fit-content;\n}\n.loader {\n  border: 16px solid #f3f3f3; /* Light grey */\n  border-top: 16px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  animation: spin 2s linear infinite;\n  margin:auto;\n  margin-top:170px;\n\n}\n#loadingscreen{\n    display:none;\n    position:absolute;\n    z-index:5;\n    width:100%;\n    height:100%;\n    background-color:rgba(0,0,0,0.5)\n}\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n@media (max-width: 775px) {\n    #genres{\n        grid-template-rows: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}