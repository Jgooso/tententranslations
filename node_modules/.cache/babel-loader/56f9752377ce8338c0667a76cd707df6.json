{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = [\"value\"];\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Title\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = [\"textContent\"];\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"td\", null, \"Description\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = [\"innerHTML\"];\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", null, \"Novel Active\"), /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"button\", null, \"Activate Novel\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"td\", null, \"Raw Status\", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"td\", null, \"Genres\", -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"td\", null, \"tags\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"select\", {\n    id: \"novel-selector\",\n    onChange: _cache[0] || (_cache[0] = $event => $options.selectNovel())\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.novelList, novel => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: novel.novelid\n    }, _toDisplayString(novel.title), 9\n    /* TEXT, PROPS */\n    , _hoisted_1);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"table\", null, [_createElementVNode(\"tr\", null, [_hoisted_2, _createElementVNode(\"td\", {\n    textContent: _toDisplayString($data.novelData.title),\n    contenteditable: \"true\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_3)]), _hoisted_4, _createElementVNode(\"tr\", null, [_hoisted_5, _createElementVNode(\"td\", {\n    innerHTML: $data.novelData.description,\n    contenteditable: \"true\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_6)]), _hoisted_7, _createElementVNode(\"tr\", null, [_hoisted_8, _createElementVNode(\"td\", null, _toDisplayString($data.novelData.novelstatus), 1\n  /* TEXT */\n  )]), _createElementVNode(\"tr\", null, [_hoisted_9, _createElementVNode(\"td\", null, _toDisplayString($data.novelData.genres), 1\n  /* TEXT */\n  )]), _createElementVNode(\"tr\", null, [_hoisted_10, _createElementVNode(\"td\", null, _toDisplayString($data.novelData.tags), 1\n  /* TEXT */\n  )])])]);\n}","map":{"version":3,"mappings":";;;gCAOYA,oBAAiC,IAAjC,EAAiC;EAA7BC,KAAK,EAAG;AAAqB,CAAjC,EAAuB,OAAvB,EAA4B;AAAA;AAA5B;;;;gCAGJD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCAEIA,oBAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,EAAe;AAAA;AAAf;;;;gCAGJA,oBAGK,IAHL,EAGK,IAHL,EAGK,cAFDA,oBAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,CAEC,eADDA,oBAAwC,IAAxC,EAAwC,IAAxC,EAAwC,cAApCA,oBAA+B,QAA/B,EAA+B,IAA/B,EAAQ,gBAAR,CAAoC,CAAxC,CACC,CAHL;;AAAA;;gCAKIA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;gCAIAA,oBAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,EAAU;AAAA;AAAV;;iCAIAA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,EAAQ;AAAA;AAAR;;;uBA3BZE,oBA+BM,KA/BN,EA+BM,IA/BN,EA+BM,CA9BFF,oBAES,QAFT,EAES;IAFDG,EAAE,EAAG,gBAEJ;IAFsBC,QAAM,sCAAEC,sBAAF;EAE5B,CAFT,sBACIH,oBAAkFI,SAAlF,EAAkF,IAAlF,EAAkFC,YAA1DC,eAA0D,EAAnEC,KAAkB,IAAb;yBAApBP,oBAAkF,QAAlF,EAAkF;MAA9CQ,KAAK,EAAED,KAAK,CAACE;IAAiC,CAAlF,mBAA4DF,KAAK,CAACG,MAAlE,EAAuE;IAAA;IAAvE,EAAuEC,UAAvE;GAAkF,CAAlF;;EAAA,GADJ;;EAAA,CA8BE,EA3BFb,oBA0BQ,OA1BR,EA0BQ,IA1BR,EA0BQ,CAzBJA,oBAGK,IAHL,EAGK,IAHL,EAGK,CAFDc,UAEC,EADDd,oBAAuD,IAAvD,EAAuD;iBAAnDe,iBAAUP,KAAgB,UAAhB,CAAUI,KAApB,CAAmD;IAAxBI,eAAe,EAAC;EAAQ,CAAvD;;EAAA,aACC,CAHL,CAyBI,EArBJC,UAqBI,EApBJjB,oBAGK,IAHL,EAGK,IAHL,EAGK,CAFDkB,UAEC,EADDlB,oBAA6D,IAA7D,EAA6D;IAAzDmB,SAAgC,EAAtBX,gBAAUY,WAAqC;IAAxBJ,eAAe,EAAC;EAAQ,CAA7D;;EAAA,aACC,CAHL,CAoBI,EAhBJK,UAgBI,EAZJrB,oBAGK,IAHL,EAGK,IAHL,EAGK,CAFDsB,UAEC,EADDtB,oBAAkC,IAAlC,EAAkC,IAAlC,EAAkCe,iBAA5BP,gBAAUe,WAAkB,CAAlC,EAA2B;EAAA;EAA3B,CACC,CAHL,CAYI,EARJvB,oBAGK,IAHL,EAGK,IAHL,EAGK,CAFDwB,UAEC,EADDxB,oBAA6B,IAA7B,EAA6B,IAA7B,EAA6Be,iBAAvBP,gBAAUiB,MAAa,CAA7B,EAAsB;EAAA;EAAtB,CACC,CAHL,CAQI,EAJJzB,oBAGK,IAHL,EAGK,IAHL,EAGK,CAFD0B,WAEC,EADD1B,oBAA2B,IAA3B,EAA2B,IAA3B,EAA2Be,iBAArBP,gBAAUmB,IAAW,CAA3B,EAAoB;EAAA;EAApB,CACC,CAHL,CAII,CA1BR,CA2BE,CA/BN","names":["_createElementVNode","class","_createElementBlock","id","onChange","$options","_Fragment","_renderList","$data","novel","value","novelid","title","_hoisted_1","_hoisted_2","_toDisplayString","contenteditable","_hoisted_4","_hoisted_5","innerHTML","description","_hoisted_7","_hoisted_8","novelstatus","_hoisted_9","genres","_hoisted_10","tags"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/EditPage.vue"],"sourcesContent":["<template>\n<div>\n    <select id = 'novel-selector' @change=\"selectNovel()\">\n        <option v-for='novel in novelList' :value='novel.novelid'>{{novel.title}}</option>\n    </select>\n    <table>\n        <tr>\n            <td class = 'category'>Title</td>\n            <td v-text = 'novelData.title' contenteditable=\"true\"/>\n        </tr>\n        <br>\n        <tr>\n            <td>Description</td>\n            <td v-html = 'novelData.description' contenteditable=\"true\"/>\n        </tr>\n        <tr>\n            <td>Novel Active</td>\n            <td><button>Activate Novel</button></td>\n        </tr>\n        <tr>\n            <td>Raw Status</td>\n            <td>{{novelData.novelstatus}}</td>\n        </tr>\n        <tr>\n            <td>Genres</td>\n            <td>{{novelData.genres}}</td>\n        </tr>\n        <tr>\n            <td>tags</td>\n            <td>{{novelData.tags}}</td>\n        </tr>\n    </table>\n</div>\n</template>\n\n\n<script>\nimport { getAPI } from '../axios-api'\nexport default{\n    data (){\n        return{\n            selectednovel:[],\n            novelList:[],\n            novelData:[]\n        }\n    },\n    methods:{\n        getNovel(){\n        \n        },\n        selectNovel(){\n            this.selectednovel = document.getElementById(\"novel-selector\").value\n            console.log(this.selectednovel)\n            const url = '/novel/single?novel='+this.selectednovel+'&tier=1'\n            getAPI.get(url)\n          .then(response => {\n            console.log('Post Novel has recieved data')\n            this.novelData=response.data['Novel']\n            this.sectionList=response.data['Chapters'].filter(chapter => chapter.chapternumber == 0)\n            this.chapterList=response.data['Chapters'].filter(chapter => chapter.chapternumber != 0)\n            this.isMounted=true\n          })\n          .catch(err => {\n            console.log(err)\n          })\n       console.log(this.novelData)\n        }\n    },\n    created(){\n        getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novelList = response.data\n            console.log(response.data)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}