{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Novel Release\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = [\"innerHTML\"];\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Novel status\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Genres\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Tags\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.novelstatus, p => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      innerHTML: Object.keys(p)[0] + \":\" + p[\"count\"]\n    }, null, 8\n    /* PROPS */\n    , _hoisted_2);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  )), _hoisted_3, _createTextVNode(\" \" + _toDisplayString($data.novelstatus) + \" \", 1\n  /* TEXT */\n  ), _hoisted_4, _createTextVNode(\" \" + _toDisplayString($data.genres) + \" \", 1\n  /* TEXT */\n  ), _hoisted_5, _createTextVNode(\" \" + _toDisplayString($data.tags), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,EAAiB;AAAA;AAAjB;;;;gCAEAA,oBAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,EAAgB;AAAA;AAAhB;;gCAEJA,oBAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,EAAU;AAAA;AAAV;;gCAEAA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,EAAQ;AAAA;AAAR;;;uBAPAC,oBAUM,KAVN,EAUM,IAVN,EAUM,CATFC,UASE,qBARFD,oBAAuEE,SAAvE,EAAuE,IAAvE,EAAuEC,YAAxDC,iBAAwD,EAA7DC,CAAgB,IAAf;yBAAXL,oBAAuE,GAAvE,EAAuE;MAA3CM,SAAyC,EAAjCC,MAAM,CAACC,IAAP,CAAYH,CAAZ,EAAa,CAAb,IAAa,GAAb,GAAsBA,CAAC;IAAY,CAAvE;;IAAA;GAAuE,CAAvE;;EAAA,CAQE,GAPFI,UAOE,mBAPmB,MACzBC,iBAAEN,iBAAF,CADyB,GACV,KACf;EAAA;GAKM,EALNO,UAKM,mBALS,MACfD,iBAAEN,YAAF,CADe,GACL,KACV;EAAA;GAGM,EAHNQ,UAGM,mBAHO,MACbF,iBAAEN,UAAF,GAAM;EAAA;GAEA,CAVN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","p","innerHTML","Object","keys","_hoisted_3","_toDisplayString","_hoisted_4","_hoisted_5"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Descriptor.vue"],"sourcesContent":["<template>\n<div>\n    <h3>Novel Release</h3>\n    <p v-for='p in novelstatus' v-html='Object.keys(p)[0]+\":\"+p[\"count\"]'/>\n    <h3>Novel status</h3>\n{{novelstatus}}\n<h3>Genres</h3>\n{{genres}}\n<h3>Tags</h3>\n{{tags}}\n\n</div>\n</template>\n\n<script>\n  import { getAPI } from '../axios-api'\nexport default{\n    name:'descriptorPage',\n    data(){\n        return {\n            novelrelease:[],\n            genres:[],\n            tags:[],\n            novelstatus:[],\n        }\n    },\n        created(){\n            const url = '/descriptorbution'\n            getAPI.get(url)\n          .then(response => {\n            console.log('Post Novel has recieved data')\n            this.novelrelease = response.data['novelrelease']\n            this.genres = response.data['genre']\n            this.tags = response.data['tag']\n            this.novelstatus = response.data['novelstatus']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n        }\n}\n</script>"]},"metadata":{},"sourceType":"module"}