{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-199eaeea\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  id: \"calender\"\n};\nconst _hoisted_3 = {\n  class: \"weekday\"\n};\nconst _hoisted_4 = [\"onContextmenu\"];\nconst _hoisted_5 = {\n  id: \"scheduleCreator\",\n  method: \"formSubmit\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h6\", null, \"Novel\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = [\"value\"];\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h6\", null, \"Start Date\", -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = [\"value\"];\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h6\", null, \"Upload Times\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = [\"name\"];\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h6\", null, \"Days of the Week\", -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = {\n  style: {\n    \"width\": \"100px\"\n  }\n};\nconst _hoisted_14 = [\"name\", \"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.dates[8] ? (_openBlock(), _createElementBlock(\"body\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.month), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.daysoftheWeek, (day, v) => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(day), 1\n    /* TEXT */\n    );\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  )), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.start_date, n => {\n    return _openBlock(), _createElementBlock(\"div\");\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  )), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dates, (date, k) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"cell\",\n      key: date,\n      onContextmenu: _withModifiers($event => $options.print(date, $event), [\"right\"])\n    }, [_createElementVNode(\"p\", null, _toDisplayString(k), 1\n    /* TEXT */\n    ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(date, d => {\n      return _openBlock(), _createElementBlock(\"p\", null, _toDisplayString(d['title']), 1\n      /* TEXT */\n      );\n    }), 256\n    /* UNKEYED_FRAGMENT */\n    ))], 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_4);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"form\", _hoisted_5, [_hoisted_6, _createElementVNode(\"select\", {\n    id: \"novel-selector\",\n    onChange: _cache[0] || (_cache[0] = $event => _ctx.selectNovel()),\n    name: \"novel\",\n    form: \"scheduleCreator\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.novels, novel => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: novel.novelid\n    }, _toDisplayString(novel.title), 9\n    /* TEXT, PROPS */\n    , _hoisted_7);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))], 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_8, _createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"start\",\n    name: \"upload-start\",\n    value: $data.selectedDay,\n    min: \"2022-01-01\",\n    max: \"2030-12-31\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_9), _hoisted_10, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.times, t => {\n    return _openBlock(), _createElementBlock(\"input\", {\n      type: \"time\",\n      name: \"time\" + t,\n      min: \"08:00\",\n      max: \"20:00\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_11);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  )), _createElementVNode(\"input\", {\n    type: \"button\",\n    style: {\n      \"background\": \"none\",\n      \"border\": \"none,border:1px solid black\",\n      \"height\": \"30px\",\n      \"width\": \"30px\"\n    },\n    onClick: _cache[1] || (_cache[1] = $event => this.times++),\n    value: \"+\"\n  }), _hoisted_12, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.daysoftheWeek.length, i => {\n    return _openBlock(), _createElementBlock(\"label\", _hoisted_13, [_createTextVNode(_toDisplayString($data.daysoftheWeek[i - 1]), 1\n    /* TEXT */\n    ), _createElementVNode(\"input\", {\n      type: \"checkbox\",\n      name: $data.daysoftheWeek[i - 1],\n      value: i - 1\n    }, null, 8\n    /* PROPS */\n    , _hoisted_14)]);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.formSubmit())\n  }, \"a\")])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":"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","names":["id","class","method","_createElementVNode","style","$data","_createElementBlock","_hoisted_1","_toDisplayString","_Fragment","_renderList","day","v","n","date","k","key","$options","$event","d","_hoisted_6","onChange","_ctx","name","form","novel","value","novelid","title","_hoisted_7","_hoisted_8","type","min","max","_hoisted_10","t","onClick","times","_hoisted_12","length","i"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/Calender.vue"],"sourcesContent":["<template>\n<body v-if='dates[8]'>\n<h1>\n{{month}}\n</h1>\n<div id = 'calender'>\n    <div class = 'weekday' v-for='(day,v) in daysoftheWeek'>\n    {{day}}\n    </div>\n    <div v-for='n in start_date'/>\n    <div class = 'cell' v-for='(date,k) in dates' :key = 'date' @click.right='print(date,$event)'>\n       <p>{{\n           k\n           }}\n       </p>\n       <p v-for='d in date'>{{d['title']}}</p>\n    </div>\n</div>\n<form id = 'scheduleCreator' method='formSubmit'>\n<h6>Novel</h6>\n<select id = 'novel-selector' @change=\"selectNovel()\" name = 'novel' form = 'scheduleCreator'>\n<option v-for='novel in novels' :value='novel.novelid'>{{novel.title}}</option>\n</select>\n<h6>Start Date</h6>\n<input type=\"date\" id=\"start\" name=\"upload-start\"\n       :value='selectedDay'\n       min=\"2022-01-01\" max=\"2030-12-31\">\n<h6>Upload Times</h6>\n<input type=\"time\" :name='\"time\"+t'\n       min=\"08:00\" max=\"20:00\" v-for='t in times'>\n<input type = 'button' style = 'background:none;border:none,border:1px solid black; height:30px; width:30px;' @click='this.times++' value = '+'>\n<h6>Days of the Week</h6>\n<label v-for='i in daysoftheWeek.length' style='width:100px;'>{{daysoftheWeek[i-1]}}<input type = 'checkbox' :name = 'daysoftheWeek[i-1]' :value = 'i-1'></label>\n</form>\n<button @click='formSubmit()'>a</button>\n</body>\n</template>\n\n<script>\nimport { getAPI } from '../axios-api'\nexport default{\n    name:'Calender',\n    data(){\n        return {\n            dates:[],\n            daysoftheWeek:['Sunday','Monday','Tuesady','Wednesday','Thursday','Friday','Saturday'],\n            month:'',\n            day:0,\n            selectedDay:[],\n            novels:[],\n            times:1,\n            start_date:0\n        }\n    },\n    props:[\n        'schedule'\n    ],\n\n    methods:{\n        print(a,event){\n            console.log(a)\n            const x = event.clientX;\n            const y= event.clientY;\n            console.log(x,y)\n            getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novels = response.data\n            console.log(this.novels[0].novelid)\n            //this.selectNovel(this.novels[0].novelid)\n            this.selectedDay=a.toISOString().split(\"T\")[0]\n            console.log(this.selectedDay)\n            var menu = document.getElementById('scheduleCreator')\n            menu.style.display = 'flex'\n            menu.style.left= x + 'px'\n            menu.style.top = 50+y + 'px'\n          })\n          .catch(err => {\n            console.log(err)\n          })\n            \n\n        },\n        formSubmit(){\n            console.log(document.getElementById('scheduleCreator'))\n            const form = document.getElementById('scheduleCreator')\n            const formData = new FormData(form)\n            getAPI.post('/schedule',formData, {headers: {\"Content-Type\": \"multipart/form-data\"}}).then((res) => {\n                console.log(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            \n        }\n    },\n    created(){\n        getAPI.get('/dates')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.dates = response.data['days']\n            console.log(response.data)\n            this.start_date = response.data[\"weekday_start\"]\n            console.log(this.start_date)\n            this.month = response.data['month']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          \n    }\n\n}\n</script>\n<style scoped>\n.cell{\n    border:1px black solid;\n    width:100%;\n    height:100%;\n    margin:0px;\n}\n#calender{\n    width:100%;\n    height:100%;\n    min-height:700px;\n    display:grid;\n    grid-template-columns: auto auto auto auto auto auto auto;\n    gap:0px;\n    border:1px solid black;\n}\n.weekday{\n    text-align:center;\n    width:100px;\n    margin:0px;\n    height:20px;\n}\n#scheduleCreator{\n    display:none;\n    background-color:lightgray;\n    position:absolute;\n    width:300px;\n    height:500px;\n    flex-direction:column;\n    padding:20px;\n    border-radius:20px;\n}\n#novel-selector{\n    width:100%;\n}\nh6{\n    margin-top:10px;\n    margin-bottom:10px;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module"}