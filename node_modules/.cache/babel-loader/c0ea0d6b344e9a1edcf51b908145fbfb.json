{"ast":null,"code":"import { getAPI } from '../axios-api';\nexport default {\n  name: 'Calender',\n\n  data() {\n    return {\n      dates: [],\n      daysoftheWeek: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      month_name: '',\n      month: 0,\n      year: 0,\n      day: 0,\n      selectedDay: [],\n      novels: [],\n      times: 1,\n      start_date: 0\n    };\n  },\n\n  props: ['schedule'],\n  methods: {\n    print(a, event) {\n      console.log(a);\n      const x = event.clientX;\n      const y = event.clientY;\n      console.log(x, y);\n      getAPI.get('/noveltitles').then(response => {\n        console.log('Chapter API has recieved data');\n        this.novels = response.data;\n        console.log(this.novels[0].novelid); //this.selectNovel(this.novels[0].novelid)\n\n        var menu = document.getElementById('scheduleCreator');\n        menu.style.display = 'flex';\n        menu.style.left = x + 'px';\n        menu.style.top = 150 + y + 'px';\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    formSubmit() {\n      console.log(document.getElementById('scheduleCreator'));\n      const form = document.getElementById('scheduleCreator');\n      const formData = new FormData(form);\n      getAPI.post('/schedule', formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    get_calender(month, year) {\n      const diff = new Date().getTimezoneOffset();\n      getAPI.get('/dates?offset=' + diff + '&month=' + month + '&year=' + year).then(response => {\n        console.log('Chapter API has recieved data');\n        this.dates = response.data['days'];\n        console.log(response.data);\n        this.start_date = response.data[\"weekday_start\"];\n        console.log(this.start_date);\n        this.month_name = response.data['month'];\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    change_month(change) {\n      if (change == 'today') {\n        var today = new Date();\n        this.month = String(today.getMonth() + 1).padStart(2, '0');\n        this.year = today.getFullYear();\n        this.get_calender(this.month, this.year);\n        return;\n      }\n\n      this.month -= change;\n\n      if (this.month > 12) {\n        this.month = 1;\n        this.year += 1;\n      }\n\n      if (this.month < 1) {\n        this.month = 12;\n        this.year -= 1;\n      }\n\n      this.get_calender(this.month, this.year);\n    }\n\n  },\n\n  created() {\n    var today = new Date();\n    this.month = String(today.getMonth() + 1).padStart(2, '0');\n    this.year = today.getFullYear();\n    this.get_calender(this.month, this.year);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["getAPI","name","data","dates","daysoftheWeek","month_name","month","year","day","selectedDay","novels","times","start_date","props","methods","print","a","event","console","log","x","clientX","y","clientY","get","then","response","novelid","menu","document","getElementById","style","display","left","top","catch","err","formSubmit","form","formData","FormData","post","headers","res","get_calender","diff","Date","getTimezoneOffset","change_month","change","today","String","getMonth","padStart","getFullYear","created"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/src/views/Schedular.vue"],"sourcesContent":["<template>\n<body v-if='dates[8]'>\n<h1>\n{{month_name}}, {{year}}\n</h1>\n<div id = 'navigator'>\n<label>&lt;<input type = button class = 'navigation-button' @click='change_month(1)'></label>\n<label>Today<input type = button class = 'navigation-button' @click='change_month(\"today\")'></label>\n<label>&gt;<input type = button class = 'navigation-button' @click='change_month(-1)'></label>\n</div>\n<div id = 'calender'>\n    <div class = 'weekday' v-for='(day,v) in daysoftheWeek'>\n    {{day}}\n    </div>\n    <div v-for='n in start_date' class='cell other' v-text='24+n'/>\n    <div class = 'cell' v-for='(date,k) in dates' :key = 'date' @click.right='print(date,$event)'>\n       <p style='color:var(--borderColor);align:right'>{{\n           k\n           }}\n       </p>\n       <div v-for='d in date' class = 'novel'><p class='novel-title'>{{d.novel}}</p><p class='hour'>{{d.hour}}:00</p></div>\n    </div>\n</div>\n<form id = 'scheduleCreator' method='formSubmit'>\n<h6>Novel</h6>\n<select id = 'novel-selector' name = 'novel' form = 'scheduleCreator'>\n<option v-for='novel in novels' :value='novel.novelid'>{{novel.title}}</option>\n</select>\n<h6>Start Date</h6>\n<input type=\"date\" id=\"start\" name=\"upload-start\"\n       min=\"2022-01-01\" max=\"2030-12-31\">\n<h6>Upload Times</h6>\n<input type=\"time\" :name='\"time\"+t'\n       min=\"08:00\" max=\"20:00\" v-for='t in times'>\n<input type = 'button' style = 'background:none;border:none,border:1px solid black; height:30px; width:30px;' @click='this.times++' value = '+'>\n<h6>Days of the Week</h6>\n<label v-for='i in daysoftheWeek.length' style='width:100px;'>{{daysoftheWeek[i-1]}}<input type = 'checkbox' :name = 'daysoftheWeek[i-1]' :value = 'i-1'></label>\n</form>\n<button @click='formSubmit()'>a</button>\n</body>\n</template>\n\n<script>\nimport { getAPI } from '../axios-api'\nexport default{\n    name:'Calender',\n    data(){\n        return {\n            dates:[],\n            daysoftheWeek:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],\n            month_name:'',\n            month:0,\n            year:0,\n            day:0,\n            selectedDay:[],\n            novels:[],\n            times:1,\n            start_date:0\n        }\n    },\n    props:[\n        'schedule'\n    ],\n\n    methods:{\n        print(a,event){\n            console.log(a)\n            const x = event.clientX;\n            const y= event.clientY;\n            console.log(x,y)\n            getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novels = response.data\n            console.log(this.novels[0].novelid)\n            //this.selectNovel(this.novels[0].novelid)\n            var menu = document.getElementById('scheduleCreator')\n            menu.style.display = 'flex'\n            menu.style.left= x + 'px'\n            menu.style.top = 150+y + 'px'\n          })\n          .catch(err => {\n            console.log(err)\n          })\n            \n\n        },\n        formSubmit(){\n            console.log(document.getElementById('scheduleCreator'))\n            const form = document.getElementById('scheduleCreator')\n            const formData = new FormData(form)\n            getAPI.post('/schedule',formData, {headers: {\"Content-Type\": \"multipart/form-data\"}}).then((res) => {\n                console.log(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            \n        },\n        get_calender(month,year){\n        const diff = new Date().getTimezoneOffset()\n        getAPI.get('/dates?offset='+diff+'&month='+month+'&year='+year)\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.dates = response.data['days']\n            console.log(response.data)\n            this.start_date = response.data[\"weekday_start\"]\n            console.log(this.start_date)\n            this.month_name = response.data['month']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          \n        },\n        change_month(change){\n            if (change == 'today'){\n                var today = new Date();\n                this.month = String(today.getMonth() + 1).padStart(2, '0');\n                this.year = today.getFullYear()\n                this.get_calender(this.month,this.year)\n                return\n            }\n            this.month -= change\n            if (this.month > 12){\n                this.month = 1\n                this.year +=1\n            }\n            if (this.month < 1){\n                this.month = 12\n                this.year -=1\n            }\n             this.get_calender(this.month,this.year)\n        }\n    },\n    created(){\n        \n        var today = new Date();\n        this.month = String(today.getMonth() + 1).padStart(2, '0');\n        this.year = today.getFullYear()\n        this.get_calender(this.month,this.year)\n    }\n\n}\n</script>\n<style scoped>\n.cell{\n    height:150px;\n    margin:0px;\n    padding:10px;\n    background-color:var(--backgroundColor);\n    \n    \n}\n.other{\n    color:rgb(120,120,120)\n}\n#calender{\n    width:100%;\n    height:930px;\n    min-height:700px;\n    display:grid;\n    gap:1px;\n    grid-template-columns: repeat(7, minmax(0, 1fr));\n    background-color: var(--borderColor);\n}\n.weekday{\n    text-align:left;\n    margin:0px;\n    height:30px;\n    padding:5px;\n     background-color:var(--backgroundColor);\n}\n#scheduleCreator{\n    display:none;\n    background-color:lightgray;\n    position:absolute;\n    width:300px;\n    height:500px;\n    flex-direction:column;\n    padding:20px;\n    border-radius:20px;\n   \n}\nlabel{\n     color:black;\n}\n#novel-selector{\n    width:100%;\n}\nh6{\n    margin-top:10px;\n    margin-bottom:10px;\n    color:black;\n}\n.novel-title{\n    width:75%;\n    height:20px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-size:12px;\n     vertical-align:middle;\n}\n.novel{\n    display:flex;\n    flex-direction:row;\n    margin:0px;\n    height:20px;\n}\n.hour{\n    height:20px;\n    font-size:11px;\n    text-align:left;\n    width:22%;\n    margin-left:auto;\n    vertical-align:middle;\n\n}\n.navigation-button{\n    background:none;\n    border:none;\n}\n@media (max-width: 775px) {\n  .hour{\n      display:none;\n  }\n  .novel-title{\n      width:100%;\n  }\n  .cell{\n      padding:5px;\n  }\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module"}