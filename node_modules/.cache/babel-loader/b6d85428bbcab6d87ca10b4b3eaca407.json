{"ast":null,"code":"import { getAPI } from '../axios-api';\nexport default {\n  data() {\n    return {\n      selectednovel: [],\n      novelList: [],\n      novelData: []\n    };\n  },\n\n  methods: {\n    confirm(open) {\n      var confirmationBox = document.getElementById('confirmationBox');\n\n      if (open == 1) {\n        confirmationBox.style.display = 'none';\n      } else if (open == 0) {\n        confirmationBox.style.display = 'flex';\n      }\n    },\n\n    selectNovel() {\n      this.selectednovel = document.getElementById(\"novel-selector\").value;\n      console.log(this.selectednovel);\n      const url = '/novel/single?novel=' + this.selectednovel + '&tier=1';\n      getAPI.get(url).then(response => {\n        console.log('Post Novel has recieved data');\n        this.novelData = response.data['Novel'];\n        this.sectionList = response.data['Chapters'].filter(chapter => chapter.chapternumber == 0);\n        this.chapterList = response.data['Chapters'].filter(chapter => chapter.chapternumber != 0);\n        this.isMounted = true;\n      }).catch(err => {\n        console.log(err);\n      });\n      console.log(this.novelData);\n    }\n\n  },\n\n  created() {\n    getAPI.get('/noveltitles').then(response => {\n      console.log('Chapter API has recieved data');\n      this.novelList = response.data;\n      console.log(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAsDA,SAASA,MAAT,QAAuB,cAAvB;AACA,eAAc;EACVC,IAAG,GAAI;IACH,OAAM;MACFC,aAAa,EAAC,EADZ;MAEFC,SAAS,EAAC,EAFR;MAGFC,SAAS,EAAC;IAHR,CAAN;EAKH,CAPS;;EAQVC,OAAO,EAAC;IACJC,OAAO,CAACC,IAAD,EAAM;MACT,IAAIC,eAAc,GAAIC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAtB;;MACA,IAAGH,IAAG,IAAK,CAAX,EAAa;QACTC,eAAe,CAACG,KAAhB,CAAsBC,OAAtB,GAAgC,MAAhC;MACH,CAFD,MAEM,IAAGL,IAAG,IAAK,CAAX,EAAa;QACfC,eAAe,CAACG,KAAhB,CAAsBC,OAAtB,GAAgC,MAAhC;MACJ;IACH,CARG;;IASJC,WAAW,GAAE;MACT,KAAKX,aAAL,GAAqBO,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CI,KAA/D;MACAC,OAAO,CAACC,GAAR,CAAY,KAAKd,aAAjB;MACA,MAAMe,GAAE,GAAI,yBAAuB,KAAKf,aAA5B,GAA0C,SAAtD;MACAF,MAAM,CAACkB,GAAP,CAAWD,GAAX,EACDE,IADC,CACIC,QAAO,IAAK;QAChBL,OAAO,CAACC,GAAR,CAAY,8BAAZ;QACA,KAAKZ,SAAL,GAAegB,QAAQ,CAACnB,IAAT,CAAc,OAAd,CAAf;QACA,KAAKoB,WAAL,GAAiBD,QAAQ,CAACnB,IAAT,CAAc,UAAd,EAA0BqB,MAA1B,CAAiCC,OAAM,IAAKA,OAAO,CAACC,aAAR,IAAyB,CAArE,CAAjB;QACA,KAAKC,WAAL,GAAiBL,QAAQ,CAACnB,IAAT,CAAc,UAAd,EAA0BqB,MAA1B,CAAiCC,OAAM,IAAKA,OAAO,CAACC,aAAR,IAAyB,CAArE,CAAjB;QACA,KAAKE,SAAL,GAAe,IAAf;MACD,CAPC,EAQDC,KARC,CAQKC,GAAE,IAAK;QACZb,OAAO,CAACC,GAAR,CAAYY,GAAZ;MACD,CAVC;MAWLb,OAAO,CAACC,GAAR,CAAY,KAAKZ,SAAjB;IACC;;EAzBI,CARE;;EAmCVyB,OAAO,GAAE;IACL7B,MAAM,CAACkB,GAAP,CAAW,cAAX,EACGC,IADH,CACQC,QAAO,IAAK;MAChBL,OAAO,CAACC,GAAR,CAAY,+BAAZ;MACA,KAAKb,SAAL,GAAiBiB,QAAQ,CAACnB,IAA1B;MACAc,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACnB,IAArB;IACD,CALH,EAMG0B,KANH,CAMSC,GAAE,IAAK;MACZb,OAAO,CAACC,GAAR,CAAYY,GAAZ;IACD,CARH;EASJ;;AA7CU,CAAd","names":["getAPI","data","selectednovel","novelList","novelData","methods","confirm","open","confirmationBox","document","getElementById","style","display","selectNovel","value","console","log","url","get","then","response","sectionList","filter","chapter","chapternumber","chapterList","isMounted","catch","err","created"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/EditPage.vue"],"sourcesContent":["<template>\n<div>\n    <div id = 'confirmationBox'>\n        <p>Are You Sure?</p>\n        <button @click='novelData.novelactive=1'>Confirm</button>\n        <button @click='confirm(1)'>Cancel</button>\n    </div>\n    <select id = 'novel-selector' @change=\"selectNovel()\">\n        <option v-for='novel in novelList' :value='novel.novelid'>{{novel.title}}</option>\n    </select>\n    <table id = 'editTable'>\n        <tr>\n            <td class = 'category'>Title</td>\n            <td v-text = 'novelData.title' contenteditable=\"true\"/>\n        </tr>\n        <tr>\n            <td  class = 'category'>Description</td>\n            <td v-html = 'novelData.description' contenteditable=\"true\"/>\n        </tr>\n        <tr>\n            <td  class = 'category'>Novel Active</td>\n            <td><button @click='confirm(0)'>Activate Novel</button></td>\n        </tr>\n        <tr>\n            <td  class = 'category'>Raw Status</td>\n            <td>\n                <select id = 'completedEdit' :selected='value=novelData.novelstatus'>\n                    <option value = 'Ongoing'>Ongoing</option>\n                    <option value = 'Completed'>Completed</option>\n                    <option value = 'On Hold'>On Hold</option>\n                    <option value = 'Dropped'>Dropped</option>\n                </select>\n            </td>\n        </tr>\n        <tr>\n            <td  class = 'category'>Genres</td>\n            <td>\n                <ul class='comma-list'>\n                    <li v-for='genre in novelData.genres' :key='genre' v-html='genre'/>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td  class = 'category'>Tags</td>\n            <td><ul class='comma-list'>\n                    <li v-for='tag in novelData.tags' :key='tag' v-html='tag'/>\n                </ul></td>\n        </tr>\n    </table>\n</div>\n</template>\n\n\n<script>\nimport { getAPI } from '../axios-api'\nexport default{\n    data (){\n        return{\n            selectednovel:[],\n            novelList:[],\n            novelData:[]\n        }\n    },\n    methods:{\n        confirm(open){\n            var confirmationBox = document.getElementById('confirmationBox')\n            if(open == 1){\n                confirmationBox.style.display = 'none'\n            }else if(open == 0){\n                confirmationBox.style.display = 'flex'\n            }\n        },\n        selectNovel(){\n            this.selectednovel = document.getElementById(\"novel-selector\").value\n            console.log(this.selectednovel)\n            const url = '/novel/single?novel='+this.selectednovel+'&tier=1'\n            getAPI.get(url)\n          .then(response => {\n            console.log('Post Novel has recieved data')\n            this.novelData=response.data['Novel']\n            this.sectionList=response.data['Chapters'].filter(chapter => chapter.chapternumber == 0)\n            this.chapterList=response.data['Chapters'].filter(chapter => chapter.chapternumber != 0)\n            this.isMounted=true\n          })\n          .catch(err => {\n            console.log(err)\n          })\n       console.log(this.novelData)\n        }\n    },\n    created(){\n        getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novelList = response.data\n            console.log(response.data)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n    }\n}\n</script>\n<style scoped>\n#novel-selector{\n    width:100%;\n}\n.category{\n    width:100px;\n    height:50px;\n}\n#confirmationBox{\n    background-color:lightgray;\n    width:200px;\n    padding:auto;\n}\ntr{\n    margin-bottom:30px;\n}\n#editTable{\n    width:100%;\n}\n.comma-list {\n  display: inline;\n  margin-left:0px;\n}\n.comma-list li {\n  display: inline;\n}\n.comma-list li::after {\n  content: \", \";\n}\n.comma-list li:last-child::after {\n    content: \"\";\n}\n#completedEdit{\n     background:none;\n    border:none;\n    -webkit-appearance: none;\n}\n</style>"]},"metadata":{},"sourceType":"module"}