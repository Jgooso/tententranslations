{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-199eaeea\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  id: \"calender\"\n};\nconst _hoisted_3 = {\n  class: \"weekday\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.dates[8] ? (_openBlock(), _createElementBlock(\"body\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.month), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.daysoftheWeek, day => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(day), 1\n    /* TEXT */\n    );\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  )), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dates, date => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"cell\",\n      key: date\n    }, [date ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString(parseInt(date.slice(5, 8))), 1\n    /* TEXT */\n    )) : _createCommentVNode(\"v-if\", true)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;;;;EAKKA,EAAE,EAAG;;;EACDC,KAAK,EAAG;;;;;;SALLC,YAAK,CAAL,mBAAZC,oBAYO,MAZP,EAYOC,UAZP,EAYO,CAXPC,oBAEK,IAFL,EAEK,IAFL,EAEKC,iBADHJ,WACG,CAFL,EACO;EAAA;EADP,CAWO,EARPG,oBAOM,KAPN,cAOM,oBANFF,oBAEMI,SAFN,EAEM,IAFN,EAEMC,YAF+BN,mBAE/B,EAFwBO,GAAoB,IAAjB;yBAAjCN,oBAEM,KAFN,cAEMG,iBADJG,GACI,CAFN,EACK;IAAA;IADL;GAEM,CAFN;;EAAA,CAME,sBAHFN,oBAEMI,SAFN,EAEM,IAFN,EAEMC,YAF6BN,WAE7B,EAFqBQ,IAAa,IAAT;yBAA/BP,oBAEM,KAFN,EAEM;MAFDF,KAAK,EAAG,MAEP;MAFqCU,GAAG,EAAID;IAE5C,CAFN,GACYA,IAAI,kBAAbP,oBAAgD,GAAhD,EAAgDS,UAAhD,EAAgDN,iBAA/BO,QAAQ,CAACH,IAAI,CAACI,KAAL,CAAU,CAAV,EAAU,CAAV,CAAD,CAAuB,CAAhD,EAAoC;IAAA;IAApC,CAAa,sCADhB;GAEM,CAFN;;EAAA,CAGE,EAPN,CAQO,CAZP","names":["id","class","$data","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","_Fragment","_renderList","day","date","key","_hoisted_4","parseInt","slice"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/Calender.vue"],"sourcesContent":["<template>\n<body v-if='dates[8]'>\n<h1>\n{{month}}\n</h1>\n<div id = 'calender'>\n    <div class = 'weekday' v-for='day in daysoftheWeek'>\n    {{day}}\n    </div>\n    <div class = 'cell' v-for='date in dates' :key = 'date'>\n       <p v-if='date'>{{parseInt(date.slice(5,8))}}</p>\n    </div>\n</div>\n</body>\n</template>\n\n<script>\nimport { getAPI } from '../axios-api'\nexport default{\n    name:'Calender',\n    data(){\n        return {\n            dates:[],\n            daysoftheWeek:['Sunday','Monday','Tuesady','Wednesday','Thursday','Friday','Saturday'],\n            month:'',\n        }\n    },\n    created(){\n        getAPI.get('/dates')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.dates = response.data\n            const date = new Date(this.dates[8])\n            this.month = date.toLocaleString('default', { month: 'long' })\n            console.log(month);\n          })\n          .catch(err => {\n            console.log(err)\n          })\n    }\n\n}\n</script>\n<style scoped>\n.cell{\n    border:1px black solid;\n    width:100%;\n    height:100%;\n    margin:0px;\n}\n#calender{\n    width:100%;\n    height:100%;\n    min-height:700px;\n    display:grid;\n    grid-template-columns: auto auto auto auto auto auto auto;\n    gap:0px;\n}\n.weekday{\n    text-align:center;\n    width:100px;\n    margin:0px;\n    height:20px;\n    background-color:red;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module"}