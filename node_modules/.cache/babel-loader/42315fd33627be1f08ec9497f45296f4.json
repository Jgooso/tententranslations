{"ast":null,"code":"import { getAPI } from '../axios-api';\nexport default {\n  name: 'Upload',\n\n  data() {\n    return {\n      genres: [],\n      tags: []\n    };\n  },\n\n  methods: {\n    getGenres() {\n      var selectedGenres = '';\n      const genreelements = document.getElementsByClassName('genrecheckbox');\n      const url = document.getElementById('urltextbox').value;\n\n      for (var i = 0; i < genreelements.length; i++) {\n        if (genreelements[i].checked == true) {\n          selectedGenres += genreelements[i].value + \",\";\n        }\n      }\n\n      selectedGenres = selectedGenres.replace(/(^,)|(,$)/g, '');\n      console.log(selectedGenres);\n      console.log(url);\n    }\n\n  },\n\n  created() {\n    getAPI.get('/uploaddata').then(response => {\n      console.log('Chapter API has recieved data');\n      this.genres = response.data['genres'];\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAqBA,SAASA,MAAT,QAAuB,cAAvB;AACA,eAAc;EACVC,IAAI,EAAC,QADK;;EAEVC,IAAI,GAAE;IACF,OAAM;MACFC,MAAM,EAAC,EADL;MAEFC,IAAI,EAAC;IAFH,CAAN;EAIH,CAPS;;EAQVC,OAAO,EAAC;IACJC,SAAS,GAAE;MACX,IAAIC,cAAa,GAAI,EAArB;MACA,MAAMC,aAAY,GAAIC,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,CAAtB;MACA,MAAMC,GAAE,GAAIF,QAAQ,CAACG,cAAT,CAAwB,YAAxB,EAAsCC,KAAlD;;MACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACN,aAAa,CAACO,MAA7B,EAAoCD,CAAC,EAArC,EAAwC;QACpC,IAAGN,aAAa,CAACM,CAAD,CAAb,CAAiBE,OAAjB,IAA4B,IAA/B,EAAoC;UAChCT,cAAa,IAAIC,aAAa,CAACM,CAAD,CAAb,CAAiBD,KAAjB,GAAuB,GAAxC;QACJ;MACJ;;MACAN,cAAa,GAAIA,cAAc,CAACU,OAAf,CAAuB,YAAvB,EAAqC,EAArC,CAAjB;MACAC,OAAO,CAACC,GAAR,CAAYZ,cAAZ;MACAW,OAAO,CAACC,GAAR,CAAYR,GAAZ;IAEA;;EAdI,CARE;;EAwBVS,OAAO,GAAE;IACLpB,MAAM,CAACqB,GAAP,CAAW,aAAX,EACGC,IADH,CACQC,QAAO,IAAK;MAChBL,OAAO,CAACC,GAAR,CAAY,+BAAZ;MACA,KAAKhB,MAAL,GAAcoB,QAAQ,CAACrB,IAAT,CAAc,QAAd,CAAd;IACD,CAJH,EAKGsB,KALH,CAKSC,GAAE,IAAK;MACZP,OAAO,CAACC,GAAR,CAAYM,GAAZ;IACD,CAPH;EAQJ;;AAjCU,CAAd","names":["getAPI","name","data","genres","tags","methods","getGenres","selectedGenres","genreelements","document","getElementsByClassName","url","getElementById","value","i","length","checked","replace","console","log","created","get","then","response","catch","err"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Upload.vue"],"sourcesContent":["<template>\n<div class = 'content'>\n<div id = 'managementnavigator'>\n<button>Upload</button>\n<button>Schedule</button>\n<button>Edit</button>\n<button>Manage Users</button>\n</div>\n<form>\n<label for=\"fname\">URL:</label>\n<input type=\"text\" id = 'urltextbox' maxlength=\"34\" style='width:200px'>\n<div id = 'genres'>\n<label v-for='genre in genres' :key = 'genre'><input type='checkbox' :value='genre' class = 'genrecheckbox'>{{genre}}</label>\n</div>\n\n</form>\n<button @click='getGenres()'>Submit</button>\n</div>\n</template>\n\n<script>\nimport { getAPI } from '../axios-api'\nexport default{\n    name:'Upload',\n    data(){\n        return{\n            genres:[],\n            tags:[],\n        }\n    },\n    methods:{\n        getGenres(){\n        var selectedGenres = ''\n        const genreelements = document.getElementsByClassName('genrecheckbox')\n        const url = document.getElementById('urltextbox').value\n        for(var i=0; i<genreelements.length;i++){\n            if(genreelements[i].checked == true){\n                selectedGenres +=genreelements[i].value+\",\"\n            }\n        }\n        selectedGenres = selectedGenres.replace(/(^,)|(,$)/g, '')\n        console.log(selectedGenres)\n        console.log(url)\n\n        }\n    },\n    created(){\n        getAPI.get('/uploaddata')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.genres = response.data['genres']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n    }\n}\n</script>\n\n<style scoped>\n.content{\n    display:flex;\n    flex-direction:row;\n    height:1000px;\n    margin-top:100px;\n}\n#managementnavigator{\n    height:100%;\n    background-color:lightgray;\n    width:30%;\n    display:flex;\n    flex-direction:column;\n}\nbutton{\n    background:none;\n    border-right:none\n}\n#genres{\n    position:relative;\n    display:grid;\n    grid-template-rows: auto auto auto auto auto auto auto auto auto;\n    grid-auto-flow: column;\n    column-gap: 30px;\n    row-gap:10px;\n    margin:auto;\n    width:100%\n}\ninput{\n    margin-right:5px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}