{"ast":null,"code":"import { getAPI } from '../axios-api';\nexport default {\n  data() {\n    return {\n      novel: [],\n      novelList: []\n    };\n  },\n\n  methods: {\n    getNovel() {\n      const url = '/novel/single?novel=' + this.novel + '&tier=1';\n      getAPI.get(url).then(response => {\n        console.log('Post Novel has recieved data');\n        this.novelData = response.data['Novel'];\n        this.sectionList = response.data['Chapters'].filter(chapter => chapter.chapternumber == 0);\n        this.chapterList = response.data['Chapters'].filter(chapter => chapter.chapternumber != 0);\n        this.isMounted = true;\n      }).catch(err => {\n        console.log(err);\n      });\n      console.log(this.$route.params);\n    },\n\n    selectNovel() {\n      this.novel = document.getElementById(\"novel-selector\").value;\n      console.log(this.novel);\n      getAPI.get('/schedule?novel=' + this.novel).then(response => {\n        console.log('Schedule API has recieved data');\n        console.log(response);\n        this.scheduleList = response.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  },\n\n  created() {\n    getAPI.get('/noveltitles').then(response => {\n      console.log('Chapter API has recieved data');\n      this.novelList = response.data;\n      console.log(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAgBA,SAASA,MAAT,QAAuB,cAAvB;AACA,eAAc;EACVC,IAAG,GAAI;IACH,OAAM;MACFC,KAAK,EAAC,EADJ;MAEFC,SAAS,EAAC;IAFR,CAAN;EAIH,CANS;;EAOVC,OAAO,EAAC;IACJC,QAAQ,GAAE;MACV,MAAMC,GAAE,GAAI,yBAAuB,KAAKJ,KAA5B,GAAkC,SAA9C;MACIF,MAAM,CAACO,GAAP,CAAWD,GAAX,EACDE,IADC,CACIC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAR,CAAY,8BAAZ;QACA,KAAKC,SAAL,GAAeH,QAAQ,CAACR,IAAT,CAAc,OAAd,CAAf;QACA,KAAKY,WAAL,GAAiBJ,QAAQ,CAACR,IAAT,CAAc,UAAd,EAA0Ba,MAA1B,CAAiCC,OAAM,IAAKA,OAAO,CAACC,aAAR,IAAyB,CAArE,CAAjB;QACA,KAAKC,WAAL,GAAiBR,QAAQ,CAACR,IAAT,CAAc,UAAd,EAA0Ba,MAA1B,CAAiCC,OAAM,IAAKA,OAAO,CAACC,aAAR,IAAyB,CAArE,CAAjB;QACA,KAAKE,SAAL,GAAe,IAAf;MACD,CAPC,EAQDC,KARC,CAQKC,GAAE,IAAK;QACZV,OAAO,CAACC,GAAR,CAAYS,GAAZ;MACD,CAVC;MAWLV,OAAO,CAACC,GAAR,CAAY,KAAKU,MAAL,CAAYC,MAAxB;IACE,CAfG;;IAgBJC,WAAW,GAAE;MACT,KAAKrB,KAAL,GAAasB,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAAvD;MACAhB,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;MACAF,MAAM,CAACO,GAAP,CAAW,qBAAmB,KAAKL,KAAnC,EACDM,IADC,CACIC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAR,CAAY,gCAAZ;QACAD,OAAO,CAACC,GAAR,CAAYF,QAAZ;QACA,KAAKkB,YAAL,GAAkBlB,QAAQ,CAACR,IAA3B;MACD,CALC,EAMDkB,KANC,CAMKC,GAAE,IAAK;QACZV,OAAO,CAACC,GAAR,CAAYS,GAAZ;MACD,CARC;IASJ;;EA5BI,CAPE;;EAqCVQ,OAAO,GAAE;IACL5B,MAAM,CAACO,GAAP,CAAW,cAAX,EACGC,IADH,CACQC,QAAO,IAAK;MAChBC,OAAO,CAACC,GAAR,CAAY,+BAAZ;MACA,KAAKR,SAAL,GAAiBM,QAAQ,CAACR,IAA1B;MACAS,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACR,IAArB;IACD,CALH,EAMGkB,KANH,CAMSC,GAAE,IAAK;MACZV,OAAO,CAACC,GAAR,CAAYS,GAAZ;IACD,CARH;EASJ;;AA/CU,CAAd","names":["getAPI","data","novel","novelList","methods","getNovel","url","get","then","response","console","log","novelData","sectionList","filter","chapter","chapternumber","chapterList","isMounted","catch","err","$route","params","selectNovel","document","getElementById","value","scheduleList","created"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/EditPage.vue"],"sourcesContent":["<template>\n<div>\n<select id = 'novel-selector' @change=\"selectNovel()\">\n<option v-for='novel in novelList' :value='novel.novelid'>{{novel.title}}</option>\n</select>\n<table>\n<tr v-for='(key,value) in selectednovel'>\n<td>{{key}}</td>\n<td>{{value}}</td>\n</tr>\n</table>\n</div>\n</template>\n\n\n<script>\nimport { getAPI } from '../axios-api'\nexport default{\n    data (){\n        return{\n            novel:[],\n            novelList:[]\n        }\n    },\n    methods:{\n        getNovel(){\n        const url = '/novel/single?novel='+this.novel+'&tier=1'\n            getAPI.get(url)\n          .then(response => {\n            console.log('Post Novel has recieved data')\n            this.novelData=response.data['Novel']\n            this.sectionList=response.data['Chapters'].filter(chapter => chapter.chapternumber == 0)\n            this.chapterList=response.data['Chapters'].filter(chapter => chapter.chapternumber != 0)\n            this.isMounted=true\n          })\n          .catch(err => {\n            console.log(err)\n          })\n       console.log(this.$route.params)\n        },\n        selectNovel(){\n            this.novel = document.getElementById(\"novel-selector\").value\n            console.log(this.novel)\n            getAPI.get('/schedule?novel='+this.novel)\n          .then(response => {\n            console.log('Schedule API has recieved data')\n            console.log(response)\n            this.scheduleList=response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n        }\n    },\n    created(){\n        getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novelList = response.data\n            console.log(response.data)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}