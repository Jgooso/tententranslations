{"ast":null,"code":"import { getAPI } from '../axios-api';\nimport ScheduleCreator from './ScheduleCreator';\nexport default {\n  name: 'Schedular',\n\n  data() {\n    return {\n      scheduleList: [],\n      novels: [],\n      novel: []\n    };\n  },\n\n  components: {\n    ScheduleCreator\n  },\n  methods: {\n    timeConverter(time) {\n      var convertedTime = parseInt(time);\n\n      if (convertedTime % 12 == convertedTime) {\n        convertedTime = (convertedTime %= 12).toString() + ':00 AM';\n      } else {\n        convertedTime = (convertedTime %= 12).toString() + ':00 PM';\n      }\n\n      return convertedTime;\n    },\n\n    selectNovel() {}\n\n  },\n\n  created() {\n    /*\n    getAPI.get('/schedule')\n      .then(response => {\n        console.log('Schedule API has recieved data')\n        console.log(response)\n        this.scheduleList=response.data\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      */\n    getAPI.get('/noveltitles').then(response => {\n      console.log('Chapter API has recieved data');\n      this.novels = response.data;\n      console.log(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AA2BA,SAAQA,MAAR,QAAqB,cAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,eAAc;EACVC,IAAI,EAAC,WADK;;EAEVC,IAAI,GAAE;IACF,OAAM;MACFC,YAAY,EAAC,EADX;MAEFC,MAAM,EAAC,EAFL;MAGFC,KAAK,EAAC;IAHJ,CAAN;EAKH,CARS;;EASVC,UAAU,EAAC;IACPN;EADO,CATD;EAYVO,OAAO,EAAC;IACJC,aAAa,CAACC,IAAD,EAAM;MACf,IAAIC,aAAY,GAAIC,QAAQ,CAACF,IAAD,CAA5B;;MACA,IAAIC,aAAY,GAAI,EAAjB,IAAwBA,aAA3B,EAAyC;QACrCA,aAAY,GAAI,CAACA,aAAY,IAAK,EAAlB,EAAsBE,QAAtB,KAAmC,QAAnD;MACH,CAFD,MAEK;QACDF,aAAY,GAAI,CAACA,aAAY,IAAK,EAAlB,EAAsBE,QAAtB,KAAmC,QAAnD;MACJ;;MACA,OAAOF,aAAP;IACH,CATG;;IAUJG,WAAW,GAAE,CAEb;;EAZI,CAZE;;EA0BVC,OAAO,GAAE;IACL;;;;;;;;;;;IAWEf,MAAM,CAACgB,GAAP,CAAW,cAAX,EACCC,IADD,CACMC,QAAO,IAAK;MAChBC,OAAO,CAACC,GAAR,CAAY,+BAAZ;MACA,KAAKf,MAAL,GAAca,QAAQ,CAACf,IAAvB;MACAgB,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACf,IAArB;IACD,CALD,EAMCkB,KAND,CAMOC,GAAE,IAAK;MACZH,OAAO,CAACC,GAAR,CAAYE,GAAZ;IACD,CARD;EASV;;AA/Cc,CAAd","names":["getAPI","ScheduleCreator","name","data","scheduleList","novels","novel","components","methods","timeConverter","time","convertedTime","parseInt","toString","selectNovel","created","get","then","response","console","log","catch","err"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/Schedular.vue"],"sourcesContent":["<template>\n<div class = 'schedular'>\n<button>New</button>\n<select id = 'novel-selector' @change=\"selectNovel()\">\n<option v-for='novel in novels'>{{novel.title}}</option>\n</select>\n<!--\n<ul>\n\n<li v-for='(scheduleDay,day) in scheduleList' :key='day'>\n{{day}}\n<ul>\n    <li v-for='schedule in scheduleDay' :key='schedule.day+schedule.time'>\n        <div>\n            {{timeConverter(schedule.time)}}\n            {{schedule.title}}\n        </div>\n    </li>\n    </ul>\n</li>\n</ul>\n-->\n<!--<ScheduleCreator/>-->\n</div>\n</template>\n\n<script>\nimport {getAPI} from '../axios-api'\nimport ScheduleCreator from './ScheduleCreator'\nexport default{\n    name:'Schedular',\n    data(){\n        return{\n            scheduleList:[],\n            novels:[],\n            novel:[]\n        }\n    },\n    components:{\n        ScheduleCreator\n    },\n    methods:{\n        timeConverter(time){\n            var convertedTime = parseInt(time)\n            if((convertedTime % 12) == convertedTime){\n                convertedTime = (convertedTime %= 12).toString() + ':00 AM'\n            }else{\n                convertedTime = (convertedTime %= 12).toString() + ':00 PM'\n            }\n            return convertedTime\n        },\n        selectNovel(){\n            \n        }\n    },\n    created(){\n        /*\n        getAPI.get('/schedule')\n          .then(response => {\n            console.log('Schedule API has recieved data')\n            console.log(response)\n            this.scheduleList=response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          */\n          getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novels = response.data\n            console.log(response.data)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n}\n}\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}