{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"novel\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.isMounted ? (_openBlock(), _createBlock(_component_router_view, {\n    novelData: $data.novelData,\n    chapterList: $data.chapterList,\n    sectionList: $data.sectionList,\n    tier: $props.tier,\n    key: _ctx.$route.params.chapter,\n    url: $props.url,\n    onSwitchmode: _cache[0] || (_cache[0] = $event => _ctx.$emit(\"switchmode\"))\n  }, null, 8\n  /* PROPS */\n  , [\"novelData\", \"chapterList\", \"sectionList\", \"tier\", \"url\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACKA,KAAK,EAAG;;;;;uBAAbC,oBAUM,KAVN,cAUM,CATiBC,iCAAnBC,aAQEC,sBARF,EAQE;IAPCC,SAAS,EAAEH,eAOZ;IANCI,WAAW,EAAEJ,iBAMd;IALCK,WAAW,EAAEL,iBAKd;IAJCM,IAAI,EAAEC,WAIP;IAHCC,GAAG,EAAEC,YAAOC,MAAP,CAAcC,OAGpB;IAFCC,GAAG,EAAEL,UAEN;IADKM,YAAU,sCAAEJ,WAAK,YAAL,CAAF;EACf,CARF;;EAAA,kGASE,CAVN","names":["class","_createElementBlock","$data","_createBlock","_component_router_view","novelData","chapterList","sectionList","tier","$props","key","_ctx","params","chapter","url","onSwitchmode"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/src/views/Novel.vue"],"sourcesContent":["<template>\n<div class = 'novel'>\n    <router-view v-if='isMounted'\n      :novelData=\"novelData\"\n      :chapterList=\"chapterList\"\n      :sectionList='sectionList'\n      :tier='tier'\n      :key='$route.params.chapter'\n      :url='url'\n      v-on:switchmode='$emit(\"switchmode\")'\n    />\n</div>\n</template>\n<script>\n  import axios from 'axios'\n  export default {\n    name: 'Novel',\n    components: {\n    },\n    data () {\n      return {\n          chapterList:[],\n          sectionList:[],\n          novelData:[],\n          isMounted:false\n        }\n    },\n    props:[\n      'tier',\n      'url'\n    ],\n    created () {\n    const get_url = `http://${url}/novel/single?novel=${this.$route.params.title}&tier=${this.tier}`\n            axios.get(get_url)\n          .then(response => {\n            this.novelData=response.data['Novel']\n           const sections = response.data['Chapters'].filter(chapter => chapter.chapternumber == 0)\n            if(sections.length > 0){\n                this.sectionList = sections\n            }else{\n                this.sectionList = [{'section':0}]\n            }\n            this.chapterList=response.data['Chapters'].filter(chapter => chapter.chapternumber != 0)\n            this.isMounted=true\n          })\n          .catch(err => {\n            console.log(err)\n          })\n  },\n  \n \n  }\n</script>\n\n"]},"metadata":{},"sourceType":"module"}