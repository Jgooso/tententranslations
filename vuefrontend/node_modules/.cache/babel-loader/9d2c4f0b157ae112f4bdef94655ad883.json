{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"schedular\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", null, \"New\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"select\", {\n    id: \"novel-selector\",\n    onChange: _cache[0] || (_cache[0] = $event => $options.selectNovel())\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.novels, novel => {\n    return _openBlock(), _createElementBlock(\"option\", null, _toDisplayString(novel.title), 1\n    /* TEXT */\n    );\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))], 32\n  /* HYDRATE_EVENTS */\n  ), _createCommentVNode(\"\\n<ul>\\n\\n<li v-for='(scheduleDay,day) in scheduleList' :key='day'>\\n{{day}}\\n<ul>\\n    <li v-for='schedule in scheduleDay' :key='schedule.day+schedule.time'>\\n        <div>\\n            {{timeConverter(schedule.time)}}\\n            {{schedule.title}}\\n        </div>\\n    </li>\\n    </ul>\\n</li>\\n</ul>\\n\"), _createCommentVNode(\"<ScheduleCreator/>\")]);\n}","map":{"version":3,"mappings":";;EACKA,KAAK,EAAG;;;gCACbC,oBAAoB,QAApB,EAAoB,IAApB,EAAQ,KAAR,EAAW;AAAA;AAAX;;;uBADAC,oBAsBM,KAtBN,cAsBM,CArBNC,UAqBM,EApBNF,oBAES,QAFT,EAES;IAFDG,EAAE,EAAG,gBAEJ;IAFsBC,QAAM,sCAAEC,sBAAF;EAE5B,CAFT,sBACAJ,oBAAwDK,SAAxD,EAAwD,IAAxD,EAAwDC,YAAhCC,YAAgC,EAAzCC,KAAe,IAAV;yBAApBR,oBAAwD,QAAxD,EAAwD,IAAxD,EAAwDS,iBAAtBD,KAAK,CAACE,KAAgB,CAAxD,EAA6C;IAAA;IAA7C;GAAwD,CAAxD;;EAAA,GADA;;EAAA,CAoBM,EAjBNC,wUAiBM,EADNA,yCACM,CAtBN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","id","onChange","$options","_Fragment","_renderList","$data","novel","_toDisplayString","title","_createCommentVNode"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/Schedular.vue"],"sourcesContent":["<template>\n<div class = 'schedular'>\n<button>New</button>\n<select id = 'novel-selector' @change=\"selectNovel()\">\n<option v-for='novel in novels'>{{novel.title}}</option>\n</select>\n<!--\n<ul>\n\n<li v-for='(scheduleDay,day) in scheduleList' :key='day'>\n{{day}}\n<ul>\n    <li v-for='schedule in scheduleDay' :key='schedule.day+schedule.time'>\n        <div>\n            {{timeConverter(schedule.time)}}\n            {{schedule.title}}\n        </div>\n    </li>\n    </ul>\n</li>\n</ul>\n-->\n<!--<ScheduleCreator/>-->\n</div>\n</template>\n\n<script>\nimport {getAPI} from '../axios-api'\nimport ScheduleCreator from './ScheduleCreator'\nexport default{\n    name:'Schedular',\n    data(){\n        return{\n            scheduleList:[],\n            novels:[],\n            novel:[]\n        }\n    },\n    components:{\n        ScheduleCreator\n    },\n    methods:{\n        timeConverter(time){\n            var convertedTime = parseInt(time)\n            if((convertedTime % 12) == convertedTime){\n                convertedTime = (convertedTime %= 12).toString() + ':00 AM'\n            }else{\n                convertedTime = (convertedTime %= 12).toString() + ':00 PM'\n            }\n            return convertedTime\n        },\n        selectNovel(){\n            \n        }\n    },\n    created(){\n        /*\n        getAPI.get('/schedule')\n          .then(response => {\n            console.log('Schedule API has recieved data')\n            console.log(response)\n            this.scheduleList=response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          */\n          getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novels = response.data\n            console.log(response.data)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n}\n}\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}