{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-10fa2182\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"genres\"\n};\nconst _hoisted_2 = [\"value\", \"name\", \"checked\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.genres.length, i => {\n    return _openBlock(), _createElementBlock(\"label\", {\n      key: _ctx.genre\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      value: $props.genres[i],\n      name: \"genre\" + i,\n      class: \"genrecheckbox\",\n      checked: $props.selectedgenres.includes($props.genres[i]),\n      onClick: $event => $options.changeGenre($props.genres[i])\n    }, null, 8\n    /* PROPS */\n    , _hoisted_2), _createTextVNode(_toDisplayString($props.genres[i]), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;;;;EACKA,EAAE,EAAG;;;;uBAAVC,oBAIU,KAJV,cAIU,oBAHFA,oBAEQC,SAFR,EAEQ,IAFR,EAEQC,YAFWC,cAAOC,MAElB,EAFMC,CAAkB,IAAjB;yBAAfL,oBAEQ,OAFR,EAEQ;MAF2BM,GAAG,EAAIC;IAElC,CAFR,EAA+C,CAC3CC,oBAAoK,OAApK,EAAoK;MAA7JC,IAAI,EAAC,UAAwJ;MAA5IC,KAAK,EAAEP,cAAOE,CAAP,CAAqI;MAAzHM,IAAI,YAAYN,CAAyG;MAAtGO,KAAK,EAAG,eAA8F;MAA7EC,OAAO,EAAEV,sBAAeW,QAAf,CAAwBX,cAAOE,CAAP,CAAxB,CAAoE;MAA/BU,OAAK,YAAEC,qBAAYb,cAAOE,CAAP,CAAZ;IAAwB,CAApK;;IAAA,aAD2C,oCAC2HF,cAAOE,CAAP,IAAQ;IAAA;KADnI,CAA/C;GAEQ,CAFR;;EAAA,CAGE,EAJV","names":["id","_createElementBlock","_Fragment","_renderList","$props","length","i","key","_ctx","_createElementVNode","type","value","name","class","checked","includes","onClick","$options"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/GenreSelector.vue"],"sourcesContent":["<template>\n<div id = 'genres'>\n        <label v-for='i in genres.length' :key = 'genre'>\n            <input type='checkbox' :value='genres[i]' :name = '\"genre\"+i' class = 'genrecheckbox' :checked='selectedgenres.includes(genres[i])' @click='changeGenre(genres[i])'>{{genres[i]}}\n        </label>\n    </div>\n</template>\n\n<script>\nexport default{\n    name:'GenreSelector',\n    props:[\n        'genres',\n        'selectedgenres'\n    ],\n    methods:{\n        changeGenre(genre){\n            if(this.selectedgenres.includes(genre)){\n               for( var i = 0; i < this.selectedgenres.length; i++){ \n                    if ( this.selectedgenres[i] === genre) { \n                        this.selectedgenres.splice(i, 1); \n                        i--; \n                    }\n    \n                }\n            }else{\n                this.selectedgenres.push(genre)\n            }        \n        }\n    }\n}\n</script>\n<style scoped>\n#genres{\n    position:relative;\n    display:grid;\n    grid-template-rows: auto auto auto auto auto auto auto auto auto;\n    grid-auto-flow: column;\n    column-gap: 30px;\n    row-gap:10px;\n    margin:auto;\n    width:100%\n}\n@media (max-width: 775px) {\n    #genres{\n        grid-template-rows: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\n        width:300px;\n        margin-left:20px;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}