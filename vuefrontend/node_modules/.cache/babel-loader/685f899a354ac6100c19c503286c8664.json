{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport EventEmitter from 'node:events';\nimport urlLib from 'node:url';\nimport crypto from 'node:crypto';\nimport stream, { PassThrough as PassThroughStream } from 'node:stream';\nimport normalizeUrl from 'normalize-url';\nimport getStream from 'get-stream';\nimport CachePolicy from 'http-cache-semantics';\nimport Response from 'responselike';\nimport Keyv from 'keyv';\nimport mimicResponse from 'mimic-response';\nimport { CacheError, RequestError } from './types.js';\n\nclass CacheableRequest {\n  constructor(cacheRequest, cacheAdapter) {\n    this.hooks = new Map();\n\n    this.request = () => (options, cb) => {\n      let url;\n\n      if (typeof options === 'string') {\n        url = normalizeUrlObject(urlLib.parse(options));\n        options = {};\n      } else if (options instanceof urlLib.URL) {\n        url = normalizeUrlObject(urlLib.parse(options.toString()));\n        options = {};\n      } else {\n        const [pathname, ...searchParts] = (options.path ?? '').split('?');\n        const search = searchParts.length > 0 ? `?${searchParts.join('?')}` : '';\n        url = normalizeUrlObject({ ...options,\n          pathname,\n          search\n        });\n      }\n\n      options = {\n        headers: {},\n        method: 'GET',\n        cache: true,\n        strictTtl: false,\n        automaticFailover: false,\n        ...options,\n        ...urlObjectToRequestOptions(url)\n      };\n      options.headers = Object.fromEntries(entries(options.headers).map(([key, value]) => [key.toLowerCase(), value]));\n      const ee = new EventEmitter();\n      const normalizedUrlString = normalizeUrl(urlLib.format(url), {\n        stripWWW: false,\n        removeTrailingSlash: false,\n        stripAuthentication: false\n      });\n      let key = `${options.method}:${normalizedUrlString}`; // POST, PATCH, and PUT requests may be cached, depending on the response\n      // cache-control headers. As a result, the body of the request should be\n      // added to the cache key in order to avoid collisions.\n\n      if (options.body && options.method !== undefined && ['POST', 'PATCH', 'PUT'].includes(options.method)) {\n        if (options.body instanceof stream.Readable) {\n          // Streamed bodies should completely skip the cache because they may\n          // or may not be hashable and in either case the stream would need to\n          // close before the cache key could be generated.\n          options.cache = false;\n        } else {\n          key += `:${crypto.createHash('md5').update(options.body).digest('hex')}`;\n        }\n      }\n\n      let revalidate = false;\n      let madeRequest = false;\n\n      const makeRequest = options_ => {\n        madeRequest = true;\n        let requestErrored = false;\n\n        let requestErrorCallback = () => {};\n\n        const requestErrorPromise = new Promise(resolve => {\n          requestErrorCallback = () => {\n            if (!requestErrored) {\n              requestErrored = true;\n              resolve();\n            }\n          };\n        });\n\n        const handler = async response => {\n          if (revalidate) {\n            response.status = response.statusCode;\n            const revalidatedPolicy = CachePolicy.fromObject(revalidate.cachePolicy).revalidatedPolicy(options_, response);\n\n            if (!revalidatedPolicy.modified) {\n              response.resume();\n              await new Promise(resolve => {\n                // Skipping 'error' handler cause 'error' event should't be emitted for 304 response\n                response.once('end', resolve);\n              });\n              const headers = convertHeaders(revalidatedPolicy.policy.responseHeaders());\n              response = new Response({\n                statusCode: revalidate.statusCode,\n                headers,\n                body: revalidate.body,\n                url: revalidate.url\n              });\n              response.cachePolicy = revalidatedPolicy.policy;\n              response.fromCache = true;\n            }\n          }\n\n          if (!response.fromCache) {\n            response.cachePolicy = new CachePolicy(options_, response, options_);\n            response.fromCache = false;\n          }\n\n          let clonedResponse;\n\n          if (options_.cache && response.cachePolicy.storable()) {\n            clonedResponse = cloneResponse(response);\n\n            (async () => {\n              try {\n                const bodyPromise = getStream.buffer(response);\n                await Promise.race([requestErrorPromise, new Promise(resolve => response.once('end', resolve)), new Promise(resolve => response.once('close', resolve)) // eslint-disable-line no-promise-executor-return\n                ]);\n                const body = await bodyPromise;\n                let value = {\n                  url: response.url,\n                  statusCode: response.fromCache ? revalidate.statusCode : response.statusCode,\n                  body,\n                  cachePolicy: response.cachePolicy.toObject()\n                };\n                let ttl = options_.strictTtl ? response.cachePolicy.timeToLive() : undefined;\n\n                if (options_.maxTtl) {\n                  ttl = ttl ? Math.min(ttl, options_.maxTtl) : options_.maxTtl;\n                }\n\n                if (this.hooks.size > 0) {\n                  /* eslint-disable no-await-in-loop */\n                  for (const key_ of this.hooks.keys()) {\n                    value = await this.runHook(key_, value, response);\n                  }\n                  /* eslint-enable no-await-in-loop */\n\n                }\n\n                await this.cache.set(key, value, ttl);\n              } catch (error) {\n                ee.emit('error', new CacheError(error));\n              }\n            })();\n          } else if (options_.cache && revalidate) {\n            (async () => {\n              try {\n                await this.cache.delete(key);\n              } catch (error) {\n                ee.emit('error', new CacheError(error));\n              }\n            })();\n          }\n\n          ee.emit('response', clonedResponse ?? response);\n\n          if (typeof cb === 'function') {\n            cb(clonedResponse ?? response);\n          }\n        };\n\n        try {\n          const request_ = this.cacheRequest(options_, handler);\n          request_.once('error', requestErrorCallback);\n          request_.once('abort', requestErrorCallback);\n          request_.once('destroy', requestErrorCallback);\n          ee.emit('request', request_);\n        } catch (error) {\n          ee.emit('error', new RequestError(error));\n        }\n      };\n\n      (async () => {\n        const get = async options_ => {\n          await Promise.resolve();\n          const cacheEntry = options_.cache ? await this.cache.get(key) : undefined;\n\n          if (typeof cacheEntry === 'undefined' && !options_.forceRefresh) {\n            makeRequest(options_);\n            return;\n          }\n\n          const policy = CachePolicy.fromObject(cacheEntry.cachePolicy);\n\n          if (policy.satisfiesWithoutRevalidation(options_) && !options_.forceRefresh) {\n            const headers = convertHeaders(policy.responseHeaders());\n            const response = new Response({\n              statusCode: cacheEntry.statusCode,\n              headers,\n              body: cacheEntry.body,\n              url: cacheEntry.url\n            });\n            response.cachePolicy = policy;\n            response.fromCache = true;\n            ee.emit('response', response);\n\n            if (typeof cb === 'function') {\n              cb(response);\n            }\n          } else if (policy.satisfiesWithoutRevalidation(options_) && Date.now() >= policy.timeToLive() && options_.forceRefresh) {\n            await this.cache.delete(key);\n            options_.headers = policy.revalidationHeaders(options_);\n            makeRequest(options_);\n          } else {\n            revalidate = cacheEntry;\n            options_.headers = policy.revalidationHeaders(options_);\n            makeRequest(options_);\n          }\n        };\n\n        const errorHandler = error => ee.emit('error', new CacheError(error));\n\n        if (this.cache instanceof Keyv) {\n          const cachek = this.cache;\n          cachek.once('error', errorHandler);\n          ee.on('error', () => cachek.removeListener('error', errorHandler));\n          ee.on('response', () => cachek.removeListener('error', errorHandler));\n        }\n\n        try {\n          await get(options);\n        } catch (error) {\n          if (options.automaticFailover && !madeRequest) {\n            makeRequest(options);\n          }\n\n          ee.emit('error', new CacheError(error));\n        }\n      })();\n\n      return ee;\n    };\n\n    this.addHook = (name, fn) => {\n      if (!this.hooks.has(name)) {\n        this.hooks.set(name, fn);\n      }\n    };\n\n    this.removeHook = name => this.hooks.delete(name);\n\n    this.getHook = name => this.hooks.get(name);\n\n    this.runHook = async (name, ...args) => this.hooks.get(name)?.(...args);\n\n    if (cacheAdapter instanceof Keyv) {\n      this.cache = cacheAdapter;\n    } else if (typeof cacheAdapter === 'string') {\n      this.cache = new Keyv({\n        uri: cacheAdapter,\n        namespace: 'cacheable-request'\n      });\n    } else {\n      this.cache = new Keyv({\n        store: cacheAdapter,\n        namespace: 'cacheable-request'\n      });\n    }\n\n    this.request = this.request.bind(this);\n    this.cacheRequest = cacheRequest;\n  }\n\n}\n\nconst entries = Object.entries;\n\nconst cloneResponse = response => {\n  const clone = new PassThroughStream({\n    autoDestroy: false\n  });\n  mimicResponse(response, clone);\n  return response.pipe(clone);\n};\n\nconst urlObjectToRequestOptions = url => {\n  const options = { ...url\n  };\n  options.path = `${url.pathname || '/'}${url.search || ''}`;\n  delete options.pathname;\n  delete options.search;\n  return options;\n};\n\nconst normalizeUrlObject = url => ( // If url was parsed by url.parse or new URL:\n// - hostname will be set\n// - host will be hostname[:port]\n// - port will be set if it was explicit in the parsed string\n// Otherwise, url was from request options:\n// - hostname or host may be set\n// - host shall not have port encoded\n{\n  protocol: url.protocol,\n  auth: url.auth,\n  hostname: url.hostname || url.host || 'localhost',\n  port: url.port,\n  pathname: url.pathname,\n  search: url.search\n});\n\nconst convertHeaders = headers => {\n  const result = [];\n\n  for (const name of Object.keys(headers)) {\n    result[name.toLowerCase()] = headers[name];\n  }\n\n  return result;\n};\n\nexport default CacheableRequest;\nexport * from './types.js';\nexport const onResponse = 'onResponse';","map":{"version":3,"mappings":"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","names":["EventEmitter","urlLib","crypto","stream","PassThrough","PassThroughStream","normalizeUrl","getStream","CachePolicy","Response","Keyv","mimicResponse","CacheError","RequestError","CacheableRequest","constructor","cacheRequest","cacheAdapter","Map","options","cb","url","normalizeUrlObject","parse","URL","toString","pathname","searchParts","path","split","search","length","join","headers","method","cache","strictTtl","automaticFailover","urlObjectToRequestOptions","Object","fromEntries","entries","map","key","value","toLowerCase","ee","normalizedUrlString","format","stripWWW","removeTrailingSlash","stripAuthentication","body","undefined","includes","Readable","createHash","update","digest","revalidate","madeRequest","makeRequest","options_","requestErrored","requestErrorCallback","requestErrorPromise","Promise","resolve","handler","response","status","statusCode","revalidatedPolicy","fromObject","cachePolicy","modified","resume","once","convertHeaders","policy","responseHeaders","fromCache","clonedResponse","storable","cloneResponse","bodyPromise","buffer","race","toObject","ttl","timeToLive","maxTtl","Math","min","hooks","size","key_","keys","runHook","set","error","emit","delete","request_","get","cacheEntry","forceRefresh","satisfiesWithoutRevalidation","Date","now","revalidationHeaders","errorHandler","cachek","on","removeListener","name","fn","has","args","uri","namespace","store","request","bind","clone","autoDestroy","pipe","protocol","auth","hostname","host","port","result","onResponse"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}