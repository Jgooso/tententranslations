{"ast":null,"code":"import { getAPI } from '../axios-api';\nimport GenreSelector from '../components/GenreSelector';\nimport TagSelector from '../components/TagSelector';\nimport ChapterSelector from '../components/ChapterSelector';\nimport UtfBox from '../components/UtfBox';\nexport default {\n  data() {\n    return {\n      selectednovel: '',\n      novelList: [],\n      novelData: [],\n      tags: [],\n      genres: [],\n      chapterList: [],\n      sectionList: [],\n      chapterContent: '',\n      currentChapter: '',\n      saved: '',\n      chapterTitle: ''\n    };\n  },\n\n  components: {\n    GenreSelector,\n    TagSelector,\n    ChapterSelector,\n    UtfBox\n  },\n  methods: {\n    confirm(open) {\n      var confirmationBox = document.getElementById('confirmationBox');\n\n      if (open == 0) {\n        confirmationBox.style.display = 'flex';\n      } else if (open == 1) {\n        confirmationBox.style.display = 'none';\n      } else if (open == 2) {\n        if (this.novelData.novelactive == 1) {\n          this.novelData.novelactive = 0;\n        } else {\n          this.novelData.novelactive = 1;\n        }\n\n        confirmationBox.style.display = 'none';\n      }\n    },\n\n    selectNovel(a) {\n      if (a) {\n        this.selectednovel = a;\n      } else {\n        this.selectednovel = document.getElementById(\"novel-selector\").value;\n      }\n\n      const url = '/novel/single?novel=' + this.selectednovel + '&tier=0&edit=True';\n      getAPI.get(url).then(response => {\n        console.log('Post Novel has recieved data');\n        this.novelData = response.data['Novel'];\n        const sections = response.data['Chapters'].filter(chapter => chapter.chapternumber == 0);\n\n        if (sections.length > 0) {\n          this.sectionList = sections;\n        } else {\n          this.sectionList = [{\n            'section': 0\n          }];\n        }\n\n        this.chapterList = response.data['Chapters'].filter(chapter => chapter.chapternumber != 0);\n        this.genres = response.data['Genres'];\n        this.tags = response.data['Tags'];\n        this.currentChapter = null;\n        this.chapterContent = '';\n        console.log(this.novelData);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.saved = true;\n      this.hideChapter();\n    },\n\n    submit() {\n      const loadingscreen = document.getElementById('loadingscreen');\n      loadingscreen.style.display = 'block';\n      const genres = document.getElementsByClassName('genrecheckbox');\n      var selectedGenres = [];\n      console.log(this.novelData.id);\n\n      for (var i = 0; i < genres.length; i++) {\n        if (genres[i].checked == true) {\n          selectedGenres.push(genres[i].value);\n        }\n      }\n\n      this.novelData.novelstatus = document.getElementById('completedEdit').value;\n      this.novelData.description = document.getElementById('noveldescription').innerHTML;\n      this.novelData.title = document.getElementById('noveltitle').innerHTML;\n      const url = '/novel/single?novel=' + this.novelData.novelid;\n      getAPI.put(url, {\n        novelData: this.novelData,\n        tags: this.novelData.tags,\n        genres: selectedGenres\n      }).then(function (response) {\n        console.log(response);\n        loadingscreen.style.display = 'none';\n      }).catch(function (error) {\n        console.log(error);\n        loadingscreen.style.display = 'none';\n      });\n    },\n\n    showGenres() {\n      var genre_selector = document.getElementById('genre-selector');\n\n      if (genre_selector.style.display == 'flex') {\n        genre_selector.style.display = 'none';\n      } else {\n        genre_selector.style.display = 'flex';\n      }\n    },\n\n    showTags() {\n      var tag_selector = document.getElementById('tag-selector');\n\n      if (tag_selector.style.display == 'flex') {\n        tag_selector.style.display = 'none';\n      } else {\n        tag_selector.style.display = 'flex';\n      }\n    },\n\n    save(e) {\n      if (e.key != 's') {\n        this.saved = false;\n      }\n\n      if (e.ctrlKey && e.key === 's') {\n        this.currentChapter.content = document.getElementById('chapter-content').innerHTML;\n        this.currentChapter.title = document.getElementById('chapter-title').innerHTML;\n        this.saved = true;\n        getAPI.put('chapter?novel=' + this.currentChapter.novelid + '&chapter=' + this.currentChapter.chapternumber, {\n          title: this.currentChapter.title,\n          content: this.currentChapter.content\n        }).then(response => {\n          console.log(this.currentChapter);\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n\n    displayChapter(chapterItem) {\n      console.log(chapterItem);\n      document.getElementById('chapterEditor').style.left = '0px';\n      document.getElementById('chapterEditor').style.width = '100%';\n      document.getElementById('table').style.width = '0px';\n      document.getElementById('chapter-content').addEventListener('keydown', this.save, false);\n      const url = '/chapter?novel=' + chapterItem.novelid + '&chapter=' + chapterItem.chapternumber;\n      getAPI.get(url).then(response => {\n        console.log('Chapter API has recieved data');\n        this.chapterContent = response.data['content'];\n        this.currentChapter = chapterItem;\n        this.chapterTitle = response.data['title'];\n      }).catch(err => {\n        console.log(err);\n      });\n      console.log(document.getElementById('chapter-content').innerHTML);\n    },\n\n    hideChapter() {\n      if (this.saved == true) {\n        var editor = document.getElementById('chapterEditor');\n        editor.style.left = '100%';\n        editor.style.width = '0px';\n        this.chapterContent = '';\n        document.getElementById('table').style.width = '100%';\n        document.getElementById('chapter-content').removeEventListener('keyup', this.save);\n      } else {}\n    },\n\n    chapteredit(chapter) {\n      if (chapter.chapteredited == 0) {\n        chapter.chapteredited = 1;\n      } else {\n        chapter.chapteredited = 0;\n      }\n\n      console.log(chapter);\n      const url = '/chaptereditchange?edit=' + chapter.chapteredited + '&novel=' + chapter.novelid + '&chapter=' + chapter.chapterorder;\n      getAPI.put(url).then(response => {\n        console.log('sent');\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    changeupload(chapter) {\n      const date = document.getElementById('date' + chapter.chapterorder).value;\n      const url = '/chapteruploadchange?novel=' + chapter.novelid + '&chapter=' + chapter.chapterorder;\n      console.log(date);\n      getAPI.put(url, {\n        date: date\n      }).then(response => {\n        console.log('send');\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  },\n\n  created() {\n    getAPI.get('/noveltitles').then(response => {\n      console.log('Chapter API has recieved data');\n      this.novelList = response.data;\n      this.selectNovel(this.novelList[0].novelid);\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n\n  mounted() {}\n\n};","map":{"version":3,"mappings":"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","names":["getAPI","GenreSelector","TagSelector","ChapterSelector","UtfBox","data","selectednovel","novelList","novelData","tags","genres","chapterList","sectionList","chapterContent","currentChapter","saved","chapterTitle","components","methods","confirm","open","confirmationBox","document","getElementById","style","display","novelactive","selectNovel","a","value","url","get","then","response","console","log","sections","filter","chapter","chapternumber","length","catch","err","hideChapter","submit","loadingscreen","getElementsByClassName","selectedGenres","id","i","checked","push","novelstatus","description","innerHTML","title","novelid","put","error","showGenres","genre_selector","showTags","tag_selector","save","e","key","ctrlKey","content","displayChapter","chapterItem","left","width","addEventListener","editor","removeEventListener","chapteredit","chapteredited","chapterorder","changeupload","date","created","mounted"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Editor.vue"],"sourcesContent":["<template>\n<div id = 'editPage'>\n    <div id = 'confirmationBox'>\n        <h1 style = 'margin:auto;'>{{novelData.novelactive==0 ? 'Confirm Activate Novel' : \"Confirm Deactivate Novel\"}}</h1>\n        <div style='display:flex;flex-direction:row;margin:auto; width:220px'>\n        <button @click='confirm(2)' class = 'confirmation-button'>Confirm</button>\n        <button @click='confirm(1)' class = 'confirmation-button'>Cancel</button>\n        \n        </div>\n    </div>\n    <select id = 'novel-selector' @change=\"selectNovel()\">\n        <option v-for='novel in novelList' :value='novel.novelid'>{{novel.title}}</option>\n    </select>\n    <!-- Novel Edit-->\n    <!-- Novel Edit End-->\n    <div id=\"cover\" ref = 'cover'>\n    <div v-if='novelData.title'>\n        <p id = \"noveltitle\" v-text='novelData.title' contenteditable=\"true\"/>\n    <div id = \"inner\">\n        <div id = \"novel-information\">\n             <div id = \"data\">\n                <table>\n                    <tr>\n                        <td>Author</td>\n                        <td class=\"info\">{{novelData.author}}</td>\n                    </tr>\n                    <tr>\n                        <td>Genres</td>\n                         <td  class = 'category'><button class = 'show' @click='showGenres()'>Show</button></td>\n                    </tr>\n                    <tr>\n                        <td>Tags</td>\n                        <td  class = 'category'><button class = 'show' @click='showTags()'>Show</button></td>\n                    </tr>\n                </table>\n                <table>\n                    <tr>\n                        <td>Raw Status</td>\n                        <td class=\"info\">\n                                <select id = 'completedEdit' :selected='value=novelData.novelstatus'>\n                                    <option value = 'Ongoing'>Ongoing</option>\n                                    <option value = 'Completed'>Completed</option>\n                                    <option value = 'On Hold'>On Hold</option>\n                                    <option value = 'Dropped'>Dropped</option>\n                                </select>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Novel Active</td>\n                        <td><button @click='confirm(0)'>{{novelData.novelactive==0 ? 'Activate Novel' : \"Deactivate Novel\"}}</button></td>\n                    </tr>\n                    <!--\n                    <tr>\n                        <td>Pages<span id = 'pageSuper'>(Approx.)</span><p id = 'disclaimer'>~1800 characters/360 words per Page</p></td>\n                        <td class=\"info\"><p>{{novelData.pages}}</p></td>\n                    </tr>\n                    -->\n                </table>\n             </div>\n             <div id = 'genre-selector'>\n             <GenreSelector\n                :genres='genres'\n                :selectedgenres='novelData.genres'\n                \n                />\n            </div>\n            <TagSelector\n                :tags='tags'\n                :selectedtags='novelData.tags'\n                id = 'tag-selector'\n                />\n        </div>   \n    </div>    \n    <div id = \"summary\">\n        <div v-if='novelData.title'>\n           <div style = \"display:flex;flex-direction:row;border-bottom:2px lightgray solid;height:30px;\"><UtfBox shape = '&#9733;'/><h3 id = \"divider\">SUMMARY</h3></div><br>\n            <p id=\"noveldescription\" v-html = 'novelData.description' contenteditable=\"true\"/>\n        </div>\n    </div>\n    <!-- Chapter Edit-->\n     <div style = \"display:flex;flex-direction:row;border-bottom:2px lightgray solid;height:30px;\"><UtfBox shape = '&#9733;'/><h3 id = \"divider\">CHAPTERS</h3></div><br>\n    <div id = \"TableOfContents\">\n        <table  id = 'table' ref='tableofcontentlist'>\n            <tr class='table-list'>\n            <td class = 'chapter-title'>Chapter Title</td>\n            <td class = 'chapter-check-box' style='font-size:15px'>Edited</td>\n            <td class = 'chapter-check-box' style='font-size:15px'>Uploaded</td>\n            <td style='font-size:15px'>Upload Date</td>\n            </tr>\n            <tr v-for='section in sectionList' style='display:flex;flex-direction:column'>\n                <p v-if='section.title' class='section' v-html='section.title' :id ='\"section\"+section.section' contenteditable='True'/>\n                <tr style='width:100%'>\n                    <tr v-for=\"chapter in chapterList.filter(chapter=>chapter.section==section.section)\" :key=\"chapter.chapternumber\" class='table-list' :id='\"chapter\"+chapter.chapternumber'>\n                        <td class='chapter-title'>\n                        <label>\n                        {{chapter.title}}\n                        <input type='button'  class = 'chapter-list' :value = 'chapter.chapternumber' @click='displayChapter(chapter)'>\n                        </label>\n                        </td>\n                        <td v-if='chapter.chapteredited == 1' style='color:lightgreen;' class = 'chapter-check-box edited-check' @click='chapteredit(chapter)'>&#10003;</td>\n                        <td v-else style='color:red;' class = 'chapter-check-box edited-check' @click='chapteredit(chapter)'>X</td>\n                        <td v-if='chapter.chapteractive == 1' style='color:lightgreen;x' class = 'chapter-check-box'>&#10003;</td>\n                        <td v-else style='color:red;' class = 'chapter-check-box'>X</td>\n                        <td>\n                            <input type = 'datetime-local' \n                                    :id ='\"date\"+chapter.chapterorder'\n                                    :value='chapter.uploaddate' \n                                    @change='changeupload(chapter)' \n                                    min=\"2023-01-01T00:00\"\n                                    style='width:fit-content;margin-right:20px;' >\n                        </td>\n                    </tr>\n                </tr>\n            </tr>\n        </table>\n        <div id = 'chapterEditor'>\n            <label v-if='saved'>&#8592;\n                <input type='button' id ='back-button' @click='hideChapter()' >\n            </label>\n            <p v-else> Unsaved Changes</p>\n            <h3 contenteditable ='True' id = 'chapter-title'>{{chapterTitle}}</h3>\n                 <pre v-html='chapterContent' id = 'chapter-content' contenteditable='True'/>\n        </div>\n    </div>\n    </div>\n    </div>\n    <!-- Chapter Edit End-->\n<button @click='submit()'>Submit</button>\n</div>\n</template>\n\n\n<script>\nimport { getAPI } from '../axios-api'\nimport GenreSelector from '../components/GenreSelector'\nimport TagSelector from '../components/TagSelector'\nimport ChapterSelector from '../components/ChapterSelector'\nimport UtfBox from '../components/UtfBox'\nexport default{\n    data (){\n        return{\n            selectednovel:'',\n            novelList:[],\n            novelData:[],\n            tags:[],\n            genres:[],\n            chapterList:[],\n            sectionList:[],\n            chapterContent:'',\n            currentChapter:'',\n            saved:'',\n            chapterTitle:''\n\n        }\n    },\n    components:{\n        GenreSelector,\n        TagSelector,\n        ChapterSelector,\n        UtfBox\n    },\n    methods:{\n        confirm(open){\n            var confirmationBox = document.getElementById('confirmationBox')\n            if(open == 0){\n                confirmationBox.style.display = 'flex'\n            }else if(open == 1){\n                confirmationBox.style.display = 'none'\n            }else if(open == 2){\n                if(this.novelData.novelactive == 1){this.novelData.novelactive=0}\n                else{this.novelData.novelactive=1}\n                confirmationBox.style.display = 'none'\n            }\n        },\n        selectNovel(a){\n            if(a){\n                this.selectednovel=a\n            }else{\n                this.selectednovel = document.getElementById(\"novel-selector\").value\n            }\n            const url = '/novel/single?novel='+this.selectednovel+'&tier=0&edit=True'\n            getAPI.get(url)\n          .then(response => {\n            console.log('Post Novel has recieved data')\n            this.novelData=response.data['Novel']\n            const sections = response.data['Chapters'].filter(chapter => chapter.chapternumber == 0)\n            if(sections.length > 0){\n                this.sectionList = sections\n            }else{\n                this.sectionList = [{'section':0}]\n            }\n            this.chapterList=response.data['Chapters'].filter(chapter => chapter.chapternumber != 0)\n            this.genres = response.data['Genres']\n            this.tags = response.data['Tags']\n            this.currentChapter = null\n            this.chapterContent = ''\n            console.log(this.novelData)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n            this.saved = true\n            this.hideChapter()\n        },\n        submit(){\n            const loadingscreen = document.getElementById('loadingscreen')\n            loadingscreen.style.display = 'block'\n            const genres = document.getElementsByClassName('genrecheckbox')\n            var selectedGenres = []\n            console.log(this.novelData.id)\n            for(var i=0; i < genres.length; i++){\n                if(genres[i].checked==true){\n                    selectedGenres.push(genres[i].value)\n                }\n            }\n               this.novelData.novelstatus=document.getElementById('completedEdit').value\n               this.novelData.description=document.getElementById('noveldescription').innerHTML\n               this.novelData.title=document.getElementById('noveltitle').innerHTML\n               const url = '/novel/single?novel='+this.novelData.novelid\n            getAPI.put(url,{\n                   novelData:this.novelData,\n                   tags:this.novelData.tags,\n                   genres:selectedGenres,\n               }).then(function (response) {\n                    console.log(response);\n                    loadingscreen.style.display='none'\n            })\n                .catch(function (error) {\n                    console.log(error);\n                    loadingscreen.style.display='none'\n            })\n        },\n        showGenres(){\n            var genre_selector = document.getElementById('genre-selector')\n            if(genre_selector.style.display=='flex'){\n                genre_selector.style.display = 'none'\n            }else{\n                genre_selector.style.display = 'flex'\n            }\n        },\n        showTags(){\n            var tag_selector = document.getElementById('tag-selector')\n            if(tag_selector.style.display=='flex'){\n                tag_selector.style.display = 'none'\n            }else{\n                tag_selector.style.display = 'flex'\n            }\n        },\n        save(e){\n            if(e.key != 's'){\n                this.saved = false\n            }\n            if (e.ctrlKey && e.key === 's') {\n                 this.currentChapter.content = document.getElementById('chapter-content').innerHTML\n                 this.currentChapter.title = document.getElementById('chapter-title').innerHTML\n                 this.saved=true;\n                 getAPI.put('chapter?novel='+this.currentChapter.novelid+'&chapter='+this.currentChapter.chapternumber,{\n                     title:this.currentChapter.title,\n                     content:this.currentChapter.content\n                     })\n                    .then(response => {\n                        console.log(this.currentChapter)\n                    })\n                    .catch(err => {\n                        console.log(err)\n                    })\n            }\n             \n        },\n        displayChapter(chapterItem){\n            console.log(chapterItem)\n            document.getElementById('chapterEditor').style.left='0px';\n             document.getElementById('chapterEditor').style.width='100%';\n            document.getElementById('table').style.width='0px';\n            document.getElementById('chapter-content').addEventListener('keydown', this.save, false);\n            const url = '/chapter?novel='+chapterItem.novelid+'&chapter='+chapterItem.chapternumber\n            getAPI.get(url)\n            .then(response => {\n                console.log('Chapter API has recieved data')\n                this.chapterContent = response.data['content']\n                this.currentChapter = chapterItem\n                this.chapterTitle = response.data['title']\n            })\n            .catch(err => {\n                console.log(err)\n            })\n            console.log(document.getElementById('chapter-content').innerHTML)\n        },\n        hideChapter(){\n            if(this.saved==true){\n                var editor = document.getElementById('chapterEditor')\n                editor.style.left='100%'\n                editor.style.width='0px'\n                this.chapterContent = ''\n                document.getElementById('table').style.width='100%';\n                document.getElementById('chapter-content').removeEventListener('keyup', this.save);\n            }else{\n                \n            }\n        },\n        chapteredit(chapter){\n            if (chapter.chapteredited == 0){\n                chapter.chapteredited = 1\n            }else{\n                chapter.chapteredited = 0\n            }\n            console.log(chapter)\n            const url = '/chaptereditchange?edit='+chapter.chapteredited+'&novel='+chapter.novelid+'&chapter='+chapter.chapterorder\n            getAPI.put(url)\n            .then(response => {\n                console.log('sent')\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        },\n        changeupload(chapter){\n            const date = document.getElementById('date'+chapter.chapterorder).value\n            const url = '/chapteruploadchange?novel='+chapter.novelid+'&chapter='+chapter.chapterorder\n            console.log(date)\n            getAPI.put(url,{date:date}).then(response =>{\n                console.log('send')\n            }).catch(err =>{\n                console.log(err)\n            })\n        }\n    },\n    created(){\n        getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novelList = response.data\n            this.selectNovel(this.novelList[0].novelid)\n            \n          })\n          .catch(err => {\n            console.log(err)\n          })\n    },\n    mounted(){\n       \n    }\n}\n</script>\n<style scoped>\n#editPage{\n    width:100%;\n    height:fit-content;\n    max-width:800px;\n\n}\n#novel-selector{\n    width:80%;\n}\n.category{\n    width:100px;\n    height:50px;\n}\n#confirmationBox{\n    display:none;\n    background-color:lightgray;\n    width:350px;\n    height:350px;\n    flex-direction:column;\n    padding:20px;\n    position:fixed;\n    top:50%;\n    justify-content:center;\n    z-index:10;\n\n}\n.confirmation-button{\n    width:100px;\n    height:50px;\n    font-size:20px;\n    margin:auto;\n}\ntr{\n    margin-bottom:30px;\n}\n\n#completedEdit{\n     background:none;\n    border:none;\n    -webkit-appearance: none;\n}\n.show{\n    background-color:white;\n    color: inherit;\n    border: 1px solid black;\n    width:100%;\n}\n\n\n/*Chapter Editor*/\n\n/*Chapter Table of Contents*/\n#TableOfContents{\n    height:fit-content;\n    width:100%;\n    overflow:hidden;\n    display:flex;\n    flex-direction:row;\n}\n#table{\n    text-decoration:none;\n    list-style:none;\n    width:100%;\n    position:relative;\n    transition: 1s ease-in-out;\n}\n.section{\n    color:#000000;\n    font-size:18px;\n    width:100%;\n    padding-left:10px;\n    border-radius:10px;\n}\n.chapter-list{\n    background:none;\n    -webkit-appearance: none;\n    width:80%;\n    text-align:left;\n    margin-left:0px;\n    border:none\n\n}\n.table-list{\n    height:fit-content;\n    max-height:30px;\n    overflow:hidden;\n    width:100%;\n    margin-left:0px;\n    display:flex;\n    flex-direction:row;\n    margin:0px;\n    border-bottom:1px solid black\n}\n.chapter-select{\n    margin-left:40px;\n}\n.chapter-title{\n    width:60%;\n    text-overflow:ellipsis;\n    margin:0px;\n    padding-left:20px;\n}\n.table-list:hover{\n   background-color:var(--styleColor);\n   color:white;\n}\n.chapter-check-box{\ntext-align:center;\nfont-weight:bold;\nfont-size:20px;\nwidth:10%\n}\n.edited-check:hover{\n    background-color:white;\n}\n/*Chapter Table of Contents End*/\n\n/*Chapter Editor Page*/\n#chapterEditor{\n    position:relative;\n    left:100%;\n    transition: 1s ease-in-out;\n    top:0px;\n    width:0px;\n    display:flex;\n    flex-direction:column;\n}\n#back-button{\n    background:none;\n    border:none;\n    font-size:30px;\n}\n#chapter-content{\n    height:fit-content;\n    width:100%;\n    font-family: sans-serif;\n    white-space: pre-wrap;\n    font-weight: 100;\n    position:relative;\n    font-size:19px;\n}\n/*Chapter Editor Page End*/\n\n/*Chapter Editor End*/\n\n\n\n.comma-list {\n  display: inline;\n  margin-left:0px;\n}\n.comma-list li {\n  display: inline;\n}\n.comma-list li::after {\n  content: \", \";\n}\n.comma-list li:last-child::after {\n    content: \"\";\n}\n@media (max-width: 775px) {\n    #editTable{\n        width:350px;\n    }\n    #novel-selector{\n        width:350px;\n    }\n}\n\n/*Novel Editor*/\n#noveltitle{\n      color: var(--styleColor);\n      font-size: 20px;\n      margin-bottom: 25px;\n      line-height:20px;\n      height:fit-content;\n      margin-top:30px;\n      font-weight:bold;\n      font-family: 'Times New Roman', serif;\n      \n  }\n\n  /*Novel Informatio Table*/\n    #inner{\n        align-self:center;\n        display:flex;\n        flex-direction:row;\n        width:100%;\n        transition: all .2s ease;\n        box-shadow: 0 4px 8px 0 var(--shadowColor), 0 6px 20px 0 var(--shadowColor);\n        margin-top:20px;\n    }\n    #novel-information{\n        padding:20px;\n        width: 100%;\n        height:fit-content;\n        display: flex;\n        flex-direction: column;\n    }\n    #editTable{\n        width:70%;\n        height:fit-content;\n    }\n    table{\n        display:inline;\n        font-size: 15px;\n        max-width: 100%;\n    }\n    td{\n        font-weight: bold;\n        padding-bottom: 10px;\n        padding-right:20px;\n        width:15%;\n        min-width:125px;\n        vertical-align: top;\n        color:black;\n      \n    }\n    .info{\n        font-weight:normal;\n        width: 85%;\n        line-height: 20px;\n        vertical-align: middle;\n        color:rgb(136,136,136);\n        font-size:14px;\n    }\n    #data{\n        display:flex;\n        flex-direction:row;\n    }\n    #genre-selector{\n        display:none;\n    }\n    #tag-selector{\n        display:none\n    }\n    \n\n   /*Novel Informatio Table End*/\n  #summary{\n    width: 100%;\n    text-align: left;\n    display: flex;\n    flex-direction: column;\n    align-self: center;\n    height:fit-content;\n    margin-top:20px;\n}\n#noveldescription{\n    width:100%;\n    font-size: 14px;\n    color:rgb(136,136,136);\n    height:fit-content;\n}\n#divider{\n    font-size:18px;\n    font-weight:bold;\n    margin-left:15px;\n    line-height:18px;\n    height:30px;\n    padding-top:6px;\n}\n /*Novel Editor End*/\n</style>"]},"metadata":{},"sourceType":"module"}