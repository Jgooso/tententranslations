{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"select\", {\n    id: \"novel-selector\",\n    onChange: _cache[0] || (_cache[0] = $event => _ctx.selectNovel())\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.novels, novel => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: novel.novelid\n    }, _toDisplayString(novel.title), 9\n    /* TEXT, PROPS */\n    , _hoisted_1);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;;uBACAA,oBAIM,KAJN,EAIM,IAJN,EAIM,CAHNC,oBAES,QAFT,EAES;IAFDC,EAAE,EAAG,gBAEJ;IAFsBC,QAAM,sCAAEC,kBAAF;EAE5B,CAFT,sBACAJ,oBAA+EK,SAA/E,EAA+E,IAA/E,EAA+EC,YAAvDF,WAAuD,EAAhEG,KAAe,IAAV;yBAApBP,oBAA+E,QAA/E,EAA+E;MAA9CQ,KAAK,EAAED,KAAK,CAACE;IAAiC,CAA/E,mBAAyDF,KAAK,CAACG,MAA/D,EAAoE;IAAA;IAApE,EAAoEC,UAApE;GAA+E,CAA/E;;EAAA,GADA;;EAAA,CAGM,CAJN","names":["_createElementBlock","_createElementVNode","id","onChange","_ctx","_Fragment","_renderList","novel","value","novelid","title","_hoisted_1"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/EditPage.vue"],"sourcesContent":["<template>\n<div>\n<select id = 'novel-selector' @change=\"selectNovel()\">\n<option v-for='novel in novels' :value='novel.novelid'>{{novel.title}}</option>\n</select>\n</div>\n</template>\n\n\n<script>\nexport default{\n    data{\n        return{\n            novel:[],\n            novelList:[]\n        }\n    }\n    methods:{\n        getNovel(){\n        const url = '/novel/single?novel='+this.novel+'&tier=1'\n            getAPI.get(url)\n          .then(response => {\n            console.log('Post Novel has recieved data')\n            this.novelData=response.data['Novel']\n            this.sectionList=response.data['Chapters'].filter(chapter => chapter.chapternumber == 0)\n            this.chapterList=response.data['Chapters'].filter(chapter => chapter.chapternumber != 0)\n            this.isMounted=true\n          })\n          .catch(err => {\n            console.log(err)\n          })\n       console.log(this.$route.params)\n        },\n        selectNovel(){\n            this.novel = document.getElementById(\"novel-selector\").value\n            console.log(this.novel)\n            getAPI.get('/schedule?novel='+this.novel)\n          .then(response => {\n            console.log('Schedule API has recieved data')\n            console.log(response)\n            this.scheduleList=response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n        }\n    },\n    created(){\n        getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novelList = response.data\n            console.log(response.data)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}