{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"\\n<div id = 'chapter' v-if='chapter.title'>\\n    <div class = \\\"content\\\">\\n     <br>\\n        <h3 style = \\\"font-size: 25px\\\" v-html='novelData.title+\\\" - \\\"+chapter.chapternumber'/>\\n        <Navigator\\n         :novel-id='novelData.novel'\\n         :novel='novelData.title'\\n         :chapter='chapter'\\n        />\\n        <br><br><br>\\n        <ChapterSelector\\n            :chapterList= 'chapterList'\\n            v-on:changeChapter=\\\"updateContent($event)\\\"\\n        />\\n        <br><br>\\n          <pre v-html = 'chapter.content' v-if='this.$route.params.password==\\\"abcd\\\"' contenteditable=\\\"true\\\" id = 'editable'/>\\n          <pre v-html = 'chapter.content' v-else/>\\n        <ChapterSelector\\n            :chapterList='chapterList'\\n            v-on:changeChapter=\\\"updateContent($event)\\\"\\n        />\\n        <br><br>\\n    </div>\\n</div>\\n\"), _createTextVNode(_toDisplayString($data.chapter), 1\n  /* TEXT */\n  )], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;6DACAA,g5BA0BEC,gBAAO;EAAA","names":["_createCommentVNode","$data"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Chapter.vue"],"sourcesContent":["<template>\n<!--\n<div id = 'chapter' v-if='chapter.title'>\n    <div class = \"content\">\n     <br>\n        <h3 style = \"font-size: 25px\" v-html='novelData.title+\" - \"+chapter.chapternumber'/>\n        <Navigator\n         :novel-id='novelData.novel'\n         :novel='novelData.title'\n         :chapter='chapter'\n        />\n        <br><br><br>\n        <ChapterSelector\n            :chapterList= 'chapterList'\n            v-on:changeChapter=\"updateContent($event)\"\n        />\n        <br><br>\n          <pre v-html = 'chapter.content' v-if='this.$route.params.password==\"abcd\"' contenteditable=\"true\" id = 'editable'/>\n          <pre v-html = 'chapter.content' v-else/>\n        <ChapterSelector\n            :chapterList='chapterList'\n            v-on:changeChapter=\"updateContent($event)\"\n        />\n        <br><br>\n    </div>\n</div>\n-->\n{{chapter}}\n</template>\n<script>\nimport ChapterSelector from '../components/ChapterSelector'\nimport Navigator from '../components/Navigator'\nimport { getAPI } from '../axios-api'\n    export default{\n        name: 'Chapter',\n        components:{\n            ChapterSelector,\n            Navigator,\n        },props:[\n        'novelData',\n        'chapterList',\n    ],\n        data () {\n            return {\n                chapter:[],\n            }\n        },methods:{\n        changeFontSize(change)\n        {\n            if(change == 1){\n                document.getElementsByTagName('pre')[0].style.fontSize='larger'\n            }else{\n                document.getElementsByTagName('pre')[0].style.fontSize='smaller'\n            }\n        }    \n},\n    created(){\n        const url = '/chapter?novel='+this.$route.params.title+'&chapter='+this.$route.params.chapter\n            getAPI.get(url)\n          .then(response => {\n            console.log('Post API has recieved data')\n            this.chapter = response.data\n            console.log(this.chapter)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n        this.chapterList.sort((a,b) =>(a.chapterNumber > b.chapterNumber ? 1:-1))\n        \n    },\n    }\n</script>\n<style scoped>\npre{\nfont-family: Helvetica,sans-serif;\nfont-size:19px;\nwhite-space: pre-wrap;\nfont-weight:lighter;\noverflow:hidden;\n}\n</style>"]},"metadata":{},"sourceType":"module"}