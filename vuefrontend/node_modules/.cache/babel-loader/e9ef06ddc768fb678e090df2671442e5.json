{"ast":null,"code":"import { getAPI } from '../axios-api';\nexport default {\n  name: 'Calender',\n\n  data() {\n    return {\n      dates: [],\n      daysoftheWeek: ['Sunday', 'Monday', 'Tuesady', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      month: '',\n      day: 0,\n      selectedDay: [],\n      novels: [],\n      times: 1,\n      start_date: 0\n    };\n  },\n\n  props: ['schedule'],\n  methods: {\n    print(a, event) {\n      console.log(a);\n      const x = event.clientX;\n      const y = event.clientY;\n      console.log(x, y);\n      getAPI.get('/noveltitles').then(response => {\n        console.log('Chapter API has recieved data');\n        this.novels = response.data;\n        console.log(this.novels[0].novelid); //this.selectNovel(this.novels[0].novelid)\n\n        this.selectedDay = a.toISOString().split(\"T\")[0];\n        console.log(this.selectedDay);\n        var menu = document.getElementById('scheduleCreator');\n        menu.style.display = 'flex';\n        menu.style.left = x + 'px';\n        menu.style.top = 50 + y + 'px';\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    formSubmit() {\n      console.log(document.getElementById('scheduleCreator'));\n      const form = document.getElementById('scheduleCreator');\n      const formData = new FormData(form);\n      getAPI.post('/schedule', formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  },\n\n  created() {\n    getAPI.get('/dates').then(response => {\n      console.log('Chapter API has recieved data');\n      this.dates = response.data['days'];\n      const date_list = Object.keys(this.dates);\n      console.log(this.dates);\n      console.log(date_list);\n      this.start_date = response.data[\"weekday_start\"];\n      console.log(start_date);\n      this.month = response.data['month'];\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"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","names":["getAPI","name","data","dates","daysoftheWeek","month","day","selectedDay","novels","times","start_date","props","methods","print","a","event","console","log","x","clientX","y","clientY","get","then","response","novelid","toISOString","split","menu","document","getElementById","style","display","left","top","catch","err","formSubmit","form","formData","FormData","post","headers","res","created","date_list","Object","keys"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/Calender.vue"],"sourcesContent":["<template>\n<body v-if='dates[8]'>\n<h1>\n{{month}}\n</h1>\n<div id = 'calender'>\n    <div class = 'weekday' v-for='(day,v) in daysoftheWeek'>\n    {{day}}\n    </div>\n    <div v-for='n in start_date' v-text='n'/>\n    <div class = 'cell' v-for='(date,k) in dates' :key = 'date' @click.right='print(date,$event)'>\n       <p>{{\n           k\n           }}\n       </p>\n       <p v-for='d in schedule'>a</p>\n    </div>\n</div>\n<form id = 'scheduleCreator' method='formSubmit'>\n<h6>Novel</h6>\n<select id = 'novel-selector' @change=\"selectNovel()\" name = 'novel' form = 'scheduleCreator'>\n<option v-for='novel in novels' :value='novel.novelid'>{{novel.title}}</option>\n</select>\n<h6>Start Date</h6>\n<input type=\"date\" id=\"start\" name=\"upload-start\"\n       :value='selectedDay'\n       min=\"2022-01-01\" max=\"2030-12-31\">\n<h6>Upload Times</h6>\n<input type=\"time\" :name='\"time\"+t'\n       min=\"08:00\" max=\"20:00\" v-for='t in times'>\n<input type = 'button' style = 'background:none;border:none,border:1px solid black; height:30px; width:30px;' @click='this.times++' value = '+'>\n<h6>Days of the Week</h6>\n<label v-for='i in daysoftheWeek.length' style='width:100px;'>{{daysoftheWeek[i-1]}}<input type = 'checkbox' :name = 'daysoftheWeek[i-1]' :value = 'i-1'></label>\n</form>\n<button @click='formSubmit()'>a</button>\n</body>\n</template>\n\n<script>\nimport { getAPI } from '../axios-api'\nexport default{\n    name:'Calender',\n    data(){\n        return {\n            dates:[],\n            daysoftheWeek:['Sunday','Monday','Tuesady','Wednesday','Thursday','Friday','Saturday'],\n            month:'',\n            day:0,\n            selectedDay:[],\n            novels:[],\n            times:1,\n            start_date:0\n        }\n    },\n    props:[\n        'schedule'\n    ],\n\n    methods:{\n        print(a,event){\n            console.log(a)\n            const x = event.clientX;\n            const y= event.clientY;\n            console.log(x,y)\n            getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novels = response.data\n            console.log(this.novels[0].novelid)\n            //this.selectNovel(this.novels[0].novelid)\n            this.selectedDay=a.toISOString().split(\"T\")[0]\n            console.log(this.selectedDay)\n            var menu = document.getElementById('scheduleCreator')\n            menu.style.display = 'flex'\n            menu.style.left= x + 'px'\n            menu.style.top = 50+y + 'px'\n          })\n          .catch(err => {\n            console.log(err)\n          })\n            \n\n        },\n        formSubmit(){\n            console.log(document.getElementById('scheduleCreator'))\n            const form = document.getElementById('scheduleCreator')\n            const formData = new FormData(form)\n            getAPI.post('/schedule',formData, {headers: {\"Content-Type\": \"multipart/form-data\"}}).then((res) => {\n                console.log(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            \n        }\n    },\n    created(){\n        getAPI.get('/dates')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.dates = response.data['days']\n            const date_list = Object.keys(this.dates)\n            console.log(this.dates)\n            console.log(date_list)\n            this.start_date = response.data[\"weekday_start\"]\n            console.log(start_date)\n            this.month = response.data['month']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          \n    }\n\n}\n</script>\n<style scoped>\n.cell{\n    border:1px black solid;\n    width:100%;\n    height:100%;\n    margin:0px;\n}\n#calender{\n    width:100%;\n    height:100%;\n    min-height:700px;\n    display:grid;\n    grid-template-columns: auto auto auto auto auto auto auto;\n    gap:0px;\n    border:1px solid black;\n}\n.weekday{\n    text-align:center;\n    width:100px;\n    margin:0px;\n    height:20px;\n}\n#scheduleCreator{\n    display:none;\n    background-color:lightgray;\n    position:absolute;\n    width:300px;\n    height:500px;\n    flex-direction:column;\n    padding:20px;\n    border-radius:20px;\n}\n#novel-selector{\n    width:100%;\n}\nh6{\n    margin-top:10px;\n    margin-bottom:10px;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module"}