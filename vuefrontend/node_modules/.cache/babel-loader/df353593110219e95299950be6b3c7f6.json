{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-aadb6016\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"schedular\"\n};\nexport function render(_ctx, _cache) {\n  const _component_Calender = _resolveComponent(\"Calender\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Calender), _createTextVNode(\" \" + _toDisplayString(_ctx.scheduleList), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACKA,KAAK,EAAG;;;;;uBAAbC,oBAGM,KAHN,cAGM,CAFNC,aAAWC,mBAAX,CAEM,mBAFK,MACXC,iBAAEC,iBAAF,GAAc;EAAA;GACR,CAHN","names":["class","_createElementBlock","_createVNode","_component_Calender","_toDisplayString","_ctx"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Schedular.vue"],"sourcesContent":["<template>\n<div class = 'schedular'>\n<Calender/>\n{{scheduleList}}\n</div>\n</template>\n\n<script>\nimport {getAPI} from '../axios-api'\nimport Calender from '../components/Calender'\nexport default{\n    name:'Schedular',\n    data(){\n        return{\n            scheduleList:[],\n            novels:[],\n            novel:[]\n        }\n    },\n    components:{\n        Calender,\n    },\n    methods:{\n        timeConverter(time){\n            var convertedTime = parseInt(time)\n            if((convertedTime % 12) == convertedTime){\n                convertedTime = (convertedTime %= 12).toString() + ':00 AM'\n            }else{\n                convertedTime = (convertedTime %= 12).toString() + ':00 PM'\n            }\n            return convertedTime\n        },\n        selectNovel(a){\n            if(a){\n                this.novel = a\n            }else{\n                this.novel = document.getElementById(\"novel-selector\").value\n            }\n            console.log(this.novel)\n            getAPI.get('/schedule)\n          .then(response => {\n            console.log('Schedule API has recieved data')\n            console.log(response)\n            this.scheduleList=response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n        },\n        showCreator(){\n            document.getElementById('schedule-creator').style.display='flex'\n        },\n        submit(){\n            const time = document.getElementById('appt').value\n            console.log(time)\n            console.log(this.novel)\n            const dates = document.getElementsByClassName('date-selector')\n            var selecteddates = []\n            console.log(dates.length)\n            for(var i=0; i < dates.length; i++){\n                if(dates[i].checked==true){\n                    selecteddates.push(dates[i].value)\n                }\n            }\n            console.log(selecteddates)\n            getAPI.post('/schedule', {novel:this.novel,time:time,dates:selecteddates})\n                .then(function (response) {\n                    console.log(response);\n            })\n                .catch(function (error) {\n                    console.log(error);\n            }); \n            console.log('what')\n            document.getElementById('schedule-creator').style.display='none'\n            \n            \n        },\n    },\n    created(){\n          \n          getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novels = response.data\n            console.log(this.novels[0].novelid)\n            this.selectNovel(this.novels[0].novelid)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n}\n}\n</script>\n\n<style scoped>\n.schedular{\n    width:100%\n}\n#schedule-creator{\nposition:fixed;\n    background-color:lightgray;\n    width:500px;\n    height:500px;\n    top:50%;\n    left:50%;\n    margin-top:-250px;\n    margin-left:-250px;\n    display:none;\n    flex-direction:column;\n}\n#appt{\n    background:none;\n    border:none;\n    float:right;\n    margin-right:50px;\n    height:30px;\n}\n@media (max-width: 775px) {\n    #novel-selector{\n        width:350px;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}