{"ast":null,"code":"import { getAPI } from '../axios-api';\nexport default {\n  name: 'Upload',\n\n  data() {\n    return {\n      genres: [],\n      tags: []\n    };\n  },\n\n  methods: {\n    showHideTagList(display) {\n      const x = document.getElementById('tagSelect');\n      if (!x) return null;\n\n      if (display == 1) {\n        x.style.display = \"block\";\n      } else {\n        x.style.display = \"none\";\n      }\n    },\n\n    addTag() {\n      const x = document.getElementById('tagtextbox');\n      const tag = document.getElementById('tagSelect').value;\n      x.value += tag + \",\";\n    },\n\n    postData() {\n      const form = document.getElementById('download');\n      const selectedGenres = form['genres'].value;\n      const url = form['url'].value;\n      const selectedtags = form['tags'].value;\n      selectedtags = selectedtags.replace(/,\\s*$/, \"\");\n      getAPI.post('/novel/single', {\n        url: url,\n        tags: selectedtags,\n        genres: selectedGenres\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n\n  },\n\n  created() {\n    getAPI.get('/uploaddata').then(response => {\n      console.log('Chapter API has recieved data');\n      this.genres = response.data['genres'];\n      this.tags = response.data['tags'];\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAyBA,SAASA,MAAT,QAAuB,cAAvB;AACA,eAAc;EACVC,IAAI,EAAC,QADK;;EAEVC,IAAI,GAAE;IACF,OAAM;MACFC,MAAM,EAAC,EADL;MAEFC,IAAI,EAAC;IAFH,CAAN;EAIH,CAPS;;EAQVC,OAAO,EAAC;IACJC,eAAe,CAACC,OAAD,EAAS;MACpB,MAAMC,IAAIC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAV;MACA,IAAG,CAACF,CAAJ,EAAM,OAAO,IAAP;;MACN,IAAID,OAAO,IAAE,CAAb,EAAgB;QACZC,CAAC,CAACG,KAAF,CAAQJ,OAAR,GAAkB,OAAlB;MACJ,CAFA,MAEO;QACHC,CAAC,CAACG,KAAF,CAAQJ,OAAR,GAAkB,MAAlB;MACJ;IAEH,CAVG;;IAWJK,MAAM,GAAE;MACJ,MAAMJ,IAAIC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAV;MACA,MAAMG,GAAE,GAAIJ,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCI,KAAjD;MACAN,CAAC,CAACM,KAAF,IAAWD,GAAG,GAAC,GAAf;IACH,CAfG;;IAgBJE,QAAQ,GAAE;MACN,MAAMC,IAAG,GAAIP,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAb;MACA,MAAMO,cAAa,GAAID,IAAI,CAAC,QAAD,CAAJ,CAAeF,KAAtC;MACA,MAAMI,GAAE,GAAIF,IAAI,CAAC,KAAD,CAAJ,CAAYF,KAAxB;MACA,MAAMK,YAAW,GAAIH,IAAI,CAAC,MAAD,CAAJ,CAAaF,KAAlC;MACAK,YAAW,GAAIA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,EAA9B,CAAf;MACApB,MAAM,CAACqB,IAAP,CAAY,eAAZ,EAA6B;QAACH,GAAG,EAACA,GAAL;QAASd,IAAI,EAACe,YAAd;QAA2BhB,MAAM,EAACc;MAAlC,CAA7B,EACKK,IADL,CACU,UAAUC,QAAV,EAAoB;QACtBC,OAAO,CAACC,GAAR,CAAYF,QAAZ;MACP,CAHD,EAIKG,KAJL,CAIW,UAAUC,KAAV,EAAiB;QACpBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACP,CAND;IAOJ;;EA7BI,CARE;;EAuCVC,OAAO,GAAE;IACL5B,MAAM,CAAC6B,GAAP,CAAW,aAAX,EACGP,IADH,CACQC,QAAO,IAAK;MAChBC,OAAO,CAACC,GAAR,CAAY,+BAAZ;MACA,KAAKtB,MAAL,GAAcoB,QAAQ,CAACrB,IAAT,CAAc,QAAd,CAAd;MACA,KAAKE,IAAL,GAAYmB,QAAQ,CAACrB,IAAT,CAAc,MAAd,CAAZ;IACD,CALH,EAMGwB,KANH,CAMSI,GAAE,IAAK;MACZN,OAAO,CAACC,GAAR,CAAYK,GAAZ;IACD,CARH;EASJ;;AAjDU,CAAd","names":["getAPI","name","data","genres","tags","methods","showHideTagList","display","x","document","getElementById","style","addTag","tag","value","postData","form","selectedGenres","url","selectedtags","replace","post","then","response","console","log","catch","error","created","get","err"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Upload.vue"],"sourcesContent":["<template>\n<div class = 'content'>\n<div id = 'managementnavigator'>\n<button>Upload</button>\n<button>Schedule</button>\n<button>Edit</button>\n<button>Manage Users</button>\n</div>\n<form id = 'download' >\n<label for=\"fname\">URL:</label>\n<input type = \"text\" id = 'urltextbox' name = 'url' maxlength=\"34\" style='width:280px' >\n<div id = 'genres'>\n<label v-for='genre in genres' :key = 'genre'><input type='checkbox' :value='genre' name = 'genres' class = 'genrecheckbox'>{{genre}}</label>\n</div>\n<br><br>\n<label id = 'tags'>Tags:<input type = 'text' name = 'tags' @focusin=\"showHideTagList(1)\" @change ='showHideTagList(2)' id = 'tagtextbox'></label>\n<select id = 'tagSelect' @change='addTag()' size = '20'>\n    <option v-for='tag in tags' :key = 'tag' v-html = 'tag'></option>\n</select>\n<input type = 'submit' @click='postData()'>\n</form>\n</div>\n</template>\n\n<script>\nimport { getAPI } from '../axios-api'\nexport default{\n    name:'Upload',\n    data(){\n        return{\n            genres:[],\n            tags:[],\n        }\n    },\n    methods:{\n        showHideTagList(display){\n            const x = document.getElementById('tagSelect')\n            if(!x)return null\n            if (display==1) {\n                x.style.display = \"block\";\n            } else {\n                x.style.display = \"none\";\n            }\n            \n        },\n        addTag(){\n            const x = document.getElementById('tagtextbox')\n            const tag = document.getElementById('tagSelect').value\n            x.value += tag+\",\"\n        },\n        postData(){\n            const form = document.getElementById('download');\n            const selectedGenres = form['genres'].value\n            const url = form['url'].value\n            const selectedtags = form['tags'].value\n            selectedtags = selectedtags.replace(/,\\s*$/, \"\");\n            getAPI.post('/novel/single', {url:url,tags:selectedtags,genres:selectedGenres})\n                .then(function (response) {\n                    console.log(response);\n            })\n                .catch(function (error) {\n                    console.log(error);\n            }); \n        }\n    },\n    created(){\n        getAPI.get('/uploaddata')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.genres = response.data['genres']\n            this.tags = response.data['tags']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n    }\n}\n</script>\n\n<style scoped>\n.content{\n    display:flex;\n    flex-direction:row;\n    height:1000px;\n    margin-top:100px;\n}\n#managementnavigator{\n    height:100%;\n    background-color:lightgray;\n    width:30%;\n    display:flex;\n    flex-direction:column;\n}\nbutton{\n    background:none;\n    border-right:none\n}\n#genres{\n    position:relative;\n    display:grid;\n    grid-template-rows: auto auto auto auto auto auto auto auto auto;\n    grid-auto-flow: column;\n    column-gap: 30px;\n    row-gap:10px;\n    margin:auto;\n    width:100%\n}\ninput{\n    margin-right:5px;\n}\n#tagSelect{\n    display:none;\n    background:lightgray;\n    border:none;\n    -webkit-appearance: none;\n}\n#tags{\n    width:100%\n}\n#tagtextbox{\n    width:500px;\n    text-align:left;\n    overflow-wrap: break-word\n}\n@media (max-width: 775px) {\n    #genres{\n        grid-template-rows: auto auto auto auto auto auto auto auto auto auto auto auto;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}