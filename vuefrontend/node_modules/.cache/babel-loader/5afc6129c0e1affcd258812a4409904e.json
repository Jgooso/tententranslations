{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"schedular\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", null, \"New\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ScheduleCreator = _resolveComponent(\"ScheduleCreator\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"select\", {\n    id: \"novel-selector\",\n    onChange: _cache[0] || (_cache[0] = $event => $options.selectNovel())\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.novels, novel => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: novel.novelid\n    }, _toDisplayString(novel.title), 9\n    /* TEXT, PROPS */\n    , _hoisted_3);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.scheduleList, (scheduleDay, day) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: day\n    }, [_createTextVNode(_toDisplayString(day) + \" \", 1\n    /* TEXT */\n    ), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(scheduleDay, schedule => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: schedule.day + schedule.time\n      }, [_createElementVNode(\"div\", null, _toDisplayString($options.timeConverter(schedule.time)) + \" \" + _toDisplayString(schedule.title), 1\n      /* TEXT */\n      )]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createVNode(_component_ScheduleCreator, {\n    novel: $data.novel\n  }, null, 8\n  /* PROPS */\n  , [\"novel\"])]);\n}","map":{"version":3,"mappings":";;EACKA,KAAK,EAAG;;;gCACbC,oBAAoB,QAApB,EAAoB,IAApB,EAAQ,KAAR,EAAW;AAAA;AAAX;;;;;;uBADAC,oBAwBM,KAxBN,cAwBM,CAvBNC,UAuBM,EAtBNF,oBAES,QAFT,EAES;IAFDG,EAAE,EAAG,gBAEJ;IAFsBC,QAAM,sCAAEC,sBAAF;EAE5B,CAFT,sBACAJ,oBAA+EK,SAA/E,EAA+E,IAA/E,EAA+EC,YAAvDC,YAAuD,EAAhEC,KAAe,IAAV;yBAApBR,oBAA+E,QAA/E,EAA+E;MAA9CS,KAAK,EAAED,KAAK,CAACE;IAAiC,CAA/E,mBAAyDF,KAAK,CAACG,MAA/D,EAAoE;IAAA;IAApE,EAAoEC,UAApE;GAA+E,CAA/E;;EAAA,GADA;;EAAA,CAsBM,EAlBNb,oBAaK,IAbL,EAaK,IAbL,EAaK,oBAXLC,oBAUKK,SAVL,EAUK,IAVL,EAUKC,YAV2BC,kBAU3B,EAVuC,CAAhCM,WAAgC,EAApBC,GAAoB,KAAjB;yBAA3Bd,oBAUK,IAVL,EAUK;MAV0Ce,GAAG,EAAED;IAU/C,CAVL,EAAuD,mCACrDA,OAAK,KACP;IAAA;KAFuD,EAEvDf,oBAOS,IAPT,EAOS,IAPT,EAOS,oBANLC,oBAKKK,SALL,EAKK,IALL,EAKKC,YALkBO,WAKlB,EALMG,QAAuB,IAAf;2BAAnBhB,oBAKK,IALL,EAKK;QALgCe,GAAG,EAAEC,QAAQ,CAACF,GAAT,GAAaE,QAAQ,CAACC;MAK3D,CALL,GACIlB,oBAGM,KAHN,EAGM,IAHN,EAGMmB,iBAFAd,uBAAcY,QAAQ,CAACC,IAAvB,CAEA,IAF8B,GAE9B,GADFC,iBAAEF,QAAQ,CAACL,KAAX,CAFJ,EAEoB;MAAA;MAFpB,EADJ;KAKK,CALL;;IAAA,CAMK,EAPT,CAFuD,CAAvD;GAUK,CAVL;;EAAA,CAWK,EAbL,CAkBM,EAHNQ,aAEEC,0BAFF,EAEE;IADDZ,KAAK,EAAED;EACN,CAFF,EACa,IADb,EACa;EAAA;EADb,EACa,SADb,CAGM,CAxBN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","id","onChange","$options","_Fragment","_renderList","$data","novel","value","novelid","title","_hoisted_3","scheduleDay","day","key","schedule","time","_toDisplayString","_createVNode","_component_ScheduleCreator"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/Schedular.vue"],"sourcesContent":["<template>\n<div class = 'schedular'>\n<button>New</button>\n<select id = 'novel-selector' @change=\"selectNovel()\">\n<option v-for='novel in novels' :value='novel.novelid'>{{novel.title}}</option>\n</select>\n\n<ul>\n\n<li v-for='(scheduleDay,day) in scheduleList' :key='day'>\n{{day}}\n<ul>\n    <li v-for='schedule in scheduleDay' :key='schedule.day+schedule.time'>\n        <div>\n            {{timeConverter(schedule.time)}}\n            {{schedule.title}}\n        </div>\n    </li>\n    </ul>\n</li>\n</ul>\n\n<ScheduleCreator\n:novel='novel'\n/>\n</div>\n</template>\n\n<script>\nimport {getAPI} from '../axios-api'\nimport ScheduleCreator from './ScheduleCreator'\nexport default{\n    name:'Schedular',\n    data(){\n        return{\n            scheduleList:[],\n            novels:[],\n            novel:[]\n        }\n    },\n    components:{\n        ScheduleCreator\n    },\n    methods:{\n        timeConverter(time){\n            var convertedTime = parseInt(time)\n            if((convertedTime % 12) == convertedTime){\n                convertedTime = (convertedTime %= 12).toString() + ':00 AM'\n            }else{\n                convertedTime = (convertedTime %= 12).toString() + ':00 PM'\n            }\n            return convertedTime\n        },\n        selectNovel(){\n            this.novel = document.getElementById(\"novel-selector\").value\n            console.log(this.novel)\n            getAPI.get('/schedule?novel='+this.novel)\n          .then(response => {\n            console.log('Schedule API has recieved data')\n            console.log(response)\n            this.scheduleList=response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n        }\n    },\n    created(){\n          \n          getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novels = response.data\n            console.log(response.data)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n}\n}\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}