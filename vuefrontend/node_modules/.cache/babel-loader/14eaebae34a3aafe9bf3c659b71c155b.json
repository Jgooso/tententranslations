{"ast":null,"code":"import ChapterSelector from '../components/ChapterSelector';\nimport Navigator from '../components/Navigator';\nimport { getAPI } from '../axios-api';\nexport default {\n  name: 'Chapter',\n  components: {\n    ChapterSelector,\n    Navigator\n  },\n  props: ['novelData', 'chapterList', 'tier'],\n\n  data() {\n    this.chapterList.sort((a, b) => a.chapternumber > b.chapternumber ? 1 : -1);\n    return {\n      chapter: this.chapterList[this.$route.params.chapter - 1],\n      chapterContent: '',\n      selectorList: []\n    };\n  },\n\n  methods: {\n    triggerEdit() {\n      if (document.getElementById('chapter-content').contentEditable == 'true') {\n        const url = '/chapter?novel=' + this.chapter.novelid + '&chapter=' + this.chapter.chapternumber;\n        document.getElementById('content').contentEditable = 'false';\n        document.getElementById('editButton').innerHTML = 'Edit';\n        const content = document.getElementById('content').innerHTML;\n        getAPI.put(url, {\n          content: content\n        }).then(function (response) {\n          console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        document.getElementById('chapter-content').contentEditable = 'true';\n        document.getElementById('editButton').innerHTML = 'Save';\n      }\n    },\n\n    handleScroll() {\n      if (window.scrollY > 100) {\n        document.getElementById(\"chapter-navigator\").classList.add('sticky-navigation');\n      }\n    }\n\n  },\n\n  created() {\n    window.addEventListener('scroll', this.handleScroll);\n    const url = '/chapter?novel=' + this.chapter.novelid + '&chapter=' + this.chapter.chapternumber;\n    getAPI.get(url).then(response => {\n      console.log('Chapter API has recieved data');\n      this.chapterContent = response.data;\n    }).catch(err => {\n      console.log(err);\n    });\n\n    for (var i = 0; i < this.chapterList.length; i++) {\n      this.selectorList.push((({\n        title,\n        chapternumber\n      }) => ({\n        title,\n        chapternumber\n      }))(this.chapterList[i]));\n    }\n\n    this.selectorList.sort((a, b) => a.chapternumber > b.chapternumber ? -1 : 1);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ChapterSelector","Navigator","getAPI","name","components","props","data","chapterList","sort","a","b","chapternumber","chapter","$route","params","chapterContent","selectorList","methods","triggerEdit","document","getElementById","contentEditable","url","novelid","innerHTML","content","put","then","response","console","log","catch","error","handleScroll","window","scrollY","classList","add","created","addEventListener","get","err","i","length","push","title"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Chapter.vue"],"sourcesContent":["<template>\n<div id = 'chapter' v-if='chapter'>\n    <div>\n     <br>\n        <h3 style = \"font-size: 25px\" v-html='novelData.title+\" - \"+chapter.chapternumber'/><!-- chapter number-->\n        <Navigator\n         :novel-id='novelData.novel'\n         :novel='novelData.title'\n         :chapter='chapter'\n         id = 'chapter-navigator'\n\n        />\n        <ChapterSelector\n            :chapterList= 'selectorList'\n            v-on:changeChapter=\"updateContent($event)\"\n            v-on:switchmode='$emit(\"switchmode\")'\n        />\n          <pre v-html = 'chapterContent' id = 'chapter-content'/>\n    </div>\n</div>\n</template>\n<script>\nimport ChapterSelector from '../components/ChapterSelector'\nimport Navigator from '../components/Navigator'\nimport { getAPI } from '../axios-api'\n    export default{\n        name: 'Chapter',\n        components:{\n            ChapterSelector,\n            Navigator,\n        },props:[\n        'novelData',\n        'chapterList',\n        'tier'\n        ],data(){\n            this.chapterList.sort((a,b) =>(a.chapternumber > b.chapternumber ? 1:-1))\n            return{\n                chapter:this.chapterList[this.$route.params.chapter-1],\n                chapterContent:'',\n                selectorList:[]\n            }\n        },methods:{\n            triggerEdit(){\n                if(document.getElementById('chapter-content').contentEditable=='true'){\n                    const url = '/chapter?novel='+this.chapter.novelid+'&chapter='+this.chapter.chapternumber\n                    document.getElementById('content').contentEditable='false'\n                    document.getElementById('editButton').innerHTML='Edit'\n                    const content = document.getElementById('content').innerHTML\n                    getAPI.put(url,{content:content})\n                        .then(function (response) {\n                            console.log(response);\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        })\n                }else{\n                document.getElementById('chapter-content').contentEditable='true'\n                document.getElementById('editButton').innerHTML='Save'\n                }\n            },\n            handleScroll(){\n            if(window.scrollY > 100){\n                document.getElementById(\"chapter-navigator\").classList.add('sticky-navigation')\n            }\n        }   \n        },\n        created(){\n             window.addEventListener('scroll', this.handleScroll);\n            const url = '/chapter?novel='+this.chapter.novelid+'&chapter='+this.chapter.chapternumber\n            getAPI.get(url)\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.chapterContent = response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n            for(var i=0;i < this.chapterList.length; i++){\n                this.selectorList.push((({ title, chapternumber }) => ({ title, chapternumber }))(this.chapterList[i]))\n            }\n            this.selectorList.sort((a,b) =>(a.chapternumber > b.chapternumber ? -1:1))\n        },\n    }\n</script>\n<style scoped>\n#chapter-content{\nfont-family: Times;\nwhite-space: pre-wrap;\nfont-weight:lighter;\noverflow:hidden;\nmargin:auto;\nmargin-top:25px;\nmargin-bottom:40px;\nfont-size:19px;\n}\n#chapter-navigator{\n    margin-bottom:20px;\n    position:sticky;\n    left:50;\n    z-index:10;\n    position: -webkit-sticky;\n}\n.sticky-navigation{\n    width:25%;\n    overflow:hidden;\n\n}\n</style>"]},"metadata":{},"sourceType":"module"}