{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-a85a36fa\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0,\n  id: \"chapter\",\n  onscroll: \"handleScroll()\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = {\n  style: {\n    \"font-size\": \"20px\"\n  }\n};\nconst _hoisted_5 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.chapter ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_hoisted_2, _createElementVNode(\"h3\", {\n    style: {\n      \"font-size\": \"15px\"\n    },\n    class: \"novel-title\",\n    innerHTML: $props.novelData.title\n  }, null, 8\n  /* PROPS */\n  , _hoisted_3), _createCommentVNode(\" chapter number\"), _createCommentVNode(\"\\n        <Navigator\\n         :novel-id='novelData.novel'\\n         :novel='novelData.title'\\n         :chapter='chapter'\\n         id = 'chapter-navigator'\\n\\n        />\\n        \"), _createElementVNode(\"h1\", _hoisted_4, _toDisplayString($data.chapter.title), 1\n  /* TEXT */\n  ), _createElementVNode(\"pre\", {\n    innerHTML: $data.chapterContent,\n    id: \"chapter-content\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_5)])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;;EACKA,EAAE,EAAG;EAAyBC,QAAQ,EAAC;;;gEAEvCC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;EAWWC,KAAuB,EAAvB;IAAA;EAAA;;;;SAbUC,+BAA1BC,oBAgBM,KAhBN,cAgBM,CAfFH,oBAcM,KAdN,EAcM,IAdN,EAcM,CAbLI,UAaK,EAZFJ,oBAA6E,IAA7E,EAA6E;IAAzEC,KAA0B,EAA1B;MAAA;IAAA,CAAyE;IAA9CI,KAAK,EAAC,aAAwC;IAA1BC,SAAwB,EAAhBC,iBAAUC;EAAQ,CAA7E;;EAAA,aAYE,EAZ2EC,sCAY3E,EAXFA,4MAWE,EAFET,oBAAkD,IAAlD,cAAkDU,iBAApBR,cAAQM,KAAY,CAAlD,EAA2C;EAAA;EAA3C,CAEF,EADAR,oBAAuD,KAAvD,EAAuD;IAAlDM,SAAyB,EAAfJ,oBAAwC;IAAxBJ,EAAE,EAAG;EAAmB,CAAvD;;EAAA,aACA,CAdN,CAeE,CAhBN","names":["id","onscroll","_createElementVNode","style","$data","_createElementBlock","_hoisted_2","class","innerHTML","$props","title","_createCommentVNode","_toDisplayString"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Chapter.vue"],"sourcesContent":["<template>\n<div id = 'chapter' v-if='chapter' onscroll='handleScroll()'>\n    <div>\n     <br>\n        <h3 style = \"font-size: 15px;\" class='novel-title' v-html='novelData.title'/><!-- chapter number-->\n        <!--\n        <Navigator\n         :novel-id='novelData.novel'\n         :novel='novelData.title'\n         :chapter='chapter'\n         id = 'chapter-navigator'\n\n        />\n        -->\n            <h1 style='font-size:20px;'>{{chapter.title}}</h1>\n          <pre v-html = 'chapterContent' id = 'chapter-content'/>\n    </div>\n</div>\n</template>\n<script>\nimport ChapterSelector from '../components/ChapterSelector'\nimport Navigator from '../components/Navigator'\nimport { getAPI } from '../axios-api'\nimport KoFiButton from '../components/KoFiButton'\n    export default{\n        name: 'Chapter',\n        components:{\n            ChapterSelector,\n            Navigator,\n            KoFiButton\n        },props:[\n        'novelData',\n        'chapterList',\n        'tier'\n        ],data(){\n            this.chapterList.sort((a,b) =>(a.chapternumber > b.chapternumber ? 1:-1))\n            return{\n                chapter:this.chapterList[this.$route.params.chapter-1],\n                chapterContent:'',\n                selectorList:[]\n            }\n        },methods:{\n            triggerEdit(){\n                if(document.getElementById('chapter-content').contentEditable=='true'){\n                    const url = '/chapter?chapter='+this.chapter.id\n                    document.getElementById('content').contentEditable='false'\n                    document.getElementById('editButton').innerHTML='Edit'\n                    const content = document.getElementById('content').innerHTML\n                    getAPI.put(url,{content:content})\n                        .then(function (response) {\n                            console.log(response);\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        })\n                }else{\n                document.getElementById('chapter-content').contentEditable='true'\n                document.getElementById('editButton').innerHTML='Save'\n                }\n            }, \n        },\n        created(){\n            const url = '/chapter?chapter='+this.chapter.id\n            getAPI.get(url)\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.chapterContent = response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n            for(var i=0;i < this.chapterList.length; i++){\n                this.selectorList.push((({ title, chapternumber }) => ({ title, chapternumber }))(this.chapterList[i]))\n            }\n            this.selectorList.sort((a,b) =>(a.chapternumber > b.chapternumber ? -1:1))\n        },\n    }\n</script>\n<style scoped>\n#chapter-content{\nfont-family: sans-serif;\nwhite-space: pre-wrap;\nfont-weight: 100;\nmargin:auto;\nmargin-top:25px;\nmargin-bottom:40px;\nfont-size:19px;\n\n}\n.novel-title{\n    text-decoration:underline;\n}\n.novel-title:hover{\n    color:var(--styleColor)\n}\n#chapter-navigator{\n    margin-bottom:20px;\n    left:50;\n    z-index:10;\n    top:20px;\n    height:fit-content;\n    transition: all .3s ease-in-out;\n}\n@media (max-width: 775px) {\n\n}\n</style>"]},"metadata":{},"sourceType":"module"}