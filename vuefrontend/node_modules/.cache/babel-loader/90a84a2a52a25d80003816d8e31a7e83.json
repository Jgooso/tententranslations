{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport axios from 'axios';\nexport default {\n  name: 'StripeCard',\n\n  data() {\n    return {\n      spk: \"pk_test_51L5d0fHlYhKzvWmvoTeIQZRu94xVDT6rgJC9Lp9KZxoQaTM21qa8jahwmqFTBTB4h9p6bSp2gFGdbvakV0CpMNRf00KL6sxJNJ\",\n      stripe: undefined,\n      card: undefined,\n      msg: 'Donate Here',\n      payAmount: \"$10.00\",\n      lockSubmit: false,\n      api: \"http://localhost:8000/api\"\n    };\n  },\n\n  mounted: function () {\n    var self = this;\n    self.stripe = Stripe(self.spk);\n    self.card = self.stripe.elements().create('card');\n    self.card.mount(self.$refs.card);\n    console.log(self.stripe);\n  },\n  methods: {\n    purchase() {\n      var self = this;\n      self.lockSubmit = true;\n      self.stripe.createToken(self.card).then(function (result) {\n        if (result.error) {\n          alert(result.error.message);\n          self.$forceUpdate(); // Forcing the DOM to update so the Stripe Element can update.\n\n          self.lockSubmit = false;\n          return;\n        } else {\n          self.processTransaction(result.token.id);\n        }\n      }).catch(err => {\n        console.log('purchaseerror');\n        alert(\"error: \" + err.message);\n        self.lockSubmit = false;\n      });\n    },\n\n    processTransaction(transactionToken) {\n      var self = this;\n      var dt = {\n        amount: self.stripCurrency(self.payAmount),\n        //stripe uses an int [with shifted decimal place] so we must convert our payment amount\n        currency: \"USD\",\n        description: \"something to say\",\n        token: transactionToken\n      };\n      var route = self.api + \"/charge/card\";\n      axios.post(route, dt, {\n        headers: {}\n      }).then(response => {\n        if (response.status == 200) {\n          alert(\"Transaction succeeded\");\n          self.lockSubmit = false;\n        } else {\n          throw new Error(\"failed donation\");\n        }\n      }).catch(err => {\n        console.log('processerror');\n        alert(\"error: \" + err.message);\n        self.lockSubmit = false;\n      });\n    },\n\n    stripCurrency(val) {\n      return val.replace(',', '').replace('$', '').replace('.', '');\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","spk","stripe","undefined","card","msg","payAmount","lockSubmit","api","mounted","self","Stripe","elements","create","mount","$refs","console","log","methods","purchase","createToken","then","result","error","alert","message","$forceUpdate","processTransaction","token","id","catch","err","transactionToken","dt","amount","stripCurrency","currency","description","route","post","headers","response","status","Error","val","replace"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/StripeCard.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex flex-column align-items-center\">\n    <h2 class=\"text-primary\">{{msg}} {{payAmount}}</h2>\n    <form id=\"payment-form\" class=\"w-75 px-5 d-flex flex-column align-items-center\" >\n        <div ref=\"card\" class=\"form-control m-2\">\n          <!-- A Stripe Element will be inserted here. -->\n        </div>\n        <input :disabled=\"lockSubmit\" class=\"btn btn-primary shadow-sm\" type=\"submit\" value=\"Donate\" v-on:click.prevent=\"purchase\" />\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    name:'StripeCard',\n    data(){\n        return {\n      spk:\"pk_test_51L5d0fHlYhKzvWmvoTeIQZRu94xVDT6rgJC9Lp9KZxoQaTM21qa8jahwmqFTBTB4h9p6bSp2gFGdbvakV0CpMNRf00KL6sxJNJ\",\n      stripe:undefined,\n      card:undefined,\n      msg: 'Donate Here',\n      payAmount:\"$10.00\",\n      lockSubmit:false,\n      api:\"http://localhost:8000/api\"\n    }\n    },mounted: function () {\n    var self=this;\n    self.stripe= Stripe(self.spk);\n    self.card = self.stripe.elements().create('card');\n    self.card.mount(self.$refs.card);\n    console.log(self.stripe)\n  },\n  methods:{\n    purchase() {\n      var self = this;\n      self.lockSubmit=true\n      self.stripe.createToken(self.card).then(function(result) {\n        if (result.error) {\n          alert(result.error.message)\n          self.$forceUpdate(); // Forcing the DOM to update so the Stripe Element can update.\n          self.lockSubmit=false\n          return;\n        }\n        else{ \n          self.processTransaction(result.token.id)\n        }\n      })\n      .catch((err) => {\n        console.log('purchaseerror')\n        alert(\"error: \"+err.message)\n        self.lockSubmit=false\n      });\n    },\n    processTransaction(transactionToken){\n      var self=this;\n      var dt= {\n          amount:self.stripCurrency(self.payAmount), //stripe uses an int [with shifted decimal place] so we must convert our payment amount\n          currency:\"USD\",\n          description:\"something to say\",\n          token:transactionToken\n      }\n      \n      var route=self.api+\"/charge/card\"\n      axios.post(route,dt, {\n          headers: {\n          }\n      }).then(response => {\n          if(response.status==200){\n              alert(\"Transaction succeeded\")\n              self.lockSubmit=false\n          }\n          else{\n              throw new Error(\"failed donation\")\n          }\n      }).catch((err) => {\n          console.log('processerror')\n          alert(\"error: \"+err.message)\n          self.lockSubmit=false\n      });\n      \n    },\n    stripCurrency(val){\n      return val.replace(',','').replace('$','').replace('.','')\n    }\n  },\n\n}\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module"}