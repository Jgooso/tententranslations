{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { getAPI } from '../axios-api';\nimport tagBox from '../components/TagBox';\nexport default {\n  data() {\n    return {\n      genres: [],\n      tags: [],\n      selectedtags: [],\n      selectedgenres: []\n    };\n  },\n\n  components: {\n    tagBox\n  },\n  methods: {\n    addTag(tag) {\n      const tagbutton = document.getElementById(tag);\n      tagbutton.classList.remove('unselected');\n\n      if (!this.selectedtags.includes(tag)) {\n        this.selectedtags.push(tag);\n      }\n    },\n\n    removeTag(removetag) {\n      const index = this.selectedtags.indexOf(removetag);\n      this.selectedtags.splice(index, 1);\n      document.getElementById(removetag).classList.add('unselected');\n    },\n\n    filterTag() {\n      var input, tagbuttons, txtValue;\n      input = document.getElementById('tagfilter').value.toUpperCase();\n      tagbuttons = document.getElementsByClassName('tagbutton');\n\n      for (var i = 0; i < tagbuttons.length; i++) {\n        txtValue = tagbuttons[i].value || tagbuttons[i].innerText;\n\n        if (txtValue.toUpperCase().indexOf(input) > -1) {\n          tagbuttons[i].style.display = \"\";\n        } else {\n          tagbuttons[i].style.display = \"none\";\n        }\n      }\n    },\n\n    showtags() {\n      document.getElementById('tagselector').style.display = 'flex';\n    },\n\n    postData() {\n      const loadingscreen = document.getElementById('loadingscreen');\n      loadingscreen.style.display = 'block';\n      const url = document.getElementById('urltextbox').value;\n      const genres = document.getElementsByClassName('genrecheckbox');\n      var selectedGenres = [];\n\n      for (var i = 0; i < genres.length; i++) {\n        if (genres[i].checked == true) {\n          selectedGenres.push(genres[i].value);\n        }\n      }\n\n      console.log('posted');\n      getAPI.post('/novel/single', {\n        url: url,\n        tags: this.selectedtags,\n        genres: selectedGenres\n      }).then(function (response) {\n        console.log(response);\n        loadingscreen.style.display = 'none';\n      }).catch(function (error) {\n        console.log(error);\n        loadingscreen.style.display = 'none';\n      });\n    }\n\n  },\n\n  created() {\n    getAPI.get('/uploaddata').then(response => {\n      console.log('Descriptor API has recieved data');\n      this.genres = response.data['genres'];\n      this.tags = response.data['tags'];\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"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","names":["getAPI","tagBox","data","genres","tags","selectedtags","selectedgenres","components","methods","addTag","tag","tagbutton","document","getElementById","classList","remove","includes","push","removeTag","removetag","index","indexOf","splice","add","filterTag","input","tagbuttons","txtValue","value","toUpperCase","getElementsByClassName","i","length","innerText","style","display","showtags","postData","loadingscreen","url","selectedGenres","checked","console","log","post","then","response","catch","error","created","get","err"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Upload.vue"],"sourcesContent":["<template>\n<div id = 'download'>\n<div id = 'loadingscreen'><div class=\"loader\"></div></div>\n<label for=\"fname\">URL:</label>\n<input type = \"text\" id = 'urltextbox' name = 'url' maxlength=\"34\" style='width:280px' >\n<div id = 'genres'>\n<label v-for='genre in genres' :key = 'genre'><input type='checkbox' :value='genre' :name = 'genre' class = 'genrecheckbox'>{{genre}}</label>\n</div>\n<br><br>\n<input type = 'submit' @click='postData()'>\n<label for='tagfilter'>Filter</label>\n<input id = 'tagfilter' @keyup='filterTag()' @focus='showtags()'>\n<div  id = 'tagList'>\n    <ul class = 'selectedtaglist' >\n        <li v-for='tag in selectedtags' :key = 'tag'><tagBox :tag='tag' @remove='removeTag'/></li>\n    </ul>\n    <div id = 'tagselector'>\n        <button v-for='tag in tags' :key='tag' class = 'tagbutton unselected' :id = 'tag' v-html='tag' @click='addTag(tag)'/>\n    </div>\n</div>\n</div>\n\n</template>\n<script>\nimport { getAPI } from '../axios-api'\nimport tagBox from '../components/TagBox'\nexport default{\n    data(){\n        return{\n            genres:[],\n            tags:[],\n            selectedtags:[],\n            selectedgenres:[]\n        }\n    },\n    components:{\n        tagBox,\n    },\nmethods:{\n        addTag(tag){\n            const tagbutton = document.getElementById(tag)\n            tagbutton.classList.remove('unselected')\n            if(!this.selectedtags.includes(tag)){\n                this.selectedtags.push(tag)\n            }\n           \n        },\n        removeTag(removetag){\n            const index = this.selectedtags.indexOf(removetag)\n            this.selectedtags.splice(index,1)\n            document.getElementById(removetag).classList.add('unselected')\n        },\n        filterTag(){\n            var input, tagbuttons, txtValue\n            input = document.getElementById('tagfilter').value.toUpperCase()\n            tagbuttons = document.getElementsByClassName('tagbutton')\n            for(var i = 0; i < tagbuttons.length; i++){\n                txtValue = tagbuttons[i].value || tagbuttons[i].innerText;\n                if (txtValue.toUpperCase().indexOf(input) > -1) {\n                    tagbuttons[i].style.display = \"\";\n                } else {\n                    tagbuttons[i].style.display = \"none\";\n                }\n            }\n        },\n        showtags(){\n            document.getElementById('tagselector').style.display = 'flex'\n        },\n        postData(){\n            const loadingscreen = document.getElementById('loadingscreen')\n            loadingscreen.style.display = 'block'\n            const url = document.getElementById('urltextbox').value;\n            const genres = document.getElementsByClassName('genrecheckbox')\n            var selectedGenres = []\n            for(var i=0; i < genres.length; i++){\n                if(genres[i].checked==true){\n                    selectedGenres.push(genres[i].value)\n                }\n            }\n            console.log('posted')\n            getAPI.post('/novel/single', {url:url,tags:this.selectedtags,genres:selectedGenres})\n                .then(function (response) {\n                    console.log(response);\n                    loadingscreen.style.display = 'none'\n            })\n                .catch(function (error) {\n                    console.log(error);\n                    loadingscreen.style.display = 'none'\n            }); \n        }\n    },\n    created(){\n        \n        getAPI.get('/uploaddata')\n          .then(response => {\n            console.log('Descriptor API has recieved data')\n            this.genres = response.data['genres']\n            this.tags = response.data['tags']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          \n    }\n}\n</script>\n<style scoped>\n#tagList{\nborder: 2px rgb(244,244,244) solid;\nwidth:800px;\nheight:fit-content;\nmin-height:50px;\nfloat:left;\n\n}\n#tagfilter{\n    height:30px;\n}\n.selectedtaglist{\n    display:inline;\n    list-style: none;\n    padding:0px;\n}\n.selectedtaglist li{\n    display:inline;\n    float:left;\n    margin-left:10px;\n}\n\n#tagselector{\n    display:none;\n    flex-direction:column;\n    overflow:scroll;\n    height:500px;\n    width:500px;\n}\n.tagbutton{\n    border:none;\n    color:lightgray;\n}\n.unselected{\n    color:black;\n}\n.unselected:hover{\n    background-color:blue;\n    color:white;\n}\nbutton{\n    background:none;\n    border-right:none\n}\n#genres{\n    position:relative;\n    display:grid;\n    grid-template-rows: auto auto auto auto auto auto auto auto auto;\n    grid-auto-flow: column;\n    column-gap: 30px;\n    row-gap:10px;\n    margin:auto;\n    width:100%\n}\ninput{\n    margin-right:5px;\n}\n#tagSelect{\n    background:lightgray;\n    border:none;\n    -webkit-appearance: none;\n}\n#tags{\n    width:100%\n}\n#tagtextbox{\n    width:500px;\n    text-align:left;\n    overflow-wrap: break-word\n}\n#download{\n    width:100%;\n    height:fit-content;\n}\n.loader {\n  border: 16px solid #f3f3f3; /* Light grey */\n  border-top: 16px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  animation: spin 2s linear infinite;\n  margin:auto;\n  margin-top:170px;\n\n}\n#loadingscreen{\n    display:none;\n    position:absolute;\n    z-index:5;\n    width:100%;\n    height:100%;\n    background-color:rgba(0,0,0,0.5)\n}\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n@media (max-width: 775px) {\n    #genres{\n        grid-template-rows: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\n        width:300px;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}