{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-a85a36fa\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0,\n  id: \"chapter\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navigator = _resolveComponent(\"Navigator\");\n\n  const _component_ChapterSelector = _resolveComponent(\"ChapterSelector\");\n\n  return $data.chapter ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_hoisted_2, _createElementVNode(\"h3\", {\n    style: {\n      \"font-size\": \"25px\"\n    },\n    innerHTML: $props.novelData.title + \" - \" + $data.chapter.chapternumber\n  }, null, 8\n  /* PROPS */\n  , _hoisted_3), _createCommentVNode(\" chapter number\"), _createVNode(_component_Navigator, {\n    \"novel-id\": $props.novelData.novel,\n    novel: $props.novelData.title,\n    chapter: $data.chapter,\n    id: \"chapter-navigator\"\n  }, null, 8\n  /* PROPS */\n  , [\"novel-id\", \"novel\", \"chapter\"]), _createVNode(_component_ChapterSelector, {\n    chapterList: $data.selectorList,\n    onChangeChapter: _cache[0] || (_cache[0] = $event => _ctx.updateContent($event))\n  }, null, 8\n  /* PROPS */\n  , [\"chapterList\"]), _createElementVNode(\"pre\", {\n    innerHTML: $data.chapterContent,\n    id: \"chapter-content\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_4)])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;;EACKA,EAAE,EAAG;;;gEAELC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;;;;;;SAFqBC,+BAA1BC,oBAgBM,KAhBN,cAgBM,CAfFF,oBAcM,KAdN,EAcM,IAdN,EAcM,CAbLG,UAaK,EAZFH,oBAAoF,IAApF,EAAoF;IAAhFI,KAAyB,EAAzB;MAAA;IAAA,CAAgF;IAAtDC,SAAoD,EAA5CC,iBAAUC,KAAV,GAAe,KAAf,GAAsBN,cAAQO;EAAgB,CAApF;;EAAA,aAYE,EAZkFC,sCAYlF,EAXFC,aAKEC,oBALF,EAKE;IAJA,YAAUL,iBAAUM,KAIpB;IAHAA,KAAK,EAAEN,iBAAUC,KAGjB;IAFAM,OAAO,EAAEZ,aAET;IADDF,EAAE,EAAG;EACJ,CALF;;EAAA,mCAWE,EALFW,aAGEI,0BAHF,EAGE;IAFGC,WAAW,EAAGd,kBAEjB;IADOe,eAAa,sCAAEC,mBAAcC,MAAd,CAAF;EACpB,CAHF;;EAAA,kBAKE,EADAlB,oBAAuD,KAAvD,EAAuD;IAAlDK,SAAyB,EAAfJ,oBAAwC;IAAxBF,EAAE,EAAG;EAAmB,CAAvD;;EAAA,aACA,CAdN,CAeE,CAhBN","names":["id","_createElementVNode","$data","_createElementBlock","_hoisted_2","style","innerHTML","$props","title","chapternumber","_createCommentVNode","_createVNode","_component_Navigator","novel","chapter","_component_ChapterSelector","chapterList","onChangeChapter","_ctx","$event"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Chapter.vue"],"sourcesContent":["<template>\n<div id = 'chapter' v-if='chapter'>\n    <div>\n     <br>\n        <h3 style = \"font-size: 25px\" v-html='novelData.title+\" - \"+chapter.chapternumber'/><!-- chapter number-->\n        <Navigator\n         :novel-id='novelData.novel'\n         :novel='novelData.title'\n         :chapter='chapter'\n         id = 'chapter-navigator'\n        />\n        <ChapterSelector\n            :chapterList= 'selectorList'\n            v-on:changeChapter=\"updateContent($event)\"\n        />\n          <pre v-html = 'chapterContent' id = 'chapter-content'/>\n    </div>\n</div>\n</template>\n<script>\nimport ChapterSelector from '../components/ChapterSelector'\nimport Navigator from '../components/Navigator'\nimport { getAPI } from '../axios-api'\n    export default{\n        name: 'Chapter',\n        components:{\n            ChapterSelector,\n            Navigator,\n        },props:[\n        'novelData',\n        'chapterList',\n        'tier'\n        ],data(){\n            this.chapterList.sort((a,b) =>(a.chapternumber > b.chapternumber ? 1:-1))\n            return{\n                chapter:this.chapterList[this.$route.params.chapter-1],\n                chapterContent:'',\n                selectorList:[]\n            }\n        },methods:{\n            changeFontSize(change){\n                const txt = document.getElementById('chapter-content');\n                const style = window.getComputedStyle(txt, null).getPropertyValue('font-size');\n                const currentSize = parseFloat(style);\n                txt.style.fontSize = (currentSize + change) + 'px';\n            },\n            triggerEdit(){\n                if(document.getElementById('chapter-content').contentEditable=='true'){\n                    const url = '/chapter?novel='+this.chapter.novelid+'&chapter='+this.chapter.chapternumber\n                    document.getElementById('content').contentEditable='false'\n                    document.getElementById('editButton').innerHTML='Edit'\n                    const content = document.getElementById('content').innerHTML\n                    getAPI.put(url,{content:content})\n                        .then(function (response) {\n                            console.log(response);\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        })\n                }else{\n                document.getElementById('chapter-content').contentEditable='true'\n                document.getElementById('editButton').innerHTML='Save'\n                }\n            }    \n        },\n        created(){\n            const url = '/chapter?novel='+this.chapter.novelid+'&chapter='+this.chapter.chapternumber\n            getAPI.get(url)\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.chapterContent = response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n            for(var i=0;i < this.chapterList.length; i++){\n                this.selectorList.push((({ title, chapternumber }) => ({ title, chapternumber }))(this.chapterList[i]))\n            }\n            this.selectorList.sort((a,b) =>(a.chapternumber > b.chapternumber ? -1:1))\n            \n        \n        },\n    }\n</script>\n<style scoped>\n#chapter-content{\nfont-family: Times;\nfont-size:var(--fontsize);\nwhite-space: pre-wrap;\nfont-weight:lighter;\noverflow:hidden;\nmargin:auto;\nmargin-top:25px;\nmargin-bottom:40px;\n}\n#chapter-navigator{\n    margin-bottom:20px;\n    position:relative;\n    left:50;\n    z-index:2;\n}\n</style>"]},"metadata":{},"sourceType":"module"}