{"ast":null,"code":"import { getAPI } from '../axios-api';\nimport Calender from '../components/Calender';\nexport default {\n  name: 'Schedular',\n\n  data() {\n    return {\n      scheduleList: [],\n      novels: [],\n      novel: []\n    };\n  },\n\n  components: {\n    Calender\n  },\n  methods: {\n    timeConverter(time) {\n      var convertedTime = parseInt(time);\n\n      if (convertedTime % 12 == convertedTime) {\n        convertedTime = (convertedTime %= 12).toString() + ':00 AM';\n      } else {\n        convertedTime = (convertedTime %= 12).toString() + ':00 PM';\n      }\n\n      return convertedTime;\n    },\n\n    selectNovel(a) {\n      if (a) {\n        this.novel = a;\n      } else {\n        this.novel = document.getElementById(\"novel-selector\").value;\n      }\n\n      console.log(this.novel);\n      /*\n      getAPI.get('/schedule')\n      .then(response => {\n      console.log('Schedule API has recieved data')\n      console.log(response)\n      this.scheduleList=response.data\n      })\n      .catch(err => {\n      console.log(err)\n      })\n      */\n    },\n\n    showCreator() {\n      document.getElementById('schedule-creator').style.display = 'flex';\n    },\n\n    submit() {\n      const time = document.getElementById('appt').value;\n      console.log(time);\n      console.log(this.novel);\n      const dates = document.getElementsByClassName('date-selector');\n      var selecteddates = [];\n      console.log(dates.length);\n\n      for (var i = 0; i < dates.length; i++) {\n        if (dates[i].checked == true) {\n          selecteddates.push(dates[i].value);\n        }\n      }\n\n      console.log(selecteddates);\n      getAPI.post('/schedule', {\n        novel: this.novel,\n        time: time,\n        dates: selecteddates\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      console.log('what');\n      document.getElementById('schedule-creator').style.display = 'none';\n    }\n\n  },\n\n  created() {\n    getAPI.get('/noveltitles').then(response => {\n      console.log('Chapter API has recieved data');\n      this.novels = response.data;\n      console.log(this.novels[0].novelid);\n      this.selectNovel(this.novels[0].novelid);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"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","names":["getAPI","Calender","name","data","scheduleList","novels","novel","components","methods","timeConverter","time","convertedTime","parseInt","toString","selectNovel","a","document","getElementById","value","console","log","showCreator","style","display","submit","dates","getElementsByClassName","selecteddates","length","i","checked","push","post","then","response","catch","error","created","get","novelid","err"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Schedular.vue"],"sourcesContent":["<template>\n<div class = 'schedular'>\n<Calender\n:schedule = 'scheduleList'/>\n{{scheduleList}}\n</div>\n</template>\n\n<script>\nimport {getAPI} from '../axios-api'\nimport Calender from '../components/Calender'\nexport default{\n    name:'Schedular',\n    data(){\n        return{\n            scheduleList:[],\n            novels:[],\n            novel:[]\n        }\n    },\n    components:{\n        Calender,\n    },\n    methods:{\n        timeConverter(time){\n            var convertedTime = parseInt(time)\n            if((convertedTime % 12) == convertedTime){\n                convertedTime = (convertedTime %= 12).toString() + ':00 AM'\n            }else{\n                convertedTime = (convertedTime %= 12).toString() + ':00 PM'\n            }\n            return convertedTime\n        },\n        selectNovel(a){\n            if(a){\n                this.novel = a\n            }else{\n                this.novel = document.getElementById(\"novel-selector\").value\n            }\n            console.log(this.novel)\n            /*\n            getAPI.get('/schedule')\n          .then(response => {\n            console.log('Schedule API has recieved data')\n            console.log(response)\n            this.scheduleList=response.data\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          */\n        },\n        showCreator(){\n            document.getElementById('schedule-creator').style.display='flex'\n        },\n        submit(){\n            const time = document.getElementById('appt').value\n            console.log(time)\n            console.log(this.novel)\n            const dates = document.getElementsByClassName('date-selector')\n            var selecteddates = []\n            console.log(dates.length)\n            for(var i=0; i < dates.length; i++){\n                if(dates[i].checked==true){\n                    selecteddates.push(dates[i].value)\n                }\n            }\n            console.log(selecteddates)\n            getAPI.post('/schedule', {novel:this.novel,time:time,dates:selecteddates})\n                .then(function (response) {\n                    console.log(response);\n            })\n                .catch(function (error) {\n                    console.log(error);\n            }); \n            console.log('what')\n            document.getElementById('schedule-creator').style.display='none'\n            \n            \n        },\n    },\n    created(){\n          \n          getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novels = response.data\n            console.log(this.novels[0].novelid)\n            this.selectNovel(this.novels[0].novelid)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n}\n}\n</script>\n\n<style scoped>\n.schedular{\n    width:100%\n}\n#schedule-creator{\nposition:fixed;\n    background-color:lightgray;\n    width:500px;\n    height:500px;\n    top:50%;\n    left:50%;\n    margin-top:-250px;\n    margin-left:-250px;\n    display:none;\n    flex-direction:column;\n}\n#appt{\n    background:none;\n    border:none;\n    float:right;\n    margin-right:50px;\n    height:30px;\n}\n@media (max-width: 775px) {\n    #novel-selector{\n        width:350px;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}