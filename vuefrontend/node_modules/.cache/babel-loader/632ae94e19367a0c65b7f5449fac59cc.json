{"ast":null,"code":"import { getAPI } from '../axios-api';\nexport default {\n  name: 'Calender',\n\n  data() {\n    return {\n      dates: [],\n      daysoftheWeek: ['Sunday', 'Monday', 'Tuesady', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      month: '',\n      day: 0,\n      selectedDay: [],\n      novels: []\n    };\n  },\n\n  methods: {\n    print(a, event) {\n      console.log(a);\n      const x = event.clientX;\n      const y = event.clientY;\n      console.log(x, y);\n      getAPI.get('/noveltitles').then(response => {\n        console.log('Chapter API has recieved data');\n        this.novels = response.data;\n        console.log(this.novels[0].novelid); //this.selectNovel(this.novels[0].novelid)\n\n        this.selectedDay = a.toLocaleString('default', {\n          day: 'numeric'\n        });\n        console.log(this.selectedDay);\n        var menu = document.getElementById('scheduleCreator');\n        menu.style.display = 'block';\n        menu.style.left = x + 'px';\n        menu.style.top = 50 + y + 'px';\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  },\n\n  created() {\n    getAPI.get('/dates').then(response => {\n      console.log('Chapter API has recieved data');\n      this.dates = response.data;\n\n      for (var i = 0; i < this.dates.length; i++) {\n        this.dates[i] = new Date(this.dates[i]);\n      }\n\n      const start_date = this.dates[1];\n      this.month = start_date.toLocaleString('default', {\n        month: 'long'\n      });\n      console.log(start_date);\n      this.day = start_date.getDay();\n      console.log(this.month);\n      console.log(this.day);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AA4BA,SAASA,MAAT,QAAuB,cAAvB;AACA,eAAc;EACVC,IAAI,EAAC,UADK;;EAEVC,IAAI,GAAE;IACF,OAAO;MACHC,KAAK,EAAC,EADH;MAEHC,aAAa,EAAC,CAAC,QAAD,EAAU,QAAV,EAAmB,SAAnB,EAA6B,WAA7B,EAAyC,UAAzC,EAAoD,QAApD,EAA6D,UAA7D,CAFX;MAGHC,KAAK,EAAC,EAHH;MAIHC,GAAG,EAAC,CAJD;MAKHC,WAAW,EAAC,EALT;MAMHC,MAAM,EAAC;IANJ,CAAP;EAQH,CAXS;;EAYVC,OAAO,EAAC;IACJC,KAAK,CAACC,CAAD,EAAGC,KAAH,EAAS;MACVC,OAAO,CAACC,GAAR,CAAYH,CAAZ;MACA,MAAMI,IAAIH,KAAK,CAACI,OAAhB;MACA,MAAMC,CAAC,GAAEL,KAAK,CAACM,OAAf;MACAL,OAAO,CAACC,GAAR,CAAYC,CAAZ,EAAcE,CAAd;MACAjB,MAAM,CAACmB,GAAP,CAAW,cAAX,EACDC,IADC,CACIC,QAAO,IAAK;QAChBR,OAAO,CAACC,GAAR,CAAY,+BAAZ;QACA,KAAKN,MAAL,GAAca,QAAQ,CAACnB,IAAvB;QACAW,OAAO,CAACC,GAAR,CAAY,KAAKN,MAAL,CAAY,CAAZ,EAAec,OAA3B,EAHgB,CAIhB;;QACA,KAAKf,WAAL,GAAiBI,CAAC,CAACY,cAAF,CAAiB,SAAjB,EAA4B;UAACjB,GAAG,EAAC;QAAL,CAA5B,CAAjB;QACAO,OAAO,CAACC,GAAR,CAAY,KAAKP,WAAjB;QACA,IAAIiB,IAAG,GAAIC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAX;QACAF,IAAI,CAACG,KAAL,CAAWC,OAAX,GAAqB,OAArB;QACAJ,IAAI,CAACG,KAAL,CAAWE,IAAX,GAAiBd,IAAI,IAArB;QACAS,IAAI,CAACG,KAAL,CAAWG,GAAX,GAAiB,KAAGb,CAAH,GAAO,IAAxB;MACD,CAZC,EAaDc,KAbC,CAaKC,GAAE,IAAK;QACZnB,OAAO,CAACC,GAAR,CAAYkB,GAAZ;MACD,CAfC;IAkBJ;;EAxBI,CAZE;;EAsCVC,OAAO,GAAE;IACLjC,MAAM,CAACmB,GAAP,CAAW,QAAX,EACGC,IADH,CACQC,QAAO,IAAK;MAChBR,OAAO,CAACC,GAAR,CAAY,+BAAZ;MACA,KAAKX,KAAL,GAAakB,QAAQ,CAACnB,IAAtB;;MACA,KAAI,IAAIgC,IAAI,CAAZ,EAAeA,IAAI,KAAK/B,KAAL,CAAWgC,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;QACtC,KAAK/B,KAAL,CAAW+B,CAAX,IAAgB,IAAIE,IAAJ,CAAS,KAAKjC,KAAL,CAAW+B,CAAX,CAAT,CAAhB;MACJ;;MACA,MAAMG,UAAS,GAAI,KAAKlC,KAAL,CAAW,CAAX,CAAnB;MACA,KAAKE,KAAL,GAAagC,UAAU,CAACd,cAAX,CAA0B,SAA1B,EAAqC;QAAElB,KAAK,EAAE;MAAT,CAArC,CAAb;MACAQ,OAAO,CAACC,GAAR,CAAYuB,UAAZ;MACA,KAAK/B,GAAL,GAAW+B,UAAU,CAACC,MAAX,EAAX;MACAzB,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;MACAQ,OAAO,CAACC,GAAR,CAAY,KAAKR,GAAjB;IACD,CAbH,EAcGyB,KAdH,CAcSC,GAAE,IAAK;MACZnB,OAAO,CAACC,GAAR,CAAYkB,GAAZ;IACD,CAhBH;EAkBJ;;AAzDU,CAAd","names":["getAPI","name","data","dates","daysoftheWeek","month","day","selectedDay","novels","methods","print","a","event","console","log","x","clientX","y","clientY","get","then","response","novelid","toLocaleString","menu","document","getElementById","style","display","left","top","catch","err","created","i","length","Date","start_date","getDay"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/Calender.vue"],"sourcesContent":["<template>\n<body v-if='dates[8]'>\n<h1>\n{{month}}\n</h1>\n<div id = 'calender'>\n    <div class = 'weekday' v-for='day in daysoftheWeek'>\n    {{day}}\n    </div>\n    <div v-for='d in day' :key = 'date'/>\n    <div class = 'cell' v-for='date in dates' :key = 'date' @click.right='print(date,$event)'>\n       <p>{{\n           date.toLocaleString('default', {day:'numeric'})\n           }}\n       </p>\n    </div>\n</div>\n<div id = 'scheduleCreator'>\n<select id = 'novel-selector' @change=\"selectNovel()\">\n<option v-for='novel in novels' :value='novel.novelid'>{{novel.title}}</option>\n</select>\n<p>Frequency</p>\n<p>Days of the Week</p>\n</div>\n</body>\n</template>\n\n<script>\nimport { getAPI } from '../axios-api'\nexport default{\n    name:'Calender',\n    data(){\n        return {\n            dates:[],\n            daysoftheWeek:['Sunday','Monday','Tuesady','Wednesday','Thursday','Friday','Saturday'],\n            month:'',\n            day:0,\n            selectedDay:[],\n            novels:[],\n        }\n    },\n    methods:{\n        print(a,event){\n            console.log(a)\n            const x = event.clientX;\n            const y= event.clientY;\n            console.log(x,y)\n            getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novels = response.data\n            console.log(this.novels[0].novelid)\n            //this.selectNovel(this.novels[0].novelid)\n            this.selectedDay=a.toLocaleString('default', {day:'numeric'})\n            console.log(this.selectedDay)\n            var menu = document.getElementById('scheduleCreator')\n            menu.style.display = 'block'\n            menu.style.left= x + 'px'\n            menu.style.top = 50+y + 'px'\n          })\n          .catch(err => {\n            console.log(err)\n          })\n            \n\n        }\n    },\n    created(){\n        getAPI.get('/dates')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.dates = response.data\n            for(var i = 0; i < this.dates.length; i++){\n                this.dates[i] = new Date(this.dates[i])\n            }\n            const start_date = this.dates[1]\n            this.month = start_date.toLocaleString('default', { month: 'long'})\n            console.log(start_date)\n            this.day = start_date.getDay()\n            console.log(this.month);\n            console.log(this.day)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          \n    }\n\n}\n</script>\n<style scoped>\n.cell{\n    border:1px black solid;\n    width:100%;\n    height:100%;\n    margin:0px;\n}\n#calender{\n    width:100%;\n    height:100%;\n    min-height:700px;\n    display:grid;\n    grid-template-columns: auto auto auto auto auto auto auto;\n    gap:0px;\n    border:1px solid black;\n}\n.weekday{\n    text-align:center;\n    width:100px;\n    margin:0px;\n    height:20px;\n}\n#scheduleCreator{\n    display:none;\n    background-color:lightgray;\n    position:absolute;\n    width:300px;\n    height:150px;\n}\n#novel-selector{\n    width:100%;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module"}