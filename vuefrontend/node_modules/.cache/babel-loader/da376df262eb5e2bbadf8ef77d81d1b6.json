{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0ecd383b\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"download\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"loadingscreen\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"loader\"\n})], -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  id: \"upload\"\n};\nconst _hoisted_4 = {\n  id: \"upload_tables\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Alternative\"), /*#__PURE__*/_createElementVNode(\"td\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"URL\"), /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  id: \"urltextbox\",\n  name: \"url\",\n  maxlength: \"34\",\n  style: {\n    \"width\": \"280px\"\n  }\n})])], -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Authors\"), /*#__PURE__*/_createElementVNode(\"td\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Genres\", -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Tags\", -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = /*#__PURE__*/_createStaticVNode(\"<table data-v-0ecd383b><tr data-v-0ecd383b><td class=\\\"category\\\" data-v-0ecd383b>Release</td><td data-v-0ecd383b>20XX</td></tr><tr data-v-0ecd383b><td class=\\\"category\\\" data-v-0ecd383b>Status</td><td data-v-0ecd383b>Unreleased</td></tr><tr data-v-0ecd383b><td class=\\\"category\\\" data-v-0ecd383b>Novel</td><td data-v-0ecd383b><select id=\\\"completedEdit\\\" data-v-0ecd383b><option value=\\\"Ongoing\\\" data-v-0ecd383b>Ongoing</option><option value=\\\"Completed\\\" selected data-v-0ecd383b>Completed</option><option value=\\\"On Hold\\\" data-v-0ecd383b>On Hold</option><option value=\\\"Dropped\\\" data-v-0ecd383b>Dropped</option></select></td></tr></table>\", 1);\n\nconst _hoisted_11 = {\n  id: \"genre-selector\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GenreSelector = _resolveComponent(\"GenreSelector\");\n\n  const _component_TagSelector = _resolveComponent(\"TagSelector\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", null, [_hoisted_5, _hoisted_6, _hoisted_7, _createElementVNode(\"tr\", null, [_hoisted_8, _createElementVNode(\"td\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.showGenres())\n  }, _toDisplayString($data.selectedgenres), 1\n  /* TEXT */\n  )]), _createElementVNode(\"tr\", null, [_hoisted_9, _createElementVNode(\"td\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.showTags())\n  })])]), _hoisted_10]), _createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_GenreSelector, {\n    genres: $data.genres,\n    selectedgenres: $data.selectedgenres\n  }, null, 8\n  /* PROPS */\n  , [\"genres\", \"selectedgenres\"])]), _createVNode(_component_TagSelector, {\n    tags: $data.tags,\n    selectedtags: $data.selectedtags,\n    id: \"tag-selector\"\n  }, null, 8\n  /* PROPS */\n  , [\"tags\", \"selectedtags\"])]), _createElementVNode(\"input\", {\n    type: \"submit\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.postData())\n  })]);\n}","map":{"version":3,"mappings":";;;;;EACKA,EAAE,EAAG;;;gEACNC,oBAA0D,KAA1D,EAA0D;EAArDD,EAAE,EAAG;AAAgD,CAA1D,EAAyB,cAACC,oBAA0B,KAA1B,EAA0B;EAArBC,KAAK,EAAC;AAAe,CAA1B,CAAD,CAAzB;;AAAA;;;EACKF,EAAE,EAAG;;;EACDA,EAAE,EAAG;;;gEAEFC,oBAGK,IAHL,EAGK,IAHL,EAGK,cAFDA,oBAAqC,IAArC,EAAqC;EAAjCC,KAAK,EAAC;AAA2B,CAArC,EAAqB,aAArB,CAEC,eADDD,oBAAS,IAAT,CACC,CAHL;;AAAA;;gEAIAA,oBAGK,IAHL,EAGK,IAHL,EAGK,cAFDA,oBAA6B,IAA7B,EAA6B;EAAzBC,KAAK,EAAC;AAAmB,CAA7B,EAAqB,KAArB,CAEC,eADDD,oBAAiG,IAAjG,EAAiG,IAAjG,EAAiG,cAA7FA,oBAAwF,OAAxF,EAAwF;EAAjFE,IAAI,EAAG,MAA0E;EAAnEH,EAAE,EAAG,YAA8D;EAAjDI,IAAI,EAAG,KAA0C;EAApCC,SAAS,EAAC,IAA0B;EAArBC,KAAmB,EAAnB;IAAA;EAAA;AAAqB,CAAxF,CAA6F,CAAjG,CACC,CAHL;;AAAA;;gEAIAL,oBAGK,IAHL,EAGK,IAHL,EAGK,cAFDA,oBAAmC,IAAnC,EAAmC;EAA/BC,KAAK,EAAG;AAAuB,CAAnC,EAAuB,SAAvB,CAEC,eADDD,oBAAS,IAAT,CACC,CAHL;;AAAA;;gEAKIA,oBAAgC,IAAhC,EAAgC;EAA5BC,KAAK,EAAC;AAAsB,CAAhC,EAAqB,QAArB,EAA2B;AAAA;AAA3B;;gEAIAD,oBAA8B,IAA9B,EAA8B;EAA1BC,KAAK,EAAC;AAAoB,CAA9B,EAAqB,MAArB,EAAyB;AAAA;AAAzB;;;;;EA2BPF,EAAE,EAAG;;;;;;;uBAjDlBO,oBAiEM,KAjEN,cAiEM,CAhEFC,UAgEE,EA/DFP,oBA2DM,KA3DN,cA2DM,CA1DFA,oBA6CM,KA7CN,cA6CM,CA5CFA,oBAqBQ,OArBR,EAqBQ,IArBR,EAqBQ,CApBJQ,UAoBI,EAhBJC,UAgBI,EAZJC,UAYI,EARJV,oBAGK,IAHL,EAGK,IAHL,EAGK,CAFDW,UAEC,EADDX,oBAAkD,IAAlD,EAAkD;IAA5CY,OAAK,sCAAEC,qBAAF;EAAuC,CAAlD,mBAA6BC,qBAA7B,EAA2C;EAAA;EAA3C,CACC,CAHL,CAQI,EAJJd,oBAGS,IAHT,EAGS,IAHT,EAGS,CAFLe,UAEK,EADLf,oBAA6B,IAA7B,EAA6B;IAAxBY,OAAK,sCAAEC,mBAAF;EAAmB,CAA7B,CACK,CAHT,CAII,CArBR,CA4CE,EAtBFG,WAsBE,CA7CN,CA0DE,EAZFhB,oBAMM,KANN,eAMM,CALDiB,aAIKC,wBAJL,EAIK;IAHDC,MAAM,EAAEL,YAGP;IAFDM,cAAc,EAAEN;EAEf,CAJL;;EAAA,+BAKC,CANN,CAYE,EALFG,aAIEI,sBAJF,EAIE;IAHGC,IAAI,EAAER,UAGT;IAFGS,YAAY,EAAET,kBAEjB;IADEf,EAAE,EAAG;EACP,CAJF;;EAAA,2BAKE,CA3DN,CA+DE,EAHFC,oBAA2C,OAA3C,EAA2C;IAApCE,IAAI,EAAG,QAA6B;IAAnBU,OAAK,sCAAEC,mBAAF;EAAc,CAA3C,CAGE,CAjEN","names":["id","_createElementVNode","class","type","name","maxlength","style","_createElementBlock","_hoisted_2","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","onClick","$options","$data","_hoisted_9","_hoisted_10","_createVNode","_component_GenreSelector","genres","selectedgenres","_component_TagSelector","tags","selectedtags"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Upload.vue"],"sourcesContent":["<template>\n<div id = 'download'>\n    <div id = 'loadingscreen'><div class=\"loader\"></div></div>\n    <div id = 'upload'>\n        <div id = 'upload_tables'>\n            <table>\n                <tr>\n                    <td class='category'>Alternative</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td class='category'>URL</td>\n                    <td><input type = \"text\" id = 'urltextbox' name = 'url' maxlength=\"34\" style='width:280px' ></td>\n                </tr>\n                <tr>\n                    <td class = 'category'>Authors</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td class='category'>Genres</td>\n                    <td  @click='showGenres()'>{{selectedgenres}}</td>\n                </tr>\n                <tr>\n                    <td class='category'>Tags</td>\n                    <td @click='showTags()'></td>\n                    </tr>\n            </table>\n            <table>\n                <tr>\n                    <td class='category'>Release</td>\n                    <td>20XX</td>\n                </tr>\n                <tr>\n                    <td class='category'>Status</td>\n                    <td>Unreleased</td>\n                </tr>\n                <tr>\n                    <td class='category'>Novel</td>\n                    <td>\n                        <select id = 'completedEdit'>\n                            <option value = 'Ongoing'>Ongoing</option>\n                            <option value = 'Completed' selected>Completed</option>\n                            <option value = 'On Hold'>On Hold</option>\n                            <option value = 'Dropped'>Dropped</option>\n                        </select>\n                     </td>\n                </tr>\n       \n            </table>\n        </div>\n        <div id = 'genre-selector'>\n             <GenreSelector\n                :genres='genres'\n                :selectedgenres='selectedgenres'\n                \n                />\n        </div>\n        <TagSelector\n            :tags='tags'\n            :selectedtags='selectedtags'\n            id = 'tag-selector'\n        />\n    </div>\n    <input type = 'submit' @click='postData()'>\n    \n\n</div>\n</template>\n<script>\nimport { getAPI } from '../axios-api'\nimport tagBox from '../components/TagBox'\nimport GenreSelector from '../components/GenreSelector'\nimport TagSelector from '../components/TagSelector'\nexport default{\n    data(){\n        return{\n            genres:[],\n            tags:[],\n            selectedtags:[],\n            selectedgenres:[],\n            image:[]\n        }\n    },\n    components:{\n        tagBox,\n        GenreSelector,\n        TagSelector\n    },\nmethods:{\n        postData(){\n            const loadingscreen = document.getElementById('loadingscreen')\n            loadingscreen.style.display = 'block'\n            const url = document.getElementById('urltextbox').value;\n            const genres = document.getElementsByClassName('genrecheckbox')\n            const files = document.getElementById('cover-image').files\n            var selectedGenres = []\n            var image = document.getElementById('output');\n\t        const upload = URL.createObjectURL(files[0]);\n            console.log(upload)\n            for(var i=0; i < genres.length; i++){\n                if(genres[i].checked==true){\n                    selectedGenres.push(genres[i].value)\n                }\n            }\n            console.log('posted')\n            getAPI.post('/novel/single', {url:url,tags:this.selectedtags,genres:selectedGenres,image:upload})\n                .then(function (response) {\n                    console.log(response);\n                    loadingscreen.style.display = 'none'\n            })\n                .catch(function (error) {\n                    console.log(error);\n                    loadingscreen.style.display = 'none'\n            }); \n        },\n        showFile(){\n            /*\n            const file = document.getElementById('cover-image').files[0]\n            var image = document.getElementById('output')\n\t        //image.src = URL.createObjectURL(file);\n            console.log(file)\n            console.log(image.src)\n            let data = new FormData()\n            data.append('file', file, file.name)\n            /*\n            getAPI.post('/test',data, {headers: {\"Content-Type\": \"multipart/form-data\"}}).then((res) => {\n                console.log(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            */\n\n            \n        },\n        showGenres(){\n            var genre_selector = document.getElementById('genre-selector')\n            document.getElementById('tag-selector').style.display='none'\n            if(genre_selector.style.display=='flex'){\n                genre_selector.style.display = 'none'\n            }else{\n                genre_selector.style.display = 'flex'\n            }\n        },\n        showTags(){\n            var tag_selector = document.getElementById('tag-selector')\n            document.getElementById('genre-selector').style.display='none'\n            if(tag_selector.style.display=='flex'){\n                tag_selector.style.display = 'none'\n            }else{\n                tag_selector.style.display = 'flex'\n            }\n        },\n    },\n    created(){\n        getAPI.get('/uploaddata')\n          .then(response => {\n            console.log('Descriptor API has recieved data')\n            this.genres = response.data['genres']\n            this.tags = response.data['tags']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          \n    }\n}\n</script>\n<style scoped>\ntable{\n    height:fit-content;\n}\nbutton{\n    background:none;\n    border-right:none\n}\n#upload{\n    box-shadow: 0 4px 8px 0 var(--shadowColor), 0 6px 20px 0 var(--shadowColor);\n     border-radius:20px;\n     padding:20px;\n}\ninput{\n    margin-right:5px;\n}\n#download{\n    width:100%;\n    height:fit-content;\n}\n#genre-selector{\n    display:none;\n}\n#tag-selector{\n    display:none;\n}\n.loader {\n  border: 16px solid #f3f3f3; /* Light grey */\n  border-top: 16px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  animation: spin 2s linear infinite;\n  margin:auto;\n  margin-top:170px;\n\n}\n#loadingscreen{\n    display:none;\n    position:absolute;\n    z-index:5;\n    width:100%;\n    height:100%;\n    background-color:rgba(0,0,0,0.5)\n}\n#upload_tables{\n    display:flex;\n    flex-direction:row;\n     \n    \n}\n.category{\n    width:120px;\n    height:30px;\n    padding-right:10px;\n   \n}\n#completedEdit{\n     background-color:transparent;\n    border:none;\n    appearance: none;\n}\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n@media (max-width: 775px) {\n    #genres{\n        grid-template-rows: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\n        width:300px;\n        margin-left:20px;\n    }\n    #tagList{\n        width:350px;\n    }\n    #tagselector{\n        width:350px;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}