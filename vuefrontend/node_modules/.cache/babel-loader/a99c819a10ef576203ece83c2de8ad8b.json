{"ast":null,"code":"import Navigator from '../components/Navigator';\nimport UtfBox from '../components/UtfBox';\nimport NavButton from '../components/Navbutton';\nimport { getAPI } from '../axios-api';\nexport default {\n  name: 'CoverPage',\n  components: {\n    UtfBox,\n    Navigator,\n    NavButton\n  },\n  props: ['novelData', 'sectionList', 'chapterList', 'tier'],\n\n  data() {\n    return {\n      editable: false\n    };\n  },\n\n  methods: {\n    trigger(d1) {\n      var x = document.getElementById(d1);\n\n      if (x.style.display == \"none\") {\n        x.style.display = \"block\";\n      } else {\n        x.style.display = \"none\";\n      }\n    },\n\n    sortToc() {\n      this.chapterList.reverse();\n      this.sectionList.reverse();\n    },\n\n    showMore() {\n      //console.log('clicked')\n      document.getElementById('table').style.maxHeight = \"none\";\n      document.getElementById('showMore').style.display = 'none';\n    },\n\n    changeEditMode() {\n      if (this.editable) {\n        this.editable = false;\n        this.novelData.genres = document.getElementById('genreEdit').innerHTML.split(',');\n        this.novelData.tags = document.getElementById('tagEdit').innerHTML.split(',');\n        this.novelData.completed = document.getElementById('completedEdit').value;\n        this.novelData.description = document.getElementById('description').innerHTML;\n        const url = '/novel/single?novel=' + this.$route.params.title;\n        document.getElementById('editButton').innerHTML = 'Edit';\n        document.getElementById('description').contentEditable = \"false\";\n        document.getElementById('noveltitle').contentEditable = \"false\";\n        getAPI.put(url, {\n          description: this.novelData.description,\n          tags: this.novelData.tags,\n          genres: this.novelData.genres,\n          completed: this.novelData.completed\n        }).then(function (response) {\n          console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.editable = true;\n        document.getElementById('editButton').innerHTML = 'Save';\n        document.getElementById('description').contentEditable = \"true\";\n        document.getElementById('noveltitle').contentEditable = \"true\";\n      }\n    }\n\n  },\n\n  created() {\n    this.chapterList.sort((a, b) => a.chapternumber > b.chapternumber ? -1 : 1);\n    this.sectionList.sort((a, b) => a.section > b.section ? -1 : 1);\n  },\n\n  mounted() {\n    console.log(document.getElementById('table').offsetHeight);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["Navigator","UtfBox","NavButton","getAPI","name","components","props","data","editable","methods","trigger","d1","x","document","getElementById","style","display","sortToc","chapterList","reverse","sectionList","showMore","maxHeight","changeEditMode","novelData","genres","innerHTML","split","tags","completed","value","description","url","$route","params","title","contentEditable","put","then","response","console","log","catch","error","created","sort","a","b","chapternumber","section","mounted","offsetHeight"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/CoverPage.vue"],"sourcesContent":["<template>\n<div>\n\n <!--COVER-->\n  <div id=\"cover\" ref = 'cover'>\n    <div class = \"content\"  v-if='novelData.title'>\n        <Navigator\n         :novelid='novelData.id'\n         :novel='novelData.title'\n        />\n        <p id = \"noveltitle\" v-text='novelData.title'/>\n        <div id = \"inner\">\n            <img id = \"image-border\" :src=\"novelData.imageurl\" v-if='novelData.imageurl'>\n            <div id = \"tables\">\n             <div id = \"data\">\n                <table>\n                    <tr><td>Alternative</td><td v-text='novelData.alternativetitle' class=\"info\"/></tr>\n                    <tr><td>Raw</td><td class=\"info\"><a :href=\"novelData.url\">{{novelData.url}}</a></td></tr>\n                    <tr><td>Author</td><td class=\"info\">\n                        <router-link :to = \"{name: 'explorePage', params:{browsetype:'novel-authors',identifier:novelData.authors}}\" class='selectable'>{{novelData.authors}}</router-link>\n                    </td></tr>\n                    <tr>\n                        <td>Genres</td>\n                        <td class=\"info\">\n                            <ul class='comma-list' v-if='!editable'>\n                                <li v-for='genre in novelData.genres' :key='genre'>\n                                    <router-link :to = \"{name: 'explorePage', params:{browsetype:'novel-genres',identifier:genre}}\" class='selectable'>{{genre}}</router-link>\n                                </li>\n                            </ul>\n                            <p v-else v-text='novelData.genres.join()' contenteditable=\"true\" id = 'genreEdit' class='editor'/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Tags</td>\n                        <td class=\"info\">\n                            <ul class='comma-list' v-if='!editable'>\n                                <li v-for='tag in novelData.tags' :key='tag'>\n                                    <router-link :to = \"{name: 'explorePage', params:{browsetype:'novel-tags',identifier:tag}}\" class='selectable' v-html='tag'/>\n                                </li>\n                            </ul>\n                            <p v-else v-html='novelData.tags.join()' contenteditable=\"true\" id = 'tagEdit' class='editor'/>\n                        </td>\n                    </tr>\n                </table>\n                <table>\n                    <tr><td>Release</td><td class=\"info\" v-text='novelData.novelrelease'/></tr>\n                    <tr><td>Status</td>\n                      <td class=\"info\">\n                      <router-link :to = \"{name: 'explorePage', params:{browsetype:'novel-status',identifier:novelData.uploadstatus}}\" class='selectable'>\n                        {{novelData.uploadstatus}}\n                      </router-link></td>\n                    </tr>\n                    <tr><td>Novel</td>\n                        <td class=\"info\" v-if='!editable'>{{ novelData.novelstatus}}</td>\n                        <td class=\"info\" v-else>\n                            <select id = 'completedEdit' :selected='value==novelData.novelstatus'>\n                                <option value = 'Ongoing'>Ongoing</option>\n                                <option value = 'Completed'>Completed</option>\n                                <option value = 'On Hold'>On Hold</option>\n                                <option value = 'Dropped'>Dropped</option>\n                                <option value = 'Unreleased'>Unreleased</option>\n                            </select>\n                        </td>\n                    </tr>\n                </table>\n             </div>\n             <br>\n             \n             <NavButton \n                :first=\"1\"\n                :last='chapterList.length'\n             />\n             <br>\n             <button v-if='tier==5' id = 'editButton' @click='changeEditMode()'>Edit</button>\n            </div>   \n        </div>     \n    </div>\n</div>\n  <br>\n  <!--SUMMARY-->\n  <div id = \"summary\">\n        <div class = \"content\"  v-if='novelData.title'>\n           <div style = \"display:flex;flex-direction:row;border-bottom:2px lightgray solid;height:30px;\"><UtfBox shape = '&#9733;'/><h3 id = \"divider\">SUMMARY</h3></div><br>\n            <p id=\"description\" v-html = 'novelData.description'/>\n        </div>\n    </div>\n <!--TABLE OF CONTENTS-->\n  <div id = \"TableOfContents\">\n        <div style = \"display:flex;flex-direction:row;border-bottom:2px lightgray solid;height:30px;\">\n            <UtfBox shape = '&#xe047;'/>\n            <h3  id = \"divider\">Latest Chapters</h3>\n            <button id = \"switcher\" @click =\"sortToc\">&#x21C5;</button>\n        </div>\n        <ul  id = 'table' ref='tableofcontentlist'>\n        <li v-for=\"section in sectionList\" :key=\"section.section\">\n            <button v-if='section.title' @click=\"trigger(section.section)\" class = 'section'>\n                <h3 v-text='section.title'/>\n                <p class = \"expand\">-</p>\n            </button>\n            <br>\n            <ul v-bind:id = \"section.section\">\n                <li v-for=\"chapter in chapterList.filter(chapter=>chapter.section==section.section)\" :key='chapter.chapterNumber'>\n                <router-link \n                    :to = \"{name: 'chapterPage', params:{title:novelData.novelid,chapter:chapter.chapternumber}}\" id=\"group\">\n                    <p id = \"title\">{{chapter.title}}</p>\n                    <p id = \"date\">{{new Date(chapter.date).toLocaleString('default', { month: 'long', day:'numeric', year:'numeric' })}}</p>\n                </router-link>\n                </li>\n            </ul>\n        </li>\n        </ul>\n        <ul v-if='sectionList.length==0'>\n                <li v-for=\"chapter in chapterList\" :key='chapter.chapterNumber'>\n                <router-link \n                    :to = \"{name: 'chapterPage', params:{title:novelData.novelid,chapter:chapter.chapternumber}}\" id=\"group\">\n                    <p id = \"title\">{{chapter.title}}</p>\n                    <p id = \"date\">{{new Date(chapter.date).toLocaleString('default', { month: 'long', day:'numeric', year:'numeric' })}}</p>\n                </router-link>\n                </li>\n            </ul>\n        <button @click='showMore()' id = 'showMore'>Show More &#9662;</button>\n    </div>\n</div>\n</template>\n\n<script>\n  import Navigator from '../components/Navigator'\n  import UtfBox from '../components/UtfBox'\n  import NavButton from '../components/Navbutton'\n  import {getAPI} from '../axios-api'\n  export default {\n    name: 'CoverPage',\n    components: {\n      UtfBox,\n      Navigator,\n      NavButton\n    },\n    props:[\n        'novelData',\n        'sectionList',\n        'chapterList',\n        'tier'\n    ],data(){\n        return{\n        editable:false\n        }\n    }\n    ,methods:{\n        trigger(d1){\n            var x = document.getElementById(d1);\n            if (x.style.display == \"none\") {\n                x.style.display = \"block\";\n            } else {\n                x.style.display = \"none\";\n            }\n        },\n        sortToc(){\n            this.chapterList.reverse()\n            this.sectionList.reverse()\n        },\n       showMore(){\n           //console.log('clicked')\n           document.getElementById('table').style.maxHeight=\"none\";\n           document.getElementById('showMore').style.display='none'\n       },\n       changeEditMode(){\n           if(this.editable){\n               this.editable=false\n               this.novelData.genres = document.getElementById('genreEdit').innerHTML.split(',')\n               this.novelData.tags = document.getElementById('tagEdit').innerHTML.split(',')\n               this.novelData.completed=document.getElementById('completedEdit').value\n               this.novelData.description=document.getElementById('description').innerHTML\n               const url = '/novel/single?novel='+this.$route.params.title\n               document.getElementById('editButton').innerHTML='Edit'\n               document.getElementById('description').contentEditable = \"false\"\n               document.getElementById('noveltitle').contentEditable = \"false\"\n               getAPI.put(url,{\n                   description:this.novelData.description,\n                   tags:this.novelData.tags,\n                   genres:this.novelData.genres,\n                   completed:this.novelData.completed\n               }).then(function (response) {\n                    console.log(response);\n            })\n                .catch(function (error) {\n                    console.log(error);\n            })\n               \n    \n            }else{\n               this.editable=true\n               document.getElementById('editButton').innerHTML='Save'\n               document.getElementById('description').contentEditable = \"true\"\n               document.getElementById('noveltitle').contentEditable = \"true\"\n            }\n          \n       }\n       \n    },\n    created(){\n        this.chapterList.sort((a,b) =>(a.chapternumber > b.chapternumber ? -1:1))\n        this.sectionList.sort((a,b) =>(a.section > b.section ? -1:1))\n    },\n    mounted(){\n        console.log(document.getElementById('table').offsetHeight);\n    }\n  }\n</script>\n<style scoped>\n *{\n    font-weight:300;\n } \n \n#summary{\n    width: 100%;\n    text-align: left;\n    display: flex;\n    flex-direction: column;\n    align-self: center;\n    height:fit-content;\n}\n\n#description{\n    width:100%;\n    font-size: 14px;\n    color:rgb(136,136,136);\n    height:fit-content;\n}\n#TableOfContents{\n    width: 1110px;\n    margin:auto;\n    vertical-align:center;\n    user-select: none;\n    -webkit-user-select: none;\n    -webkit-touch-callout: none; \n    border:none;\n}\n a{\n      color:rgb(139, 139, 139);\n      font-size: 12px;\n      text-decoration:none;\n  }\n  a:hover{\n      color:var(--styleColor)\n  }\n  #navigator{\n      margin-bottom:30px;\n      margin-top: 30px;\n  }\n  #inner{\n      align-self:center;\n      display:flex;\n      flex-direction:row;\n      width:100%;\n      transition: all .2s ease;\n  }\n  \n  #image-border{\n    max-height:313px;\n    background-color: white;\n    float:left;\n    padding-left: 15px;\n    padding-right:15px;\n    margin-right:30px;\n    transition: all .2s ease;\n}\n  #noveltitle{\n      color: var(--styleColor);\n      font-size: 20px;\n      margin-bottom: 25px;\n      line-height:20px;\n      height:fit-content;\n  }\n \n  #tables{\n      background-color: rgba(250, 250, 250, 0.8);\n      padding:20px;\n      width: 100%;\n      height:fit-content;\n      display: flex;\n      flex-direction: column;\n  }\n  #data{\n      display:flex;\n      flex-direction:row;\n  }\n  table{\n      display:inline;\n      font-size: 15px;\n      max-width: 100%;\n      \n  }\n  td{\n      font-weight: bold;\n      padding-bottom: 10px;\n      padding-right:20px;\n      width:15%;\n      min-width:125px;\n      vertical-align: top;\n      \n  }\n  td.info{\n      font-weight:normal;\n      width: 85%;\n      line-height: 20px;\n      vertical-align: bottom;\n      color:rgb(136,136,136);\n  }\n  td.info a{\n    color:black;\n  }\n  a:hover { \n    color: var(--styleColor);\n    transition: all .2s ease;\n  }\n  .comma-list {\n  display: inline;\n}\n.comma-list li {\n  display: inline;\n}\n.selectable:hover {\n  color:var(--styleColor);\n  text-decoration:none;\n}\n.comma-list li::after {\n  content: \", \";\n}\n.comma-list li:last-child::after {\n    content: \"\";\n}\n#editButton{\n    background-color:var(--styleColor);\n    color:white;\n}\n.editor{\n    font-size:12px;\n    height:12px;\n}\n  @media (max-width: 1200px){\n      #buttons{\n        margin: auto;\n     }\n     #TableOfContents{\n         width:92.5%; \n      }\n  }\n  @media (max-width:1000px) {\n    #image-border{\n        padding: 0px;\n        height:fit-content;\n    }\n    #data{\n      flex-direction:column;\n    }\n  }\n  @media (max-width: 775px) {\n    /* CSS that should be displayed if width is equal to or less than 800px goes here */\n    #image-border{\n        margin:auto;\n        margin-bottom: 20px;\n    }\n    #inner{\n        flex-direction:column;\n    }\n    #noveltitle{\n        margin-bottom: 0px;\n    }\n    #tables{\n        margin: auto;\n        min-width: 500px;\n        \n    }\n    td.info{\n        max-width: 100%; \n    }\n    #TableOfContents{\n    width:545;\n    transition: all .3s ease;\n\n}\n  }\n  @media (max-width:675px) {\n    #image-border{\n        padding: 15px;\n        width: 220px;\n        height: 305px;\n        \n        \n    }\n  }\n  \n#table{\n    height:fit-content;\n    max-height:1000px;\n    overflow-y:hidden;\n}\n#showMore{\n    margin-left:auto;\n    margin-right:auto;\n    width:fit-content;\n    font-weight:bold;\n    background:none;\n}\n\n.section{\n    width:100%;\n    display:flex;\n    flex-direction:row;\n    border:none;\n    background:none;\n    height:45px;\n    position: relative;\n    padding-top:15px;\n    font-weight:300;\n   \n\n}\n#switcher{\n    width:30px;\n    height:30px;\n    font-size:18px;\n    padding:0;\n    margin-left:50px;\n    font-weight:bold;\n     background:none;\n    justify-content:center;\n}\n.expand{\n    position:absolute;\n    right:0;\n    background-color:lightgray;\n    height:25px;\n    width:25px;\n    vertical-align:center;\n    line-height:25px;\n    font-size:20px;\n    font-weight:lighter;\n    \n}\n\nbutton:hover{\n    color:var(--styleColor);\n}\nul{\n    list-style: none;\n    padding: 0px;\n}\n#date{\n    font-size:11px;\n    position:absolute;\n    right:0;\n    font-style:italic;\n    line-height:15px;\n    color:gray;\n    margin-right:10px;\n}\n#title{\n    padding-left:10px;\n    position:absolute;\n    line-height:15px;\n    left:5;\n    font-size:17px;\n}\n#group{\n    width:100%;\n    display:flex;\n    flex-direction:row;\n    border:none;\n    background:none;\n    height:45px;\n    position: relative;\n    padding-top:15px;\n    font-weight:300;\n    vertical-align:center;\n    margin-top:2px;\n}\n#group:hover{\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n#group:hover #title{\ncolor:var(--styleColor);\nfont-weight:bold;\n}\nselect{\n    background:none;\n    border:none;\n    -webkit-appearance: none;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module"}