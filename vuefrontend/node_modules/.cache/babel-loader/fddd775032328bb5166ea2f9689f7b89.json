{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { getAPI } from '../axios-api';\nimport tagBox from '../components/TagBox';\nexport default {\n  name: 'Upload',\n\n  data() {\n    return {\n      genres: [],\n      tags: [],\n      selectedtags: [],\n      selectedgenres: []\n    };\n  },\n\n  components: {\n    tagBox\n  },\n  methods: {\n    showHideTagList(display) {\n      const x = document.getElementById('tagSelect');\n      if (!x) return null;\n\n      if (display == 1) {\n        x.style.display = \"block\";\n      } else {\n        x.style.display = \"none\";\n      }\n    },\n\n    addTag() {\n      const tag = document.getElementById('tagSelect').value;\n\n      if (!this.selectedtags.includes(tag)) {\n        this.selectedtags.push(tag);\n      }\n\n      console.log(this.selectedtags);\n    },\n\n    removeTag(removetag) {\n      console.log(removetag);\n      const index = this.selectedtags.indexOf(removetag);\n      this.selectedtags.splice(index, 1);\n    },\n\n    postData() {\n      const loadingscreen = document.getElementById('loadingscreen');\n      loadingscreen.style.display = 'block';\n      const form = document.getElementById('download');\n      const selectedGenres = 'Fantasy, Comedy'; //form['genres'].value\n\n      const url = form['url'].value;\n      console.log('posted');\n      getAPI.post('/novel/single', {\n        url: url,\n        tags: this.selectedtags,\n        genres: selectedGenres\n      }).then(function (response) {\n        console.log(response);\n        loadingscreen.style.display = 'none';\n      }).catch(function (error) {\n        console.log(error);\n        loadingscreen.style.display = 'none';\n      });\n    }\n\n  },\n\n  created() {\n    getAPI.get('/uploaddata').then(response => {\n      console.log('Chapter API has recieved data');\n      this.genres = response.data['genres'];\n      this.tags = response.data['tags'];\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":";AAgCA,SAASA,MAAT,QAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,eAAc;EACVC,IAAI,EAAC,QADK;;EAEVC,IAAI,GAAE;IACF,OAAM;MACFC,MAAM,EAAC,EADL;MAEFC,IAAI,EAAC,EAFH;MAGFC,YAAY,EAAC,EAHX;MAIFC,cAAc,EAAC;IAJb,CAAN;EAMH,CATS;;EAUVC,UAAU,EAAC;IACPP;EADO,CAVD;EAaVQ,OAAO,EAAC;IACJC,eAAe,CAACC,OAAD,EAAS;MACpB,MAAMC,IAAIC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAV;MACA,IAAG,CAACF,CAAJ,EAAM,OAAO,IAAP;;MACN,IAAID,OAAO,IAAE,CAAb,EAAgB;QACZC,CAAC,CAACG,KAAF,CAAQJ,OAAR,GAAkB,OAAlB;MACJ,CAFA,MAEO;QACHC,CAAC,CAACG,KAAF,CAAQJ,OAAR,GAAkB,MAAlB;MACJ;IAEH,CAVG;;IAWJK,MAAM,GAAE;MACJ,MAAMC,GAAE,GAAIJ,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCI,KAAjD;;MACA,IAAG,CAAC,KAAKZ,YAAL,CAAkBa,QAAlB,CAA2BF,GAA3B,CAAJ,EAAoC;QAChC,KAAKX,YAAL,CAAkBc,IAAlB,CAAuBH,GAAvB;MACJ;;MACAI,OAAO,CAACC,GAAR,CAAY,KAAKhB,YAAjB;IACH,CAjBG;;IAkBJiB,SAAS,CAACC,SAAD,EAAW;MAChBH,OAAO,CAACC,GAAR,CAAYE,SAAZ;MACA,MAAMC,KAAI,GAAI,KAAKnB,YAAL,CAAkBoB,OAAlB,CAA0BF,SAA1B,CAAd;MACA,KAAKlB,YAAL,CAAkBqB,MAAlB,CAAyBF,KAAzB,EAA+B,CAA/B;IACH,CAtBG;;IAuBJG,QAAQ,GAAE;MACN,MAAMC,aAAY,GAAIhB,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAtB;MACAe,aAAa,CAACd,KAAd,CAAoBJ,OAApB,GAA8B,OAA9B;MACA,MAAMmB,IAAG,GAAIjB,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAb;MACA,MAAMiB,cAAa,GAAI,iBAAvB,CAJM,CAIkC;;MACxC,MAAMC,GAAE,GAAIF,IAAI,CAAC,KAAD,CAAJ,CAAYZ,KAAxB;MACAG,OAAO,CAACC,GAAR,CAAY,QAAZ;MACAtB,MAAM,CAACiC,IAAP,CAAY,eAAZ,EAA6B;QAACD,GAAG,EAACA,GAAL;QAAS3B,IAAI,EAAC,KAAKC,YAAnB;QAAgCF,MAAM,EAAC2B;MAAvC,CAA7B,EACKG,IADL,CACU,UAAUC,QAAV,EAAoB;QACtBd,OAAO,CAACC,GAAR,CAAYa,QAAZ;QACAN,aAAa,CAACd,KAAd,CAAoBJ,OAApB,GAA8B,MAA9B;MACP,CAJD,EAKKyB,KALL,CAKW,UAAUC,KAAV,EAAiB;QACpBhB,OAAO,CAACC,GAAR,CAAYe,KAAZ;QACAR,aAAa,CAACd,KAAd,CAAoBJ,OAApB,GAA8B,MAA9B;MACP,CARD;IASJ;;EAvCI,CAbE;;EAsDV2B,OAAO,GAAE;IACLtC,MAAM,CAACuC,GAAP,CAAW,aAAX,EACGL,IADH,CACQC,QAAO,IAAK;MAChBd,OAAO,CAACC,GAAR,CAAY,+BAAZ;MACA,KAAKlB,MAAL,GAAc+B,QAAQ,CAAChC,IAAT,CAAc,QAAd,CAAd;MACA,KAAKE,IAAL,GAAY8B,QAAQ,CAAChC,IAAT,CAAc,MAAd,CAAZ;IACD,CALH,EAMGiC,KANH,CAMSI,GAAE,IAAK;MACZnB,OAAO,CAACC,GAAR,CAAYkB,GAAZ;IACD,CARH;EASJ;;AAhEU,CAAd","names":["getAPI","tagBox","name","data","genres","tags","selectedtags","selectedgenres","components","methods","showHideTagList","display","x","document","getElementById","style","addTag","tag","value","includes","push","console","log","removeTag","removetag","index","indexOf","splice","postData","loadingscreen","form","selectedGenres","url","post","then","response","catch","error","created","get","err"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/Upload.vue"],"sourcesContent":["<template>\n<div class = 'content'>\n<div id = 'managementnavigator'>\n<button>Upload</button>\n<button>Schedule</button>\n<button>Edit</button>\n<button>Manage Users</button>\n</div>\n\n<form id = 'download' >\n<div id = 'loadingscreen'><div class=\"loader\"></div></div>\n<label for=\"fname\">URL:</label>\n<input type = \"text\" id = 'urltextbox' name = 'url' maxlength=\"34\" style='width:280px' >\n<div id = 'genres'>\n<label v-for='genre in genres' :key = 'genre'><input type='checkbox' :value='genre' :name = 'genre' class = 'genrecheckbox'>{{genre}}</label>\n</div>\n<br><br>\n<select id = 'tagSelect' @change='addTag()' size = '20'>\n    <option v-for='tag in tags' :key = 'tag' v-html = 'tag'></option>\n</select>\n<input type = 'submit' @click='postData()'>\n<div  id = 'tagList'>\n<ul class = 'selectedtaglist'>\n    <li v-for='tag in selectedtags' :key = 'tag'><tagBox :tag='tag' @remove='removeTag'/></li>\n</ul>\n</div>\n</form>\n\n</div>\n</template>\n\n<script>\nimport { getAPI } from '../axios-api'\nimport tagBox from '../components/TagBox'\nexport default{\n    name:'Upload',\n    data(){\n        return{\n            genres:[],\n            tags:[],\n            selectedtags:[],\n            selectedgenres:[]\n        }\n    },\n    components:{\n        tagBox\n    },\n    methods:{\n        showHideTagList(display){\n            const x = document.getElementById('tagSelect')\n            if(!x)return null\n            if (display==1) {\n                x.style.display = \"block\";\n            } else {\n                x.style.display = \"none\";\n            }\n            \n        },\n        addTag(){\n            const tag = document.getElementById('tagSelect').value\n            if(!this.selectedtags.includes(tag)){\n                this.selectedtags.push(tag)\n            }\n            console.log(this.selectedtags)\n        },\n        removeTag(removetag){\n            console.log(removetag)\n            const index = this.selectedtags.indexOf(removetag)\n            this.selectedtags.splice(index,1)\n        },\n        postData(){\n            const loadingscreen = document.getElementById('loadingscreen')\n            loadingscreen.style.display = 'block'\n            const form = document.getElementById('download');\n            const selectedGenres = 'Fantasy, Comedy'//form['genres'].value\n            const url = form['url'].value\n            console.log('posted')\n            getAPI.post('/novel/single', {url:url,tags:this.selectedtags,genres:selectedGenres})\n                .then(function (response) {\n                    console.log(response);\n                    loadingscreen.style.display = 'none'\n            })\n                .catch(function (error) {\n                    console.log(error);\n                    loadingscreen.style.display = 'none'\n            }); \n        }\n    },\n    created(){\n        getAPI.get('/uploaddata')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.genres = response.data['genres']\n            this.tags = response.data['tags']\n          })\n          .catch(err => {\n            console.log(err)\n          })\n    }\n}\n</script>\n\n<style scoped>\n#tagList{\nborder: 2px rgb(244,244,244) solid;\nwidth:800px;\nheight:fit-content;\nmin-height:50px;\n}\n.content{\n    display:flex;\n    flex-direction:row;\n    height:1000px;\n    margin-top:100px;\n}\n.selectedtaglist{\n    display:inline;\n    list-style: none;\n    padding:0px;\n}\n.selectedtaglist li{\n    display:inline;\n    float:left;\n    margin-left:10px;\n}\n#managementnavigator{\n    height:100%;\n    background-color:lightgray;\n    width:30%;\n    display:flex;\n    flex-direction:column;\n}\nbutton{\n    background:none;\n    border-right:none\n}\n#genres{\n    position:relative;\n    display:grid;\n    grid-template-rows: auto auto auto auto auto auto auto auto auto;\n    grid-auto-flow: column;\n    column-gap: 30px;\n    row-gap:10px;\n    margin:auto;\n    width:100%\n}\ninput{\n    margin-right:5px;\n}\n#tagSelect{\n    display:none;\n    background:lightgray;\n    border:none;\n    -webkit-appearance: none;\n}\n#tags{\n    width:100%\n}\n#tagtextbox{\n    width:500px;\n    text-align:left;\n    overflow-wrap: break-word\n}\n#download{\n    width:1000px;\n    height:fit-content;\n}\n.loader {\n  border: 16px solid #f3f3f3; /* Light grey */\n  border-top: 16px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  animation: spin 2s linear infinite;\n  margin:auto;\n  margin-top:170px;\n\n}\n#loadingscreen{\n    display:none;\n    position:absolute;\n    z-index:5;\n    width:1000px;\n    height:500px;\n}\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n@media (max-width: 775px) {\n    #genres{\n        grid-template-rows: auto auto auto auto auto auto auto auto auto auto auto auto;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}