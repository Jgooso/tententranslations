{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-02d5851a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"confirmationBox\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"margin\": \"auto\"\n  }\n};\nconst _hoisted_3 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"row\",\n    \"margin\": \"auto\",\n    \"width\": \"220px\"\n  }\n};\nconst _hoisted_4 = [\"value\"];\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"toggle\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\"\n}), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"slider\"\n}), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"labels\",\n  \"data-on\": \"ON\",\n  \"data-off\": \"OFF\"\n})], -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = {\n  id: \"editTable\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Title\", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = [\"textContent\"];\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Description\", -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = [\"innerHTML\"];\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Novel Active\", -1\n/* HOISTED */\n));\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Raw Status\", -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = [\"selected\"];\n\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Ongoing\"\n}, \"Ongoing\", -1\n/* HOISTED */\n));\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Completed\"\n}, \"Completed\", -1\n/* HOISTED */\n));\n\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"On Hold\"\n}, \"On Hold\", -1\n/* HOISTED */\n));\n\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Dropped\"\n}, \"Dropped\", -1\n/* HOISTED */\n));\n\nconst _hoisted_18 = [_hoisted_14, _hoisted_15, _hoisted_16, _hoisted_17];\nconst _hoisted_19 = {\n  class: \"category\"\n};\nconst _hoisted_20 = {\n  id: \"genre-selector\"\n};\n\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"category\"\n}, \"Tags\", -1\n/* HOISTED */\n));\n\nconst _hoisted_22 = {\n  id: \"tag-selector\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GenreSelector = _resolveComponent(\"GenreSelector\");\n\n  const _component_TagSelector = _resolveComponent(\"TagSelector\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h1\", _hoisted_2, _toDisplayString($data.novelData.novelactive == 0 ? 'Confirm Activate Novel' : \"Confirm Deactivate Novel\"), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.confirm(2)),\n    class: \"confirmation-button\"\n  }, \"Confirm\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.confirm(1)),\n    class: \"confirmation-button\"\n  }, \"Cancel\")])]), _createElementVNode(\"select\", {\n    id: \"novel-selector\",\n    onChange: _cache[2] || (_cache[2] = $event => $options.selectNovel())\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.novelList, novel => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: novel.novelid\n    }, _toDisplayString(novel.title), 9\n    /* TEXT, PROPS */\n    , _hoisted_4);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))], 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_5, _createElementVNode(\"table\", _hoisted_6, [_createElementVNode(\"tr\", null, [_hoisted_7, _createElementVNode(\"td\", {\n    textContent: _toDisplayString($data.novelData.title),\n    contenteditable: \"true\",\n    id: \"novelTitle\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_8)]), _createElementVNode(\"tr\", null, [_hoisted_9, _createElementVNode(\"td\", {\n    innerHTML: $data.novelData.description,\n    contenteditable: \"true\",\n    id: \"novelDescription\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_10)]), _createElementVNode(\"tr\", null, [_hoisted_11, _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.confirm(0))\n  }, _toDisplayString($data.novelData.novelactive == 0 ? 'Activate Novel' : \"Deactivate Novel\"), 1\n  /* TEXT */\n  )])]), _createElementVNode(\"tr\", null, [_hoisted_12, _createElementVNode(\"td\", null, [_createElementVNode(\"select\", {\n    id: \"completedEdit\",\n    selected: _ctx.value = $data.novelData.novelstatus\n  }, _hoisted_18, 8\n  /* PROPS */\n  , _hoisted_13)])]), _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", _hoisted_19, [_createElementVNode(\"button\", {\n    id: \"show-genres\",\n    onClick: _cache[4] || (_cache[4] = $event => $options.showGenres())\n  }, \"Genres\")]), _createElementVNode(\"td\", _hoisted_20, [_createVNode(_component_GenreSelector, {\n    genres: $data.genres,\n    selectedgenres: $data.novelData.genres\n  }, null, 8\n  /* PROPS */\n  , [\"genres\", \"selectedgenres\"])])]), _createElementVNode(\"tr\", null, [_hoisted_21, _createElementVNode(\"td\", _hoisted_22, [_createVNode(_component_TagSelector, {\n    tags: $data.tags,\n    selectedtags: $data.novelData.tags\n  }, null, 8\n  /* PROPS */\n  , [\"tags\", \"selectedtags\"])])])]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.submit())\n  }, \"Submit\")]);\n}","map":{"version":3,"mappings":"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","names":["id","style","_createElementVNode","class","type","value","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_createElementBlock","_toDisplayString","$data","novelactive","onClick","$options","onChange","_Fragment","_renderList","novel","novelid","title","_hoisted_4","_hoisted_5","_hoisted_7","contenteditable","_hoisted_9","innerHTML","description","_hoisted_11","_hoisted_12","selected","_ctx","novelstatus","_createVNode","_component_GenreSelector","genres","selectedgenres","_hoisted_21","_component_TagSelector","tags","selectedtags"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/views/EditPage.vue"],"sourcesContent":["<template>\n<div>\n    <div id = 'confirmationBox'>\n        <h1 style = 'margin:auto;'>{{novelData.novelactive==0 ? 'Confirm Activate Novel' : \"Confirm Deactivate Novel\"}}</h1>\n        <div style='display:flex;flex-direction:row;margin:auto; width:220px'>\n        <button @click='confirm(2)' class = 'confirmation-button'>Confirm</button>\n        <button @click='confirm(1)' class = 'confirmation-button'>Cancel</button>\n        \n        </div>\n    </div>\n    <select id = 'novel-selector' @change=\"selectNovel()\">\n        <option v-for='novel in novelList' :value='novel.novelid'>{{novel.title}}</option>\n    </select>\n    <label class=\"toggle\">\n        <input type=\"checkbox\">\n        <span class=\"slider\"></span>\n        <span class=\"labels\" data-on=\"ON\" data-off=\"OFF\"></span>\n    </label>\n    <table id = 'editTable'>\n        <tr>\n            <td class = 'category'>Title</td>\n            <td v-text = 'novelData.title' contenteditable=\"true\" id = 'novelTitle'/>\n        </tr>\n        <tr>\n            <td  class = 'category'>Description</td>\n            <td v-html = 'novelData.description' contenteditable=\"true\" id = 'novelDescription'/>\n        </tr>\n        <tr>\n            <td  class = 'category'>Novel Active</td>\n            <td><button @click='confirm(0)'>{{novelData.novelactive==0 ? 'Activate Novel' : \"Deactivate Novel\"}}</button></td>\n        </tr>\n        <tr>\n            <td  class = 'category'>Raw Status</td>\n            <td>\n                <select id = 'completedEdit' :selected='value=novelData.novelstatus'>\n                    <option value = 'Ongoing'>Ongoing</option>\n                    <option value = 'Completed'>Completed</option>\n                    <option value = 'On Hold'>On Hold</option>\n                    <option value = 'Dropped'>Dropped</option>\n                </select>\n            </td>\n        </tr>\n        <tr>\n            <td  class = 'category'><button id = 'show-genres' @click='showGenres()'>Genres</button></td>\n            <td id = 'genre-selector'>\n                <GenreSelector\n                :genres='genres'\n                :selectedgenres='novelData.genres'\n                />\n            </td>\n        </tr>\n        <tr>\n            <td  class = 'category'>Tags</td>\n            <td id = 'tag-selector'>\n                <TagSelector\n                :tags='tags'\n                :selectedtags='novelData.tags'\n                />\n            </td>\n        </tr>\n    </table>\n    <button @click='submit()'>Submit</button>\n</div>\n</template>\n\n\n<script>\nimport { getAPI } from '../axios-api'\nimport GenreSelector from '../components/GenreSelector'\nimport TagSelector from '../components/TagSelector'\nexport default{\n    data (){\n        return{\n            selectednovel:[],\n            novelList:[],\n            novelData:[],\n            tags:[],\n            genres:[],\n        }\n    },\n    components:{\n        GenreSelector,\n        TagSelector\n    },\n    methods:{\n        confirm(open){\n            var confirmationBox = document.getElementById('confirmationBox')\n            if(open == 0){\n                confirmationBox.style.display = 'flex'\n            }else if(open == 1){\n                confirmationBox.style.display = 'none'\n            }else if(open == 2){\n                if(this.novelData.novelactive == 1){this.novelData.novelactive=0}\n                else{this.novelData.novelactive=1}\n                confirmationBox.style.display = 'none'\n            }\n        },\n        selectNovel(){\n            this.selectednovel = document.getElementById(\"novel-selector\").value\n            console.log(this.selectednovel)\n            const url = '/novel/single?novel='+this.selectednovel+'&tier=1&edit=True'\n            getAPI.get(url)\n          .then(response => {\n            console.log('Post Novel has recieved data')\n            this.novelData=response.data['Novel']\n            this.sectionList=response.data['Chapters'].filter(chapter => chapter.chapternumber == 0)\n            this.chapterList=response.data['Chapters'].filter(chapter => chapter.chapternumber != 0)\n            this.genres = response.data['Genres']\n            this.tags = response.data['Tags']\n            this.isMounted=true\n          })\n          .catch(err => {\n            console.log(err)\n          })\n       console.log(this.novelData)\n        },\n        submit(){\n            //const loadingscreen = document.getElementById('loadingscreen')\n            //loadingscreen.style.display = 'block'\n            const genres = document.getElementsByClassName('genrecheckbox')\n            var selectedGenres = []\n            for(var i=0; i < genres.length; i++){\n                if(genres[i].checked==true){\n                    selectedGenres.push(genres[i].value)\n                }\n            }\n            console.log('posted')\n               this.novelData.novelstatus=document.getElementById('completedEdit').value\n               this.novelData.description=document.getElementById('novelDescription').innerHTML\n               this.novelData.title=document.getElementById('novelTitle').innerHTML\n               const url = '/novel/single?novel='+this.selectednovel\n            getAPI.put(url,{\n                   description:this.novelData.description,\n                   tags:this.novelData.tags,\n                   genres:selectedGenres,\n                   completed:this.novelData.novelstatus,\n                   title:this.novelData.title,\n                   novelactive:this.novelData.novelactive\n               }).then(function (response) {\n                    console.log(response);\n            })\n                .catch(function (error) {\n                    console.log(error);\n            })\n        },\n        showGenres(){\n            var genre_selector = document.getElementById('genre-selector')\n            console.log(genre_selector)\n            if(genre_selector.style.display=='flex'){\n                genre_selector.style.display = 'none'\n                console.log('flex')\n            }else{\n                genre_selector.style.display = 'flex'\n                console.log('none')\n            }\n        }\n    },\n    created(){\n        getAPI.get('/noveltitles')\n          .then(response => {\n            console.log('Chapter API has recieved data')\n            this.novelList = response.data\n            console.log(response.data)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n    }\n}\n</script>\n<style scoped>\n#novel-selector{\n    width:80%;\n}\n.category{\n    width:100px;\n    height:50px;\n}\n#confirmationBox{\n    display:none;\n    background-color:lightgray;\n    width:350px;\n    height:350px;\n    flex-direction:column;\n    padding:20px;\n    position:fixed;\n    top:50%;\n    justify-content:center;\n    z-index:10;\n\n}\n.confirmation-button{\n    width:100px;\n    height:50px;\n    font-size:20px;\n    margin:auto;\n}\ntr{\n    margin-bottom:30px;\n}\n#genre-selector{\ndisplay:none;\n}\n#editTable{\n    width:70%;\n    height:100%;\n}\n.comma-list {\n  display: inline;\n  margin-left:0px;\n}\n.comma-list li {\n  display: inline;\n}\n.comma-list li::after {\n  content: \", \";\n}\n.comma-list li:last-child::after {\n    content: \"\";\n}\n#completedEdit{\n     background:none;\n    border:none;\n    -webkit-appearance: none;\n}\n#show-genres{\n    background-color:white;\n    border:none;\n    color: inherit;\n}\n.toggle {\n    --width: 100px;\n    --height: 20px;\n    position: relative;\n    display: inline-block;\n    width: var(--width);\n    height: var(--height);\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.3);\n    border-radius: var(--height);\n    cursor: pointer;\n}\n\n/* hiding checkbox */\n.toggle input {\n    display: none;\n}\n.toggle .slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: var(--height);\n    background-color: #ccc;\n    transition: all 0.4s ease-in-out;\n}\n.toggle .slider::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: calc(var(--height));\n    height: calc(var(--height));\n    border-radius: calc(var(--height) / 2);\n    background-color: #fff;\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.3);\n    transition: all 0.4s ease-in-out;\n}\n.toggle input:checked + .slider::before {\n    transform: translateX(calc(var(--width) - var(--height)));\n}\n/* Adding text in the toggle button */\n.toggle .labels {\n    position: absolute;\n    top: 8px;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    font-size: 12px;\n    font-family: sans-serif;\n    transition: all 0.4s ease-in-out;\n}\n\n.toggle .labels::after {\n    content: attr(data-off);\n    position: absolute;\n    right: 5px;\n    color: #4d4d4d;\n    opacity: 1;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n    transition: all 0.4s ease-in-out;\n}\n\n.toggle .labels::before {\n    content: attr(data-on);\n    position: absolute;\n    left: 5px;\n    color: #ffffff;\n    opacity: 0;\n    text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.4);\n    transition: all 0.4s ease-in-out;\n}\n\n.toggle input:checked~.labels::after {\n    opacity: 0;\n}\n\n.toggle input:checked~.labels::before {\n    opacity: 1;\n}\n@media (max-width: 775px) {\n    #editTable{\n        width:350px;\n    }\n    #novel-selector{\n        width:350px;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}