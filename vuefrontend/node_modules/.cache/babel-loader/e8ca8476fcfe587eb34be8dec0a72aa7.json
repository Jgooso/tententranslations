{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport tagBox from '../components/TagBox';\nexport default {\n  name: 'TagSelector',\n  props: ['tags', 'selectedtags'],\n  components: {\n    tagBox\n  },\n  methods: {\n    addTag(tag) {\n      const tagbutton = document.getElementById(tag);\n      tagbutton.classList.remove('unselected');\n\n      if (!this.selectedtags.includes(tag)) {\n        this.selectedtags.push(tag);\n      }\n\n      console.log(this.selectedtags);\n    },\n\n    removeTag(removetag) {\n      const index = this.selectedtags.indexOf(removetag);\n      this.selectedtags.splice(index, 1);\n      document.getElementById(removetag).classList.add('unselected');\n    },\n\n    filterTag() {\n      var input, tagbuttons, txtValue;\n      input = document.getElementById('tagfilter').value.toUpperCase();\n      tagbuttons = document.getElementsByClassName('tagbutton');\n\n      for (var i = 0; i < tagbuttons.length; i++) {\n        txtValue = tagbuttons[i].value || tagbuttons[i].innerText;\n\n        if (txtValue.toUpperCase().indexOf(input) > -1) {\n          tagbuttons[i].style.display = \"\";\n        } else {\n          tagbuttons[i].style.display = \"none\";\n        }\n      }\n    },\n\n    showtags() {\n      document.getElementById('tagselector').style.display = 'flex';\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAiBA,OAAOA,MAAP,MAAmB,sBAAnB;AACI,eAAc;EACVC,IAAI,EAAC,aADK;EAEVC,KAAK,EAAC,CACF,MADE,EAEF,cAFE,CAFI;EAMVC,UAAU,EAAC;IACPH;EADO,CAND;EASVI,OAAO,EAAC;IACJC,MAAM,CAACC,GAAD,EAAK;MACX,MAAMC,SAAQ,GAAIC,QAAQ,CAACC,cAAT,CAAwBH,GAAxB,CAAlB;MACAC,SAAS,CAACG,SAAV,CAAoBC,MAApB,CAA2B,YAA3B;;MACA,IAAG,CAAC,KAAKC,YAAL,CAAkBC,QAAlB,CAA2BP,GAA3B,CAAJ,EAAoC;QAChC,KAAKM,YAAL,CAAkBE,IAAlB,CAAuBR,GAAvB;MACJ;;MACAS,OAAO,CAACC,GAAR,CAAY,KAAKJ,YAAjB;IAEH,CATO;;IAURK,SAAS,CAACC,SAAD,EAAW;MAChB,MAAMC,KAAI,GAAI,KAAKP,YAAL,CAAkBQ,OAAlB,CAA0BF,SAA1B,CAAd;MACA,KAAKN,YAAL,CAAkBS,MAAlB,CAAyBF,KAAzB,EAA+B,CAA/B;MACAX,QAAQ,CAACC,cAAT,CAAwBS,SAAxB,EAAmCR,SAAnC,CAA6CY,GAA7C,CAAiD,YAAjD;IACH,CAdO;;IAeRC,SAAS,GAAE;MACP,IAAIC,KAAJ,EAAWC,UAAX,EAAuBC,QAAvB;MACAF,KAAI,GAAIhB,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCkB,KAArC,CAA2CC,WAA3C,EAAR;MACAH,UAAS,GAAIjB,QAAQ,CAACqB,sBAAT,CAAgC,WAAhC,CAAb;;MACA,KAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIL,UAAU,CAACM,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;QACtCJ,QAAO,GAAID,UAAU,CAACK,CAAD,CAAV,CAAcH,KAAd,IAAuBF,UAAU,CAACK,CAAD,CAAV,CAAcE,SAAhD;;QACA,IAAIN,QAAQ,CAACE,WAAT,GAAuBR,OAAvB,CAA+BI,KAA/B,IAAwC,CAAC,CAA7C,EAAgD;UAC5CC,UAAU,CAACK,CAAD,CAAV,CAAcG,KAAd,CAAoBC,OAApB,GAA8B,EAA9B;QACJ,CAFA,MAEO;UACHT,UAAU,CAACK,CAAD,CAAV,CAAcG,KAAd,CAAoBC,OAApB,GAA8B,MAA9B;QACJ;MACJ;IACH,CA3BO;;IA4BRC,QAAQ,GAAE;MACN3B,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCwB,KAAvC,CAA6CC,OAA7C,GAAuD,MAAvD;IACH;;EA9BO;AATE,CAAd","names":["tagBox","name","props","components","methods","addTag","tag","tagbutton","document","getElementById","classList","remove","selectedtags","includes","push","console","log","removeTag","removetag","index","indexOf","splice","add","filterTag","input","tagbuttons","txtValue","value","toUpperCase","getElementsByClassName","i","length","innerText","style","display","showtags"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/TagSelector.vue"],"sourcesContent":["<template>\n<label for='tagfilter'>Filter\n        <input id = 'tagfilter' @keyup='filterTag()' @focus='showtags()'>\n    </label>\n    <div  id = 'tagList'>\n        <ul class = 'selectedtaglist' >\n            <li v-for='tag in selectedtags' :key = 'tag'>\n                <tagBox :tag='tag' @remove='removeTag'/>\n            </li>\n        </ul>\n        <div id = 'tagselector'>\n            <button v-for='tag in tags' :key='tag' class = 'tagbutton unselected' :id = 'tag' v-html='tag' @click='addTag(tag)'/>\n        </div>\n    </div>\n</template>\n\n<script>\nimport tagBox from '../components/TagBox'\n    export default{\n        name:'TagSelector',\n        props:[\n            'tags',\n            'selectedtags'\n        ],\n        components:{\n            tagBox\n        },\n        methods:{\n            addTag(tag){\n            const tagbutton = document.getElementById(tag)\n            tagbutton.classList.remove('unselected')\n            if(!this.selectedtags.includes(tag)){\n                this.selectedtags.push(tag)\n            }\n            console.log(this.selectedtags)\n           \n        },\n        removeTag(removetag){\n            const index = this.selectedtags.indexOf(removetag)\n            this.selectedtags.splice(index,1)\n            document.getElementById(removetag).classList.add('unselected')\n        },\n        filterTag(){\n            var input, tagbuttons, txtValue\n            input = document.getElementById('tagfilter').value.toUpperCase()\n            tagbuttons = document.getElementsByClassName('tagbutton')\n            for(var i = 0; i < tagbuttons.length; i++){\n                txtValue = tagbuttons[i].value || tagbuttons[i].innerText;\n                if (txtValue.toUpperCase().indexOf(input) > -1) {\n                    tagbuttons[i].style.display = \"\";\n                } else {\n                    tagbuttons[i].style.display = \"none\";\n                }\n            }\n        },\n        showtags(){\n            document.getElementById('tagselector').style.display = 'flex'\n        },\n        }\n    }\n</script>\n\n<style scoped>\n#tagList{\nborder: 2px rgb(244,244,244) solid;\nwidth:800px;\nheight:fit-content;\nmin-height:50px;\nfloat:left;\n\n}\n#tagfilter{\n    height:30px;\n}\n.selectedtaglist{\n    display:inline;\n    list-style: none;\n    padding:0px;\n}\n.selectedtaglist li{\n    display:inline;\n    float:left;\n    margin-left:10px;\n}\n\n#tagselector{\n    display:none;\n    flex-direction:column;\n    overflow:scroll;\n    height:500px;\n    width:100%;\n}\n.tagbutton{\n    border:none;\n    color:lightgray;\n}\n.unselected{\n    color:black;\n}\n.unselected:hover{\n    background-color:blue;\n    color:white;\n}\n#tagSelect{\n    background:lightgray;\n    border:none;\n    -webkit-appearance: none;\n}\n#tags{\n    width:100%\n}\n#tagtextbox{\n    width:500px;\n    text-align:left;\n    overflow-wrap: break-word\n}\n@media (max-width: 775px) {\n    #tagList{\n        width:350px;\n    }\n    #tagselector{\n        width:350px;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}