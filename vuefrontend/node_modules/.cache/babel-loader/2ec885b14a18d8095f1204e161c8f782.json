{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex flex-column align-items-center\"\n};\nconst _hoisted_2 = {\n  class: \"text-primary\"\n};\nconst _hoisted_3 = {\n  id: \"payment-form\",\n  class: \"w-75 px-5 d-flex flex-column align-items-center\"\n};\nconst _hoisted_4 = {\n  ref: \"card\",\n  class: \"form-control m-2\"\n};\nconst _hoisted_5 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString($data.msg) + \" \" + _toDisplayString($data.payAmount), 1\n  /* TEXT */\n  ), _createElementVNode(\"form\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" A Stripe Element will be inserted here. \")], 512\n  /* NEED_PATCH */\n  ), _createElementVNode(\"input\", {\n    disabled: $data.lockSubmit,\n    class: \"btn btn-primary shadow-sm\",\n    type: \"submit\",\n    value: \"Donate\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.purchase && $options.purchase(...args), [\"prevent\"]))\n  }, null, 8\n  /* PROPS */\n  , _hoisted_5)])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EACLA,KAAK,EAAC;;;EACJC,EAAE,EAAC;EAAeD,KAAK,EAAC;;;EACrBE,GAAG,EAAC;EAAOF,KAAK,EAAC;;;;uBAH5BG,oBAQM,KARN,cAQM,CAPJC,oBAAmD,IAAnD,cAAmDC,iBAAxBC,SAAwB,IAAnB,GAAmB,GAAlBD,iBAAEC,eAAF,CAAjC,EAA4C;EAAA;EAA5C,CAOI,EANJF,oBAKO,MALP,cAKO,CAJHA,oBAEM,KAFN,cAEM,CADJG,gEACI,CAFN;;EAAA,CAIG,EADHH,oBAA6H,OAA7H,EAA6H;IAArHI,QAAQ,EAAEF,gBAA2G;IAA/FN,KAAK,EAAC,2BAAyF;IAA7DS,IAAI,EAAC,QAAwD;IAA/CC,KAAK,EAAC,QAAyC;IAA3BC,OAAK,wDAAUC,+CAAV,EAAkB,WAAlB;EAAsB,CAA7H;;EAAA,aACG,CALP,CAMI,CARN","names":["class","id","ref","_createElementBlock","_createElementVNode","_toDisplayString","$data","_createCommentVNode","disabled","type","value","onClick","$options"],"sourceRoot":"","sources":["/Users/joshgoodman/Documents/GitHub/tententranslations/vuefrontend/src/components/StripeCard.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex flex-column align-items-center\">\n    <h2 class=\"text-primary\">{{msg}} {{payAmount}}</h2>\n    <form id=\"payment-form\" class=\"w-75 px-5 d-flex flex-column align-items-center\" >\n        <div ref=\"card\" class=\"form-control m-2\">\n          <!-- A Stripe Element will be inserted here. -->\n        </div>\n        <input :disabled=\"lockSubmit\" class=\"btn btn-primary shadow-sm\" type=\"submit\" value=\"Donate\" v-on:click.prevent=\"purchase\" />\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nlet stripe = Stripe(`pk_live_51L5d0fHlYhKzvWmvp72z9v2OaWS2tVyk9w4LPvRTs2H5s3txY36Y5DoChXe0aAYwAmUqCWFtHqZEE0chlURjOAgl00fZShWX43`),\n    elements = stripe.elements(),\n    card = undefined;\n\nexport default {\n    name:'StripeCard',\n    data(){\n        return {\n      spk:\"pk_test_51L5d0fHlYhKzvWmvoTeIQZRu94xVDT6rgJC9Lp9KZxoQaTM21qa8jahwmqFTBTB4h9p6bSp2gFGdbvakV0CpMNRf00KL6sxJNJ\",\n      stripe:undefined,\n      card:undefined,\n      msg: 'Donate Here',\n      payAmount:\"$10.00\",\n      lockSubmit:false,\n      api:\"http://localhost:8080/api/\"\n    }\n    },mounted: function () {\n    var self=this;\n    self.stripe= Stripe(\"pk_test_51L5d0fHlYhKzvWmvoTeIQZRu94xVDT6rgJC9Lp9KZxoQaTM21qa8jahwmqFTBTB4h9p6bSp2gFGdbvakV0CpMNRf00KL6sxJNJ\");\n    self.card = self.stripe.elements().create('card');\n    self.card.mount(self.$refs.card);\n    console.log(self.stripe)\n  },\n  methods:{\n    purchase() {\n      var self = this;\n      self.lockSubmit=true\n      self.stripe.createToken(self.card).then(function(result) {\n        if (result.error) {\n          alert(result.error.message)\n          self.$forceUpdate(); // Forcing the DOM to update so the Stripe Element can update.\n          self.lockSubmit=false\n          return;\n        }\n        else{ \n          self.processTransaction(result.token.id)\n        }\n      })\n      .catch((err) => {\n        alert(\"error: \"+err.message)\n        self.lockSubmit=false\n      });\n    },\n    processTransaction(transactionToken){\n      var self=this;\n      var dt= {\n          amount:self.stripCurrency(self.payAmount), //stripe uses an int [with shifted decimal place] so we must convert our payment amount\n          currency:\"USD\",\n          description:\"something to say\",\n          token:transactionToken\n      }\n      /*\n      var route=self.api+\"/charge/card\"\n      axios.post(route,dt, {\n          headers: {\n          }\n      }).then(response => {\n          if(response.status==200){\n              alert(\"Transaction succeeded\")\n              self.lockSubmit=false\n          }\n          else{\n              throw new Error(\"failed donation\")\n          }\n      }).catch((err) => {\n          alert(\"error: \"+err.message)\n          self.lockSubmit=false\n      });\n      */\n    },\n    stripCurrency(val){\n      return val.replace(',','').replace('$','').replace('.','')\n    }\n  },\n\n}\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module"}